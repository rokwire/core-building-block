// Package Def provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package Def

import (
	"encoding/json"
	"fmt"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for DeviceType.
const (
	Desktop DeviceType = "desktop"
	Mobile  DeviceType = "mobile"
	Other   DeviceType = "other"
	Web     DeviceType = "web"
)

// Defines values for JWKAlg.
const (
	RS256 JWKAlg = "RS256"
)

// Defines values for JWKKty.
const (
	RSA JWKKty = "RSA"
)

// Defines values for JWKUse.
const (
	Sig JWKUse = "sig"
)

// Defines values for OrganizationType.
const (
	Huge   OrganizationType = "huge"
	Large  OrganizationType = "large"
	Medium OrganizationType = "medium"
	Micro  OrganizationType = "micro"
	Small  OrganizationType = "small"
)

// Defines values for ServiceAccountCredentialType.
const (
	ServiceAccountCredentialTypeSignature   ServiceAccountCredentialType = "signature"
	ServiceAccountCredentialTypeStaticToken ServiceAccountCredentialType = "static_token"
)

// Defines values for ServicesReqAccountAuthTypeLinkAuthType.
const (
	ServicesReqAccountAuthTypeLinkAuthTypeEmail        ServicesReqAccountAuthTypeLinkAuthType = "email"
	ServicesReqAccountAuthTypeLinkAuthTypeIllinoisOidc ServicesReqAccountAuthTypeLinkAuthType = "illinois_oidc"
	ServicesReqAccountAuthTypeLinkAuthTypeTwilioPhone  ServicesReqAccountAuthTypeLinkAuthType = "twilio_phone"
	ServicesReqAccountAuthTypeLinkAuthTypeUsername     ServicesReqAccountAuthTypeLinkAuthType = "username"
)

// Defines values for ServicesReqAccountAuthTypeUnlinkAuthType.
const (
	ServicesReqAccountAuthTypeUnlinkAuthTypeEmail        ServicesReqAccountAuthTypeUnlinkAuthType = "email"
	ServicesReqAccountAuthTypeUnlinkAuthTypeIllinoisOidc ServicesReqAccountAuthTypeUnlinkAuthType = "illinois_oidc"
	ServicesReqAccountAuthTypeUnlinkAuthTypeTwilioPhone  ServicesReqAccountAuthTypeUnlinkAuthType = "twilio_phone"
	ServicesReqAccountAuthTypeUnlinkAuthTypeUsername     ServicesReqAccountAuthTypeUnlinkAuthType = "username"
)

// Defines values for ServicesReqCredentialForgotInitiateAuthType.
const (
	ServicesReqCredentialForgotInitiateAuthTypeEmail ServicesReqCredentialForgotInitiateAuthType = "email"
)

// Defines values for ServicesReqCredentialSendVerifyAuthType.
const (
	ServicesReqCredentialSendVerifyAuthTypeEmail ServicesReqCredentialSendVerifyAuthType = "email"
)

// Defines values for ServicesReqServiceAccountsAccessTokenAuthType.
const (
	ServicesReqServiceAccountsAccessTokenAuthTypeSignature   ServicesReqServiceAccountsAccessTokenAuthType = "signature"
	ServicesReqServiceAccountsAccessTokenAuthTypeStaticToken ServicesReqServiceAccountsAccessTokenAuthType = "static_token"
)

// Defines values for ServicesReqServiceAccountsAccessTokensAuthType.
const (
	ServicesReqServiceAccountsAccessTokensAuthTypeSignature   ServicesReqServiceAccountsAccessTokensAuthType = "signature"
	ServicesReqServiceAccountsAccessTokensAuthTypeStaticToken ServicesReqServiceAccountsAccessTokensAuthType = "static_token"
)

// Defines values for ServicesReqServiceAccountsParamsAuthType.
const (
	ServicesReqServiceAccountsParamsAuthTypeSignature   ServicesReqServiceAccountsParamsAuthType = "signature"
	ServicesReqServiceAccountsParamsAuthTypeStaticToken ServicesReqServiceAccountsParamsAuthType = "static_token"
)

// Defines values for ServicesResAuthorizeServiceTokenType.
const (
	ServicesResAuthorizeServiceTokenTypeBearer ServicesResAuthorizeServiceTokenType = "Bearer"
)

// Defines values for SharedReqAccountCheckAuthType.
const (
	SharedReqAccountCheckAuthTypeAnonymous    SharedReqAccountCheckAuthType = "anonymous"
	SharedReqAccountCheckAuthTypeEmail        SharedReqAccountCheckAuthType = "email"
	SharedReqAccountCheckAuthTypeIllinoisOidc SharedReqAccountCheckAuthType = "illinois_oidc"
	SharedReqAccountCheckAuthTypeTwilioPhone  SharedReqAccountCheckAuthType = "twilio_phone"
	SharedReqAccountCheckAuthTypeUsername     SharedReqAccountCheckAuthType = "username"
)

// Defines values for SharedReqCreateAccountAuthType.
const (
	SharedReqCreateAccountAuthTypeEmail        SharedReqCreateAccountAuthType = "email"
	SharedReqCreateAccountAuthTypeIllinoisOidc SharedReqCreateAccountAuthType = "illinois_oidc"
)

// Defines values for SharedReqLoginAuthType.
const (
	SharedReqLoginAuthTypeAnonymous    SharedReqLoginAuthType = "anonymous"
	SharedReqLoginAuthTypeEmail        SharedReqLoginAuthType = "email"
	SharedReqLoginAuthTypeIllinoisOidc SharedReqLoginAuthType = "illinois_oidc"
	SharedReqLoginAuthTypeTwilioPhone  SharedReqLoginAuthType = "twilio_phone"
)

// Defines values for SharedReqLoginUrlAuthType.
const (
	SharedReqLoginUrlAuthTypeIllinoisOidc SharedReqLoginUrlAuthType = "illinois_oidc"
)

// Defines values for SharedReqLoginMfaType.
const (
	SharedReqLoginMfaTypeEmail    SharedReqLoginMfaType = "email"
	SharedReqLoginMfaTypePhone    SharedReqLoginMfaType = "phone"
	SharedReqLoginMfaTypeRecovery SharedReqLoginMfaType = "recovery"
	SharedReqLoginMfaTypeTotp     SharedReqLoginMfaType = "totp"
)

// Defines values for SharedReqMfaType.
const (
	SharedReqMfaTypeEmail SharedReqMfaType = "email"
	SharedReqMfaTypePhone SharedReqMfaType = "phone"
	SharedReqMfaTypeTotp  SharedReqMfaType = "totp"
)

// Defines values for SharedReqUpdateAccountAuthType.
const (
	Email        SharedReqUpdateAccountAuthType = "email"
	IllinoisOidc SharedReqUpdateAccountAuthType = "illinois_oidc"
)

// Defines values for SharedResRokwireTokenTokenType.
const (
	SharedResRokwireTokenTokenTypeBearer SharedResRokwireTokenTokenType = "Bearer"
)

// API key record
type APIKey struct {
	AppId string  `json:"app_id"`
	Id    *string `json:"id,omitempty"`
	Key   string  `json:"key"`
}

// Account defines model for Account.
type Account struct {
	Anonymous               *bool                    `json:"anonymous,omitempty"`
	AppOrg                  *ApplicationOrganization `json:"app_org"`
	AuthTypes               *[]AccountAuthType       `json:"auth_types,omitempty"`
	Devices                 *[]Device                `json:"devices,omitempty"`
	ExternalIds             *map[string]interface{}  `json:"external_ids"`
	Groups                  *[]AppOrgGroup           `json:"groups,omitempty"`
	Id                      *string                  `json:"id,omitempty"`
	LastAccessTokenDate     *string                  `json:"last_access_token_date,omitempty"`
	LastLoginDate           *string                  `json:"last_login_date,omitempty"`
	MostRecentClientVersion *string                  `json:"most_recent_client_version,omitempty"`
	Permissions             *[]Permission            `json:"permissions,omitempty"`
	Preferences             *map[string]interface{}  `json:"preferences"`
	Profile                 *Profile                 `json:"profile,omitempty"`
	Roles                   *[]AppOrgRole            `json:"roles,omitempty"`
	System                  *bool                    `json:"system,omitempty"`
	SystemConfigs           *map[string]interface{}  `json:"system_configs"`
	Username                *string                  `json:"username,omitempty"`
}

// AccountAuthType defines model for AccountAuthType.
type AccountAuthType struct {
	Active     *bool                   `json:"active,omitempty"`
	Code       string                  `json:"code"`
	Id         string                  `json:"id"`
	Identifier string                  `json:"identifier"`
	Params     *AccountAuthType_Params `json:"params"`
	Unverified *bool                   `json:"unverified,omitempty"`
}

// AccountAuthType_Params defines model for AccountAuthType.Params.
type AccountAuthType_Params struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// AdminToken defines model for AdminToken.
type AdminToken struct {
	Token string `json:"token"`
}

// AppOrgGroup defines model for AppOrgGroup.
type AppOrgGroup struct {
	Application *Application  `json:"application,omitempty"`
	DateCreated *string       `json:"date_created,omitempty"`
	DateUpdated *string       `json:"date_updated,omitempty"`
	Description *string       `json:"description,omitempty"`
	Id          *string       `json:"id,omitempty"`
	Name        string        `json:"name"`
	Permissions *[]Permission `json:"permissions,omitempty"`
	Roles       *[]AppOrgRole `json:"roles,omitempty"`
	System      *bool         `json:"system,omitempty"`
}

// AppOrgPair defines model for AppOrgPair.
type AppOrgPair struct {
	AppId string `json:"app_id"`
	OrgId string `json:"org_id"`
}

// AppOrgRole defines model for AppOrgRole.
type AppOrgRole struct {
	Application *Application  `json:"application,omitempty"`
	DateCreated *string       `json:"date_created,omitempty"`
	DateUpdated *string       `json:"date_updated,omitempty"`
	Description *string       `json:"description,omitempty"`
	Id          *string       `json:"id,omitempty"`
	Name        string        `json:"name"`
	Permissions *[]Permission `json:"permissions,omitempty"`
	System      *bool         `json:"system,omitempty"`
}

// Application defines model for Application.
type Application struct {
	Admin            bool               `json:"admin"`
	Id               *string            `json:"id,omitempty"`
	MultiTenant      bool               `json:"multi_tenant"`
	Name             string             `json:"name"`
	SharedIdentities bool               `json:"shared_identities"`
	Types            *[]ApplicationType `json:"types,omitempty"`
}

// ApplicationConfig defines model for ApplicationConfig.
type ApplicationConfig struct {
	AppTypeId string                 `json:"app_type_id"`
	Data      map[string]interface{} `json:"data"`
	Id        *string                `json:"id,omitempty"`
	OrgId     *string                `json:"org_id,omitempty"`

	// conforms major.minor.patch format
	Version string `json:"version"`
}

// ApplicationOrganization defines model for ApplicationOrganization.
type ApplicationOrganization struct {
	AppId                    string                      `json:"app_id"`
	Id                       *string                     `json:"id,omitempty"`
	IdentityProviderSettings *[]IdentityProviderSettings `json:"identity_provider_settings"`
	LoginSessionSettings     *LoginSessionSettings       `json:"login_session_settings,omitempty"`
	OrgId                    string                      `json:"org_id"`
	ServicesIds              *[]string                   `json:"services_ids"`
	SupportedAuthTypes       *[]SupportedAuthTypes       `json:"supported_auth_types"`
}

// ApplicationType defines model for ApplicationType.
type ApplicationType struct {
	Id         *string   `json:"id,omitempty"`
	Identifier string    `json:"identifier"`
	Name       *string   `json:"name,omitempty"`
	Versions   *[]string `json:"versions,omitempty"`
}

// Service registration record used for auth
type AuthServiceReg struct {
	Host             string  `json:"host"`
	PubKey           *PubKey `json:"pub_key,omitempty"`
	ServiceAccountId *string `json:"service_account_id,omitempty"`
	ServiceId        string  `json:"service_id"`
}

// AuthType defines model for AuthType.
type AuthType struct {
	// username or email or phone or illinois_oidc etc
	Code        string  `json:"code"`
	Description string  `json:"description"`
	Id          *string `json:"id,omitempty"`

	// says if login using this auth type may bypass account MFA
	IgnoreMfa bool `json:"ignore_mfa"`

	// says if the auth type results in anonymous users
	IsAnonymous bool `json:"is_anonymous"`

	// says if the users source is external - identity providers
	IsExternal bool             `json:"is_external"`
	Params     *AuthType_Params `json:"params,omitempty"`

	// says if the auth type uses credentials
	UseCredentials bool `json:"use_credentials"`
}

// AuthType_Params defines model for AuthType.Params.
type AuthType_Params struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Device defines model for Device.
type Device struct {
	DeviceId *string    `json:"device_id,omitempty"`
	Id       *string    `json:"id,omitempty"`
	Os       *string    `json:"os,omitempty"`
	Type     DeviceType `json:"type"`
}

// DeviceType defines model for Device.Type.
type DeviceType string

// GlobalConfig defines model for GlobalConfig.
type GlobalConfig struct {
	Setting string `json:"setting"`
}

// IdentityProviderSettings defines model for IdentityProviderSettings.
type IdentityProviderSettings struct {
	AlwaysSyncProfile   *bool                                      `json:"always_sync_profile,omitempty"`
	EmailField          *string                                    `json:"email_field,omitempty"`
	ExternalIdFields    *IdentityProviderSettings_ExternalIdFields `json:"external_id_fields,omitempty"`
	FirstNameField      *string                                    `json:"first_name_field,omitempty"`
	Groups              *IdentityProviderSettings_Groups           `json:"groups,omitempty"`
	GroupsField         *string                                    `json:"groups_field,omitempty"`
	IdentityProviderId  string                                     `json:"identity_provider_id"`
	LastNameField       *string                                    `json:"last_name_field,omitempty"`
	MiddleNameField     *string                                    `json:"middle_name_field,omitempty"`
	Roles               *IdentityProviderSettings_Roles            `json:"roles,omitempty"`
	RolesField          *string                                    `json:"roles_field,omitempty"`
	UserIdentifierField string                                     `json:"user_identifier_field"`
	UserSpecificFields  *[]string                                  `json:"user_specific_fields,omitempty"`
}

// IdentityProviderSettings_ExternalIdFields defines model for IdentityProviderSettings.ExternalIdFields.
type IdentityProviderSettings_ExternalIdFields struct {
	AdditionalProperties map[string]string `json:"-"`
}

// IdentityProviderSettings_Groups defines model for IdentityProviderSettings.Groups.
type IdentityProviderSettings_Groups struct {
	AdditionalProperties map[string]string `json:"-"`
}

// IdentityProviderSettings_Roles defines model for IdentityProviderSettings.Roles.
type IdentityProviderSettings_Roles struct {
	AdditionalProperties map[string]string `json:"-"`
}

// InactiveExpirePolicy defines model for InactiveExpirePolicy.
type InactiveExpirePolicy struct {
	Active           bool `json:"active"`
	InactivityPeriod int  `json:"inactivity_period"`
}

// JSON Web Key (JWK)
type JWK struct {
	// The "alg" (algorithm) parameter identifies the algorithm intended for use with the key
	Alg JWKAlg `json:"alg"`

	// The exponent of the key - Base64URL encoded
	E string `json:"e"`

	// The "kid" (key ID) parameter is used to match a specific key
	Kid string `json:"kid"`

	// The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key
	Kty JWKKty `json:"kty"`

	// The modulus (2048 bit) of the key - Base64URL encoded.
	N string `json:"n"`

	// The "use" (public key use) parameter identifies the intended use of the public key
	Use JWKUse `json:"use"`
}

// The "alg" (algorithm) parameter identifies the algorithm intended for use with the key
type JWKAlg string

// The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key
type JWKKty string

// The "use" (public key use) parameter identifies the intended use of the public key
type JWKUse string

// JSON Web Key Set (JWKS)
type JWKS struct {
	Keys []JWK `json:"keys"`
}

// LoginSession defines model for LoginSession.
type LoginSession struct {
	AccountAuthTypeId         *string `json:"account_auth_type_id,omitempty"`
	AccountAuthTypeIdentifier *string `json:"account_auth_type_identifier,omitempty"`
	Anonymous                 *bool   `json:"anonymous,omitempty"`
	AppOrgId                  *string `json:"app_org_id,omitempty"`
	AppTypeId                 *string `json:"app_type_id,omitempty"`
	AppTypeIdentifier         *string `json:"app_type_identifier,omitempty"`
	AuthTypeCode              *string `json:"auth_type_code,omitempty"`
	DateCreated               *string `json:"date_created,omitempty"`
	DateRefreshed             *string `json:"date_refreshed"`
	DateUpdated               *string `json:"date_updated"`
	DeviceId                  *string `json:"device_id,omitempty"`
	Id                        *string `json:"id,omitempty"`
	Identifier                *string `json:"identifier,omitempty"`
	IpAddress                 *string `json:"ip_address,omitempty"`
	MfaAttempts               *int    `json:"mfa_attempts,omitempty"`
	RefreshTokensCount        *int    `json:"refresh_tokens_count,omitempty"`
	State                     *string `json:"state,omitempty"`
	StateExpires              *string `json:"state_expires"`
}

// LoginSessionSettings defines model for LoginSessionSettings.
type LoginSessionSettings struct {
	InactivityExpirePolicy     *InactiveExpirePolicy `json:"inactivity_expire_policy,omitempty"`
	MaxConcurrentSessions      *int                  `json:"max_concurrent_sessions,omitempty"`
	TimeSinceLoginExpirePolicy *TSLExpirePolicy      `json:"time_since_login_expire_policy,omitempty"`
	YearlyExpirePolicy         *YearlyExpirePolicy   `json:"yearly_expire_policy,omitempty"`
}

// OpenID Connect Discovery Metadata
type OIDCDiscovery struct {
	Issuer  string `json:"issuer"`
	JwksUri string `json:"jwks_uri"`
}

// Organization defines model for Organization.
type Organization struct {
	Config *OrganizationConfig `json:"config,omitempty"`
	Id     *string             `json:"id,omitempty"`
	Name   string              `json:"name"`
	Type   OrganizationType    `json:"type"`
}

// OrganizationType defines model for Organization.Type.
type OrganizationType string

// OrganizationConfig defines model for OrganizationConfig.
type OrganizationConfig struct {
	// organization domains
	Domains []string `json:"domains"`

	// organization config id
	Id *string `json:"id,omitempty"`
}

// PartialAccount defines model for PartialAccount.
type PartialAccount struct {
	Anonymous     bool                    `json:"anonymous"`
	AppId         string                  `json:"app_id"`
	AuthTypes     []AccountAuthType       `json:"auth_types"`
	DateCreated   *string                 `json:"date_created,omitempty"`
	DateUpdated   *string                 `json:"date_updated"`
	ExternalIds   *map[string]interface{} `json:"external_ids"`
	FirstName     string                  `json:"first_name"`
	Groups        []AppOrgGroup           `json:"groups"`
	Id            *string                 `json:"id,omitempty"`
	LastName      string                  `json:"last_name"`
	OrgId         string                  `json:"org_id"`
	Params        *map[string]interface{} `json:"params"`
	Permissions   []Permission            `json:"permissions"`
	Roles         []AppOrgRole            `json:"roles"`
	System        *bool                   `json:"system,omitempty"`
	SystemConfigs *map[string]interface{} `json:"system_configs"`
	Username      *string                 `json:"username,omitempty"`
}

// Permission defines model for Permission.
type Permission struct {
	Assigners   *[]string `json:"assigners,omitempty"`
	DateCreated *string   `json:"date_created,omitempty"`
	DateUpdated *string   `json:"date_updated,omitempty"`
	Description *string   `json:"description,omitempty"`
	Id          *string   `json:"id,omitempty"`
	Name        string    `json:"name"`
	ServiceId   *string   `json:"service_id,omitempty"`
}

// Profile defines model for Profile.
type Profile struct {
	Address                *string                 `json:"address"`
	BirthYear              *int                    `json:"birth_year"`
	Country                *string                 `json:"country"`
	Email                  *string                 `json:"email"`
	FirstName              *string                 `json:"first_name,omitempty"`
	Id                     *string                 `json:"id,omitempty"`
	LastName               *string                 `json:"last_name,omitempty"`
	Phone                  *string                 `json:"phone"`
	PhotoUrl               *string                 `json:"photo_url,omitempty"`
	State                  *string                 `json:"state"`
	UnstructuredProperties *map[string]interface{} `json:"unstructured_properties"`
	ZipCode                *string                 `json:"zip_code"`
}

// ProfileNullable defines model for ProfileNullable.
type ProfileNullable struct {
	Address                *string                 `json:"address"`
	BirthYear              *int                    `json:"birth_year"`
	Country                *string                 `json:"country"`
	Email                  *string                 `json:"email"`
	FirstName              *string                 `json:"first_name"`
	LastName               *string                 `json:"last_name"`
	Phone                  *string                 `json:"phone"`
	PhotoUrl               *string                 `json:"photo_url"`
	State                  *string                 `json:"state"`
	UnstructuredProperties *map[string]interface{} `json:"unstructured_properties"`
	ZipCode                *string                 `json:"zip_code"`
}

// PubKey defines model for PubKey.
type PubKey struct {
	Alg    string `json:"alg"`
	KeyPem string `json:"key_pem"`
}

// ServiceAccount defines model for ServiceAccount.
type ServiceAccount struct {
	AccountId   *string                     `json:"account_id,omitempty"`
	AppId       string                      `json:"app_id"`
	Creds       *[]ServiceAccountCredential `json:"creds,omitempty"`
	FirstParty  *bool                       `json:"first_party,omitempty"`
	Name        *string                     `json:"name,omitempty"`
	OrgId       string                      `json:"org_id"`
	Permissions *[]string                   `json:"permissions"`
	Scopes      *[]string                   `json:"scopes"`
}

// ServiceAccountCredential defines model for ServiceAccountCredential.
type ServiceAccountCredential struct {
	DateCreated *string                      `json:"date_created,omitempty"`
	Id          *string                      `json:"id,omitempty"`
	Name        string                       `json:"name"`
	Params      *map[string]interface{}      `json:"params"`
	Type        ServiceAccountCredentialType `json:"type"`
}

// ServiceAccountCredentialType defines model for ServiceAccountCredential.Type.
type ServiceAccountCredentialType string

// Full service registration record
type ServiceReg struct {
	Description      string          `json:"description"`
	FirstParty       bool            `json:"first_party"`
	Host             string          `json:"host"`
	InfoUrl          *string         `json:"info_url,omitempty"`
	LogoUrl          *string         `json:"logo_url,omitempty"`
	Name             string          `json:"name"`
	PubKey           *PubKey         `json:"pub_key,omitempty"`
	Scopes           *[]ServiceScope `json:"scopes"`
	ServiceAccountId *string         `json:"service_account_id,omitempty"`
	ServiceId        string          `json:"service_id"`
}

// ServiceScope defines model for ServiceScope.
type ServiceScope struct {
	// Explanation displayed to users for why this scope is requested/required
	Explanation *string `json:"explanation,omitempty"`
	Required    bool    `json:"required"`
	Scope       string  `json:"scope"`
}

// SupportedAuthType defines model for SupportedAuthType.
type SupportedAuthType struct {
	AuthTypeId *string                   `json:"auth_type_id,omitempty"`
	Params     *SupportedAuthType_Params `json:"params,omitempty"`
}

// SupportedAuthType_Params defines model for SupportedAuthType.Params.
type SupportedAuthType_Params struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// SupportedAuthTypes defines model for SupportedAuthTypes.
type SupportedAuthTypes struct {
	AppTypeId          *string              `json:"app_type_id,omitempty"`
	SupportedAuthTypes *[]SupportedAuthType `json:"supported_auth_types,omitempty"`
}

// TSLExpirePolicy defines model for TSLExpirePolicy.
type TSLExpirePolicy struct {
	Active               bool `json:"active"`
	TimeSinceLoginPeriod int  `json:"time_since_login_period"`
}

// Username defines model for Username.
type Username struct {
	Username string `json:"username"`
}

// YearlyExpirePolicy defines model for YearlyExpirePolicy.
type YearlyExpirePolicy struct {
	Active bool `json:"active"`
	Day    int  `json:"day"`
	Hour   int  `json:"hour"`
	Min    int  `json:"min"`
	Month  int  `json:"month"`
}

// AdminReqAddAccountsToGroup defines model for _admin_req_add-accounts-to-group.
type AdminReqAddAccountsToGroup struct {
	AccountIds []string `json:"account_ids"`
}

// AdminReqApplicationGroup defines model for _admin_req_application_group.
type AdminReqApplicationGroup struct {
	AccountIds  *[]string `json:"account_ids"`
	Description string    `json:"description"`
	Name        string    `json:"name"`
	Permissions *[]string `json:"permissions,omitempty"`
	Roles       *[]string `json:"roles,omitempty"`
	System      *bool     `json:"system,omitempty"`
}

// AdminReqApplicationRole defines model for _admin_req_application_role.
type AdminReqApplicationRole struct {
	Description string   `json:"description"`
	Name        string   `json:"name"`
	Permissions []string `json:"permissions"`
	System      *bool    `json:"system,omitempty"`
}

// AdminReqGrantPermissions defines model for _admin_req_grant-permissions.
type AdminReqGrantPermissions struct {
	Permissions []string `json:"permissions"`
}

// AdminReqGrantPermissionsToRole defines model for _admin_req_grant-permissions-to-role.
type AdminReqGrantPermissionsToRole struct {
	Permissions []string `json:"permissions"`
}

// AdminReqGrantRolesToAccount defines model for _admin_req_grant-roles-to-account.
type AdminReqGrantRolesToAccount struct {
	RoleIds []string `json:"role_ids"`
}

// AdminReqRemoveAccountFromGroup defines model for _admin_req_remove-account-from-group.
type AdminReqRemoveAccountFromGroup struct {
	AccountIds []string `json:"account_ids"`
}

// AdminReqRevokePermissions defines model for _admin_req_revoke-permissions.
type AdminReqRevokePermissions struct {
	Permissions []string `json:"permissions"`
}

// AdminReqRevokeRolesFromAccount defines model for _admin_req_revoke-roles-from-account.
type AdminReqRevokeRolesFromAccount struct {
	RoleIds []string `json:"role_ids"`
}

// ServicesReqAccountAuthTypeLink defines model for _services_req_account_auth-type-link.
type ServicesReqAccountAuthTypeLink struct {
	AppTypeIdentifier string                                 `json:"app_type_identifier"`
	AuthType          ServicesReqAccountAuthTypeLinkAuthType `json:"auth_type"`
	Creds             interface{}                            `json:"creds"`
	Params            *interface{}                           `json:"params,omitempty"`
}

// ServicesReqAccountAuthTypeLinkAuthType defines model for ServicesReqAccountAuthTypeLink.AuthType.
type ServicesReqAccountAuthTypeLinkAuthType string

// ServicesReqAccountAuthTypeUnlink defines model for _services_req_account_auth-type-unlink.
type ServicesReqAccountAuthTypeUnlink struct {
	AppTypeIdentifier string                                   `json:"app_type_identifier"`
	AuthType          ServicesReqAccountAuthTypeUnlinkAuthType `json:"auth_type"`
	Identifier        string                                   `json:"identifier"`
}

// ServicesReqAccountAuthTypeUnlinkAuthType defines model for ServicesReqAccountAuthTypeUnlink.AuthType.
type ServicesReqAccountAuthTypeUnlinkAuthType string

// ServicesReqApplicationConfigs defines model for _services_req_application_configs.
type ServicesReqApplicationConfigs struct {
	ApiKey            string `json:"api_key"`
	AppTypeIdentifier string `json:"app_type_identifier"`

	// conforms major.minor.patch format
	Version string `json:"version"`
}

// ServicesReqApplicationOrgConfigs defines model for _services_req_application_org-configs.
type ServicesReqApplicationOrgConfigs struct {
	AppTypeIdentifier string `json:"app_type_identifier"`

	// conforms major.minor.patch format
	Version string `json:"version"`
}

// ServicesReqAuthorizeService defines model for _services_req_authorize-service.
type ServicesReqAuthorizeService struct {
	// Scopes to be granted to this service in this and future tokens. Replaces existing scopes if present.
	ApprovedScopes *[]string `json:"approved_scopes,omitempty"`
	ServiceId      string    `json:"service_id"`
}

// ServicesReqCredentialForgotComplete defines model for _services_req_credential_forgot_complete.
type ServicesReqCredentialForgotComplete struct {
	CredentialId string       `json:"credential_id"`
	Params       *interface{} `json:"params,omitempty"`
	ResetCode    string       `json:"reset_code"`
}

// ServicesReqCredentialForgotInitiate defines model for _services_req_credential_forgot_initiate.
type ServicesReqCredentialForgotInitiate struct {
	ApiKey            string                                      `json:"api_key"`
	AppTypeIdentifier string                                      `json:"app_type_identifier"`
	AuthType          ServicesReqCredentialForgotInitiateAuthType `json:"auth_type"`
	Identifier        string                                      `json:"identifier"`
	OrgId             string                                      `json:"org_id"`
}

// ServicesReqCredentialForgotInitiateAuthType defines model for ServicesReqCredentialForgotInitiate.AuthType.
type ServicesReqCredentialForgotInitiateAuthType string

// ServicesReqCredentialSendVerify defines model for _services_req_credential_send-verify.
type ServicesReqCredentialSendVerify struct {
	ApiKey            string                                  `json:"api_key"`
	AppTypeIdentifier string                                  `json:"app_type_identifier"`
	AuthType          ServicesReqCredentialSendVerifyAuthType `json:"auth_type"`
	Identifier        string                                  `json:"identifier"`
	OrgId             string                                  `json:"org_id"`
}

// ServicesReqCredentialSendVerifyAuthType defines model for ServicesReqCredentialSendVerify.AuthType.
type ServicesReqCredentialSendVerifyAuthType string

// ServicesReqCredentialUpdate defines model for _services_req_credential_update.
type ServicesReqCredentialUpdate struct {
	AccountAuthTypeId string       `json:"account_auth_type_id"`
	Params            *interface{} `json:"params,omitempty"`
}

// ServicesReqServiceAccountsAccessToken defines model for _services_req_service-accounts_access-token.
type ServicesReqServiceAccountsAccessToken struct {
	AccountId string                                        `json:"account_id"`
	AppId     string                                        `json:"app_id"`
	AuthType  ServicesReqServiceAccountsAccessTokenAuthType `json:"auth_type"`

	// Service account token for auth_type="static_token"
	Creds *ServicesServiceAccountsCredsStaticToken `json:"creds,omitempty"`
	OrgId string                                   `json:"org_id"`
}

// ServicesReqServiceAccountsAccessTokenAuthType defines model for ServicesReqServiceAccountsAccessToken.AuthType.
type ServicesReqServiceAccountsAccessTokenAuthType string

// ServicesReqServiceAccountsAccessTokens defines model for _services_req_service-accounts_access-tokens.
type ServicesReqServiceAccountsAccessTokens struct {
	AccountId string                                         `json:"account_id"`
	AuthType  ServicesReqServiceAccountsAccessTokensAuthType `json:"auth_type"`

	// Service account token for auth_type="static_token"
	Creds *ServicesServiceAccountsCredsStaticToken `json:"creds,omitempty"`
}

// ServicesReqServiceAccountsAccessTokensAuthType defines model for ServicesReqServiceAccountsAccessTokens.AuthType.
type ServicesReqServiceAccountsAccessTokensAuthType string

// ServicesReqServiceAccountsParams defines model for _services_req_service-accounts_params.
type ServicesReqServiceAccountsParams struct {
	AuthType ServicesReqServiceAccountsParamsAuthType `json:"auth_type"`

	// Service account token for auth_type="static_token"
	Creds *ServicesServiceAccountsCredsStaticToken `json:"creds,omitempty"`
}

// ServicesReqServiceAccountsParamsAuthType defines model for ServicesReqServiceAccountsParams.AuthType.
type ServicesReqServiceAccountsParamsAuthType string

// ServicesResAccountAuthTypeLink defines model for _services_res_account_auth-type-link.
type ServicesResAccountAuthTypeLink struct {
	AuthTypes []AccountAuthType `json:"auth_types"`
	Message   *string           `json:"message"`
}

// ServicesResAuthorizeService defines model for _services_res_authorize-service.
type ServicesResAuthorizeService struct {
	AccessToken    *string   `json:"access_token,omitempty"`
	ApprovedScopes *[]string `json:"approved_scopes,omitempty"`

	// Full service registration record
	ServiceReg *ServiceReg `json:"service_reg,omitempty"`

	// The type of the provided tokens to be specified when they are sent in the "Authorization" header
	TokenType *ServicesResAuthorizeServiceTokenType `json:"token_type,omitempty"`
}

// The type of the provided tokens to be specified when they are sent in the "Authorization" header
type ServicesResAuthorizeServiceTokenType string

// ServicesResServiceAccountsAccessTokens defines model for _services_res_service-accounts_access-tokens.
type ServicesResServiceAccountsAccessTokens struct {
	AppId string                `json:"app_id"`
	OrgId string                `json:"org_id"`
	Token SharedResRokwireToken `json:"token"`
}

// Service account token for auth_type="static_token"
type ServicesServiceAccountsCredsStaticToken struct {
	Token string `json:"token"`
}

// SharedReqAccountCheck defines model for _shared_req_AccountCheck.
type SharedReqAccountCheck struct {
	ApiKey            string                        `json:"api_key"`
	AppTypeIdentifier string                        `json:"app_type_identifier"`
	AuthType          SharedReqAccountCheckAuthType `json:"auth_type"`
	OrgId             string                        `json:"org_id"`
	UserIdentifier    string                        `json:"user_identifier"`
}

// SharedReqAccountCheckAuthType defines model for SharedReqAccountCheck.AuthType.
type SharedReqAccountCheckAuthType string

// SharedReqCreateAccount defines model for _shared_req_CreateAccount.
type SharedReqCreateAccount struct {
	AuthType    SharedReqCreateAccountAuthType `json:"auth_type"`
	GroupIds    *[]string                      `json:"group_ids,omitempty"`
	Identifier  string                         `json:"identifier"`
	Permissions *[]string                      `json:"permissions,omitempty"`
	Profile     *ProfileNullable               `json:"profile"`
	RoleIds     *[]string                      `json:"role_ids,omitempty"`
	Username    *string                        `json:"username"`
}

// SharedReqCreateAccountAuthType defines model for SharedReqCreateAccount.AuthType.
type SharedReqCreateAccountAuthType string

// Auth login creds for auth_type="anonymous"
type SharedReqCredsAPIKey struct {
	AnonymousId *string `json:"anonymous_id,omitempty"`
}

// Auth login creds for auth_type="email"
type SharedReqCredsEmail struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// Auth login creds for auth_type="oidc" (or variants)
//   - full redirect URI received from OIDC provider
type SharedReqCredsOIDC = string

// Auth login creds for auth_type="twilio_phone"
type SharedReqCredsTwilioPhone struct {
	Code  *string `json:"code,omitempty"`
	Phone string  `json:"phone"`
}

// SharedReqLogin defines model for _shared_req_Login.
type SharedReqLogin struct {
	ApiKey            string                  `json:"api_key"`
	AppTypeIdentifier string                  `json:"app_type_identifier"`
	AuthType          SharedReqLoginAuthType  `json:"auth_type"`
	Creds             *interface{}            `json:"creds,omitempty"`
	Device            Device                  `json:"device"`
	OrgId             string                  `json:"org_id"`
	Params            *interface{}            `json:"params,omitempty"`
	Preferences       *map[string]interface{} `json:"preferences"`
	Profile           *ProfileNullable        `json:"profile"`
	Username          *string                 `json:"username"`
}

// SharedReqLoginAuthType defines model for SharedReqLogin.AuthType.
type SharedReqLoginAuthType string

// SharedReqLoginUrl defines model for _shared_req_LoginUrl.
type SharedReqLoginUrl struct {
	ApiKey            string                    `json:"api_key"`
	AppTypeIdentifier string                    `json:"app_type_identifier"`
	AuthType          SharedReqLoginUrlAuthType `json:"auth_type"`
	OrgId             string                    `json:"org_id"`
	RedirectUri       string                    `json:"redirect_uri"`
}

// SharedReqLoginUrlAuthType defines model for SharedReqLoginUrl.AuthType.
type SharedReqLoginUrlAuthType string

// SharedReqLoginMfa defines model for _shared_req_Login_Mfa.
type SharedReqLoginMfa struct {
	AccountId  string                `json:"account_id"`
	ApiKey     string                `json:"api_key"`
	Code       string                `json:"code"`
	Identifier string                `json:"identifier"`
	SessionId  string                `json:"session_id"`
	State      string                `json:"state"`
	Type       SharedReqLoginMfaType `json:"type"`
}

// SharedReqLoginMfaType defines model for SharedReqLoginMfa.Type.
type SharedReqLoginMfaType string

// SharedReqMfa defines model for _shared_req_Mfa.
type SharedReqMfa struct {
	Code       *string          `json:"code,omitempty"`
	Identifier string           `json:"identifier"`
	Type       SharedReqMfaType `json:"type"`
}

// SharedReqMfaType defines model for SharedReqMfa.Type.
type SharedReqMfaType string

// Auth login params for auth_type="email"
type SharedReqParamsEmail struct {
	// This should match the `creds` password field when sign_up=true. This should be verified on the client side as well to reduce invalid requests.
	ConfirmPassword *string `json:"confirm_password,omitempty"`
	SignUp          *bool   `json:"sign_up,omitempty"`
}

// Auth login request params for unlisted auth_types (None)
type SharedReqParamsNone = map[string]interface{}

// Auth login params for auth_type="oidc" (or variants)
type SharedReqParamsOIDC struct {
	PkceVerifier *string `json:"pkce_verifier,omitempty"`
	RedirectUri  *string `json:"redirect_uri,omitempty"`
}

// SharedReqParamsSetEmailCredential defines model for _shared_req_ParamsSetEmailCredential.
type SharedReqParamsSetEmailCredential struct {
	ConfirmPassword string `json:"confirm_password"`
	NewPassword     string `json:"new_password"`
}

// SharedReqRefresh defines model for _shared_req_Refresh.
type SharedReqRefresh struct {
	ApiKey       string `json:"api_key"`
	RefreshToken string `json:"refresh_token"`
}

// SharedReqUpdateAccount defines model for _shared_req_UpdateAccount.
type SharedReqUpdateAccount struct {
	AuthType    SharedReqUpdateAccountAuthType `json:"auth_type"`
	GroupIds    *[]string                      `json:"group_ids,omitempty"`
	Identifier  string                         `json:"identifier"`
	Permissions *[]string                      `json:"permissions,omitempty"`
	RoleIds     *[]string                      `json:"role_ids,omitempty"`
}

// SharedReqUpdateAccountAuthType defines model for SharedReqUpdateAccount.AuthType.
type SharedReqUpdateAccountAuthType string

// SharedResAccountCheck defines model for _shared_res_AccountCheck.
type SharedResAccountCheck = bool

// SharedResLogin defines model for _shared_res_Login.
type SharedResLogin struct {
	Account *Account               `json:"account,omitempty"`
	Message *string                `json:"message,omitempty"`
	Params  *interface{}           `json:"params"`
	Token   *SharedResRokwireToken `json:"token,omitempty"`
}

// SharedResLoginUrl defines model for _shared_res_LoginUrl.
type SharedResLoginUrl struct {
	LoginUrl string `json:"login_url"`

	// Params to be submitted with 'login' request (if necessary)
	Params *map[string]interface{} `json:"params,omitempty"`
}

// SharedResLoginMfa defines model for _shared_res_Login_Mfa.
type SharedResLoginMfa struct {
	AccountId string         `json:"account_id"`
	Enrolled  []SharedResMfa `json:"enrolled"`
	Params    *interface{}   `json:"params"`
	SessionId string         `json:"session_id"`
	State     string         `json:"state"`
}

// SharedResMfa defines model for _shared_res_Mfa.
type SharedResMfa struct {
	Params   *map[string]interface{} `json:"params,omitempty"`
	Type     *string                 `json:"type,omitempty"`
	Verified *bool                   `json:"verified,omitempty"`
}

// SharedResRefresh defines model for _shared_res_Refresh.
type SharedResRefresh struct {
	Params *interface{}           `json:"params"`
	Token  *SharedResRokwireToken `json:"token,omitempty"`
}

// SharedResRokwireToken defines model for _shared_res_RokwireToken.
type SharedResRokwireToken struct {
	// The user's access token to be provided to authorize access to ROKWIRE APIs
	AccessToken *string `json:"access_token,omitempty"`

	// A refresh token that can be used to get a new access token once the one provided expires
	RefreshToken *string `json:"refresh_token,omitempty"`

	// The type of the provided tokens to be specified when they are sent in the "Authorization" header
	TokenType *SharedResRokwireTokenTokenType `json:"token_type,omitempty"`
}

// The type of the provided tokens to be specified when they are sent in the "Authorization" header
type SharedResRokwireTokenTokenType string

// SystemReqUpdateServiceAccount defines model for _system_req_update_service-account.
type SystemReqUpdateServiceAccount struct {
	Name        *string   `json:"name,omitempty"`
	Permissions *[]string `json:"permissions"`
	Scopes      *[]string `json:"scopes"`
}

// DeleteAdminAccountMfaParams defines parameters for DeleteAdminAccountMfa.
type DeleteAdminAccountMfaParams struct {
	// MFA type
	Type string `form:"type" json:"type"`
}

// PostAdminAccountMfaParams defines parameters for PostAdminAccountMfa.
type PostAdminAccountMfaParams struct {
	// MFA type
	Type string `form:"type" json:"type"`
}

// PutAdminAccountUsernameJSONBody defines parameters for PutAdminAccountUsername.
type PutAdminAccountUsernameJSONBody = Username

// GetAdminApplicationAccountsParams defines parameters for GetAdminApplicationAccounts.
type GetAdminApplicationAccountsParams struct {
	// The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// The account ID
	AccountId *string `form:"account-id,omitempty" json:"account-id,omitempty"`

	// The account profile first name
	Firstname *string `form:"firstname,omitempty" json:"firstname,omitempty"`

	// The account profile last name
	Lastname *string `form:"lastname,omitempty" json:"lastname,omitempty"`

	// The auth type
	AuthType *string `form:"auth-type,omitempty" json:"auth-type,omitempty"`

	// The authentication type identifier
	AuthTypeIdentifier *string `form:"auth-type-identifier,omitempty" json:"auth-type-identifier,omitempty"`

	// Account has permissions (permissions, roles, or groups) filter
	HasPermissions *bool `form:"has-permissions,omitempty" json:"has-permissions,omitempty"`

	// A comma-separated list of permission names
	Permissions *string `form:"permissions,omitempty" json:"permissions,omitempty"`

	// A comma-separated list of role IDs
	RoleIds *string `form:"role-ids,omitempty" json:"role-ids,omitempty"`

	// A comma-separated list of group IDs
	GroupIds *string `form:"group-ids,omitempty" json:"group-ids,omitempty"`
}

// PostAdminApplicationAccountsJSONBody defines parameters for PostAdminApplicationAccounts.
type PostAdminApplicationAccountsJSONBody = SharedReqCreateAccount

// PutAdminApplicationAccountsJSONBody defines parameters for PutAdminApplicationAccounts.
type PutAdminApplicationAccountsJSONBody = SharedReqUpdateAccount

// DeleteAdminApplicationAccountsIdPermissionsJSONBody defines parameters for DeleteAdminApplicationAccountsIdPermissions.
type DeleteAdminApplicationAccountsIdPermissionsJSONBody = AdminReqRevokePermissions

// PutAdminApplicationAccountsIdPermissionsJSONBody defines parameters for PutAdminApplicationAccountsIdPermissions.
type PutAdminApplicationAccountsIdPermissionsJSONBody = AdminReqGrantPermissions

// DeleteAdminApplicationAccountsIdRolesJSONBody defines parameters for DeleteAdminApplicationAccountsIdRoles.
type DeleteAdminApplicationAccountsIdRolesJSONBody = AdminReqRevokeRolesFromAccount

// PutAdminApplicationAccountsIdRolesJSONBody defines parameters for PutAdminApplicationAccountsIdRoles.
type PutAdminApplicationAccountsIdRolesJSONBody = AdminReqGrantRolesToAccount

// PutAdminApplicationAccountsIdSystemConfigsJSONBody defines parameters for PutAdminApplicationAccountsIdSystemConfigs.
type PutAdminApplicationAccountsIdSystemConfigsJSONBody = map[string]interface{}

// PutAdminApplicationAccountsIdSystemConfigsParams defines parameters for PutAdminApplicationAccountsIdSystemConfigs.
type PutAdminApplicationAccountsIdSystemConfigsParams struct {
	// Create anonymous account if account with ID cannot be found. Default is `false`
	CreateAnonymous *bool `form:"create-anonymous,omitempty" json:"create-anonymous,omitempty"`
}

// PostAdminApplicationGroupsJSONBody defines parameters for PostAdminApplicationGroups.
type PostAdminApplicationGroupsJSONBody = AdminReqApplicationGroup

// PutAdminApplicationGroupsIdJSONBody defines parameters for PutAdminApplicationGroupsId.
type PutAdminApplicationGroupsIdJSONBody = AdminReqApplicationGroup

// DeleteAdminApplicationGroupsIdAccountsJSONBody defines parameters for DeleteAdminApplicationGroupsIdAccounts.
type DeleteAdminApplicationGroupsIdAccountsJSONBody = AdminReqRemoveAccountFromGroup

// PutAdminApplicationGroupsIdAccountsJSONBody defines parameters for PutAdminApplicationGroupsIdAccounts.
type PutAdminApplicationGroupsIdAccountsJSONBody = AdminReqAddAccountsToGroup

// GetAdminApplicationLoginSessionsParams defines parameters for GetAdminApplicationLoginSessions.
type GetAdminApplicationLoginSessionsParams struct {
	// identifier
	Identifier *string `form:"identifier,omitempty" json:"identifier,omitempty"`

	// account auth type identifier
	AccountAuthTypeIdentifier *string `form:"account-auth-type-identifier,omitempty" json:"account-auth-type-identifier,omitempty"`

	// app type id
	AppTypeId *string `form:"app-type-id,omitempty" json:"app-type-id,omitempty"`

	// app type identifier
	AppTypeIdentifier *string `form:"app-type-identifier,omitempty" json:"app-type-identifier,omitempty"`

	// anonymous
	Anonymous *bool `form:"anonymous,omitempty" json:"anonymous,omitempty"`

	// device id
	DeviceId *string `form:"device-id,omitempty" json:"device-id,omitempty"`

	// ip address
	IpAddress *string `form:"ip-address,omitempty" json:"ip-address,omitempty"`
}

// PostAdminApplicationRolesJSONBody defines parameters for PostAdminApplicationRoles.
type PostAdminApplicationRolesJSONBody = AdminReqApplicationRole

// PutAdminApplicationRolesIdJSONBody defines parameters for PutAdminApplicationRolesId.
type PutAdminApplicationRolesIdJSONBody = AdminReqApplicationRole

// PutAdminApplicationRolesIdPermissionsJSONBody defines parameters for PutAdminApplicationRolesIdPermissions.
type PutAdminApplicationRolesIdPermissionsJSONBody = AdminReqGrantPermissionsToRole

// GetAdminAuthAppTokenParams defines parameters for GetAdminAuthAppToken.
type GetAdminAuthAppTokenParams struct {
	// The application ID of the token to return
	AppId string `form:"app_id" json:"app_id"`
}

// PostAdminAuthLoginJSONBody defines parameters for PostAdminAuthLogin.
type PostAdminAuthLoginJSONBody = SharedReqLogin

// PostAdminAuthLoginUrlJSONBody defines parameters for PostAdminAuthLoginUrl.
type PostAdminAuthLoginUrlJSONBody = SharedReqLoginUrl

// PostAdminAuthMfaJSONBody defines parameters for PostAdminAuthMfa.
type PostAdminAuthMfaJSONBody = SharedReqLoginMfa

// PostAdminAuthMfaParams defines parameters for PostAdminAuthMfa.
type PostAdminAuthMfaParams struct {
	// Login state
	State *string `form:"state,omitempty" json:"state,omitempty"`
}

// PostAdminAuthRefreshJSONBody defines parameters for PostAdminAuthRefresh.
type PostAdminAuthRefreshJSONBody = SharedReqRefresh

// PostAdminAuthVerifyMfaJSONBody defines parameters for PostAdminAuthVerifyMfa.
type PostAdminAuthVerifyMfaJSONBody = SharedReqMfa

// PostBbsAccessTokenJSONBody defines parameters for PostBbsAccessToken.
type PostBbsAccessTokenJSONBody = ServicesReqServiceAccountsAccessToken

// PostBbsAccessTokensJSONBody defines parameters for PostBbsAccessTokens.
type PostBbsAccessTokensJSONBody = ServicesReqServiceAccountsAccessTokens

// PostBbsAccountsJSONBody defines parameters for PostBbsAccounts.
type PostBbsAccountsJSONBody = map[string]interface{}

// PostBbsAccountsParams defines parameters for PostBbsAccounts.
type PostBbsAccountsParams struct {
	// The application ID to use to filter accounts
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// The organization ID to use to filter accounts
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`

	// The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostBbsAccountsCountJSONBody defines parameters for PostBbsAccountsCount.
type PostBbsAccountsCountJSONBody = map[string]interface{}

// PostBbsAccountsCountParams defines parameters for PostBbsAccountsCount.
type PostBbsAccountsCountParams struct {
	// The application ID to use to filter accounts
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// The organization ID to use to filter accounts
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`
}

// PostBbsServiceAccountIdJSONBody defines parameters for PostBbsServiceAccountId.
type PostBbsServiceAccountIdJSONBody = ServicesReqServiceAccountsParams

// GetBbsServiceRegsParams defines parameters for GetBbsServiceRegs.
type GetBbsServiceRegsParams struct {
	// A comma-separated list of service IDs to return registrations for
	Ids string `form:"ids" json:"ids"`
}

// DeleteServicesAccountMfaJSONBody defines parameters for DeleteServicesAccountMfa.
type DeleteServicesAccountMfaJSONBody = SharedReqMfa

// PostServicesAccountMfaJSONBody defines parameters for PostServicesAccountMfa.
type PostServicesAccountMfaJSONBody = SharedReqMfa

// PutServicesAccountPreferencesJSONBody defines parameters for PutServicesAccountPreferences.
type PutServicesAccountPreferencesJSONBody = map[string]interface{}

// PutServicesAccountProfileJSONBody defines parameters for PutServicesAccountProfile.
type PutServicesAccountProfileJSONBody = Profile

// PutServicesAccountUsernameJSONBody defines parameters for PutServicesAccountUsername.
type PutServicesAccountUsernameJSONBody = Username

// GetServicesAccountsParams defines parameters for GetServicesAccounts.
type GetServicesAccountsParams struct {
	// The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// The account ID
	AccountId *string `form:"account-id,omitempty" json:"account-id,omitempty"`

	// The account profile first name
	Firstname *string `form:"firstname,omitempty" json:"firstname,omitempty"`

	// The account profile last name
	Lastname *string `form:"lastname,omitempty" json:"lastname,omitempty"`

	// The auth type
	AuthType *string `form:"auth-type,omitempty" json:"auth-type,omitempty"`

	// The authentication type identifier
	AuthTypeIdentifier *string `form:"auth-type-identifier,omitempty" json:"auth-type-identifier,omitempty"`

	// Account has permissions (permissions, roles, or groups) filter
	HasPermissions *bool `form:"has-permissions,omitempty" json:"has-permissions,omitempty"`

	// A comma-separated list of permission names
	Permissions *string `form:"permissions,omitempty" json:"permissions,omitempty"`

	// A comma-separated list of role IDs
	RoleIds *string `form:"role-ids,omitempty" json:"role-ids,omitempty"`

	// A comma-separated list of group IDs
	GroupIds *string `form:"group-ids,omitempty" json:"group-ids,omitempty"`
}

// PostServicesAccountsJSONBody defines parameters for PostServicesAccounts.
type PostServicesAccountsJSONBody = SharedReqCreateAccount

// PutServicesAccountsJSONBody defines parameters for PutServicesAccounts.
type PutServicesAccountsJSONBody = SharedReqUpdateAccount

// PostServicesApplicationConfigsJSONBody defines parameters for PostServicesApplicationConfigs.
type PostServicesApplicationConfigsJSONBody = ServicesReqApplicationConfigs

// PostServicesApplicationOrganizationConfigsJSONBody defines parameters for PostServicesApplicationOrganizationConfigs.
type PostServicesApplicationOrganizationConfigsJSONBody = ServicesReqApplicationOrgConfigs

// DeleteServicesAuthAccountAuthTypeLinkJSONBody defines parameters for DeleteServicesAuthAccountAuthTypeLink.
type DeleteServicesAuthAccountAuthTypeLinkJSONBody = ServicesReqAccountAuthTypeUnlink

// PostServicesAuthAccountAuthTypeLinkJSONBody defines parameters for PostServicesAuthAccountAuthTypeLink.
type PostServicesAuthAccountAuthTypeLinkJSONBody = ServicesReqAccountAuthTypeLink

// PostServicesAuthAccountCanLinkJSONBody defines parameters for PostServicesAuthAccountCanLink.
type PostServicesAuthAccountCanLinkJSONBody = SharedReqAccountCheck

// PostServicesAuthAccountCanSignInJSONBody defines parameters for PostServicesAuthAccountCanSignIn.
type PostServicesAuthAccountCanSignInJSONBody = SharedReqAccountCheck

// PostServicesAuthAccountExistsJSONBody defines parameters for PostServicesAuthAccountExists.
type PostServicesAuthAccountExistsJSONBody = SharedReqAccountCheck

// PostServicesAuthAuthorizeServiceJSONBody defines parameters for PostServicesAuthAuthorizeService.
type PostServicesAuthAuthorizeServiceJSONBody = ServicesReqAuthorizeService

// PostServicesAuthCredentialForgotCompleteJSONBody defines parameters for PostServicesAuthCredentialForgotComplete.
type PostServicesAuthCredentialForgotCompleteJSONBody = ServicesReqCredentialForgotComplete

// PostServicesAuthCredentialForgotInitiateJSONBody defines parameters for PostServicesAuthCredentialForgotInitiate.
type PostServicesAuthCredentialForgotInitiateJSONBody = ServicesReqCredentialForgotInitiate

// PostServicesAuthCredentialSendVerifyJSONBody defines parameters for PostServicesAuthCredentialSendVerify.
type PostServicesAuthCredentialSendVerifyJSONBody = ServicesReqCredentialSendVerify

// PostServicesAuthCredentialUpdateJSONBody defines parameters for PostServicesAuthCredentialUpdate.
type PostServicesAuthCredentialUpdateJSONBody = ServicesReqCredentialUpdate

// GetServicesAuthCredentialVerifyParams defines parameters for GetServicesAuthCredentialVerify.
type GetServicesAuthCredentialVerifyParams struct {
	// Credential ID
	Id string `form:"id" json:"id"`

	// Verification code
	Code string `form:"code" json:"code"`
}

// PostServicesAuthLoginJSONBody defines parameters for PostServicesAuthLogin.
type PostServicesAuthLoginJSONBody = SharedReqLogin

// PostServicesAuthLoginUrlJSONBody defines parameters for PostServicesAuthLoginUrl.
type PostServicesAuthLoginUrlJSONBody = SharedReqLoginUrl

// PostServicesAuthLogoutJSONBody defines parameters for PostServicesAuthLogout.
type PostServicesAuthLogoutJSONBody struct {
	AllSessions bool `json:"all_sessions"`
}

// PostServicesAuthMfaJSONBody defines parameters for PostServicesAuthMfa.
type PostServicesAuthMfaJSONBody = SharedReqLoginMfa

// PostServicesAuthMfaParams defines parameters for PostServicesAuthMfa.
type PostServicesAuthMfaParams struct {
	// Login state
	State *string `form:"state,omitempty" json:"state,omitempty"`
}

// PostServicesAuthRefreshJSONBody defines parameters for PostServicesAuthRefresh.
type PostServicesAuthRefreshJSONBody = SharedReqRefresh

// GetServicesAuthServiceRegsParams defines parameters for GetServicesAuthServiceRegs.
type GetServicesAuthServiceRegsParams struct {
	// A comma-separated list of service IDs to return registrations for
	Ids string `form:"ids" json:"ids"`
}

// PostServicesAuthVerifyMfaJSONBody defines parameters for PostServicesAuthVerifyMfa.
type PostServicesAuthVerifyMfaJSONBody = SharedReqMfa

// DeleteSystemApiKeysParams defines parameters for DeleteSystemApiKeys.
type DeleteSystemApiKeysParams struct {
	// The ID of the API key to delete
	Id string `form:"id" json:"id"`
}

// GetSystemApiKeysParams defines parameters for GetSystemApiKeys.
type GetSystemApiKeysParams struct {
	// The ID of the API key to return. Required if `app_id` is not provided.
	Id *string `form:"id,omitempty" json:"id,omitempty"`

	// The app ID of the API keys to return. Required if `id` is not provided.
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`
}

// PostSystemApiKeysJSONBody defines parameters for PostSystemApiKeys.
type PostSystemApiKeysJSONBody = APIKey

// PutSystemApiKeysJSONBody defines parameters for PutSystemApiKeys.
type PutSystemApiKeysJSONBody = APIKey

// GetSystemAppOrgsParams defines parameters for GetSystemAppOrgs.
type GetSystemAppOrgsParams struct {
	// Application ID to search for
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// Organization ID to search for
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`
}

// PostSystemAppOrgsJSONBody defines parameters for PostSystemAppOrgs.
type PostSystemAppOrgsJSONBody = ApplicationOrganization

// PutSystemAppOrgsIdJSONBody defines parameters for PutSystemAppOrgsId.
type PutSystemAppOrgsIdJSONBody = ApplicationOrganization

// GetSystemApplicationConfigsParams defines parameters for GetSystemApplicationConfigs.
type GetSystemApplicationConfigsParams struct {
	AppTypeId string  `form:"app_type_id" json:"app_type_id"`
	OrgId     *string `form:"org_id,omitempty" json:"org_id,omitempty"`
	Version   *string `form:"version,omitempty" json:"version,omitempty"`
}

// PostSystemApplicationConfigsJSONBody defines parameters for PostSystemApplicationConfigs.
type PostSystemApplicationConfigsJSONBody = ApplicationConfig

// PutSystemApplicationConfigsIdJSONBody defines parameters for PutSystemApplicationConfigsId.
type PutSystemApplicationConfigsIdJSONBody = ApplicationConfig

// PostSystemApplicationsJSONBody defines parameters for PostSystemApplications.
type PostSystemApplicationsJSONBody = Application

// PutSystemApplicationsIdJSONBody defines parameters for PutSystemApplicationsId.
type PutSystemApplicationsIdJSONBody = Application

// PostSystemAuthTypesJSONBody defines parameters for PostSystemAuthTypes.
type PostSystemAuthTypesJSONBody = AuthType

// PutSystemAuthTypesIdJSONBody defines parameters for PutSystemAuthTypesId.
type PutSystemAuthTypesIdJSONBody = AuthType

// GetSystemAuthAppOrgTokenParams defines parameters for GetSystemAuthAppOrgToken.
type GetSystemAuthAppOrgTokenParams struct {
	// The application ID of the token to return
	AppId string `form:"app_id" json:"app_id"`

	// The organization ID of the token to return
	OrgId string `form:"org_id" json:"org_id"`
}

// PostSystemGlobalConfigJSONBody defines parameters for PostSystemGlobalConfig.
type PostSystemGlobalConfigJSONBody = GlobalConfig

// PutSystemGlobalConfigJSONBody defines parameters for PutSystemGlobalConfig.
type PutSystemGlobalConfigJSONBody = GlobalConfig

// PostSystemOrganizationsJSONBody defines parameters for PostSystemOrganizations.
type PostSystemOrganizationsJSONBody = Organization

// PutSystemOrganizationsIdJSONBody defines parameters for PutSystemOrganizationsId.
type PutSystemOrganizationsIdJSONBody = Organization

// PostSystemPermissionsJSONBody defines parameters for PostSystemPermissions.
type PostSystemPermissionsJSONBody = Permission

// PutSystemPermissionsJSONBody defines parameters for PutSystemPermissions.
type PutSystemPermissionsJSONBody = Permission

// DeleteSystemServiceAccountsParams defines parameters for DeleteSystemServiceAccounts.
type DeleteSystemServiceAccountsParams struct {
	// Service account ID to delete
	AccountId string `form:"account_id" json:"account_id"`
}

// GetSystemServiceAccountsParams defines parameters for GetSystemServiceAccounts.
type GetSystemServiceAccountsParams struct {
	// Service account ID to search for
	AccountId *string `form:"account_id,omitempty" json:"account_id,omitempty"`

	// Service account name to search for
	Name *string `form:"name,omitempty" json:"name,omitempty"`

	// Service account app ID to search for
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// Service account org ID to search for
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`

	// A comma-separated list of service account permissions to search for
	Permissions *string `form:"permissions,omitempty" json:"permissions,omitempty"`

	// A comma-separated list of service account scopes to search for
	Scopes *string `form:"scopes,omitempty" json:"scopes,omitempty"`
}

// PostSystemServiceAccountsJSONBody defines parameters for PostSystemServiceAccounts.
type PostSystemServiceAccountsJSONBody = ServiceAccount

// PostSystemServiceAccountsParams defines parameters for PostSystemServiceAccounts.
type PostSystemServiceAccountsParams struct {
	// Service account app ID to copy from
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// Service account org ID to copy from
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`
}

// DeleteSystemServiceAccountsIdParams defines parameters for DeleteSystemServiceAccountsId.
type DeleteSystemServiceAccountsIdParams struct {
	// Application ID of the service account instance
	AppId string `form:"app_id" json:"app_id"`

	// Organization ID of the service account instance
	OrgId string `form:"org_id" json:"org_id"`
}

// GetSystemServiceAccountsIdParams defines parameters for GetSystemServiceAccountsId.
type GetSystemServiceAccountsIdParams struct {
	// Application ID of the service account instance
	AppId string `form:"app_id" json:"app_id"`

	// Organization ID of the service account instance
	OrgId string `form:"org_id" json:"org_id"`
}

// PutSystemServiceAccountsIdJSONBody defines parameters for PutSystemServiceAccountsId.
type PutSystemServiceAccountsIdJSONBody = SystemReqUpdateServiceAccount

// PutSystemServiceAccountsIdParams defines parameters for PutSystemServiceAccountsId.
type PutSystemServiceAccountsIdParams struct {
	// Application ID of the service account instance
	AppId string `form:"app_id" json:"app_id"`

	// Organization ID of the service account instance
	OrgId string `form:"org_id" json:"org_id"`
}

// DeleteSystemServiceAccountsIdCredsParams defines parameters for DeleteSystemServiceAccountsIdCreds.
type DeleteSystemServiceAccountsIdCredsParams struct {
	// id of the credential to be removed
	CredId string `form:"cred_id" json:"cred_id"`
}

// PostSystemServiceAccountsIdCredsJSONBody defines parameters for PostSystemServiceAccountsIdCreds.
type PostSystemServiceAccountsIdCredsJSONBody = ServiceAccountCredential

// DeleteSystemServiceRegsParams defines parameters for DeleteSystemServiceRegs.
type DeleteSystemServiceRegsParams struct {
	// The service ID of the registration to delete
	Id string `form:"id" json:"id"`
}

// GetSystemServiceRegsParams defines parameters for GetSystemServiceRegs.
type GetSystemServiceRegsParams struct {
	// A comma-separated list of service IDs to return registrations for
	Ids string `form:"ids" json:"ids"`
}

// PostSystemServiceRegsJSONBody defines parameters for PostSystemServiceRegs.
type PostSystemServiceRegsJSONBody = ServiceReg

// PutSystemServiceRegsJSONBody defines parameters for PutSystemServiceRegs.
type PutSystemServiceRegsJSONBody = ServiceReg

// PostTpsAccessTokenJSONBody defines parameters for PostTpsAccessToken.
type PostTpsAccessTokenJSONBody = ServicesReqServiceAccountsAccessToken

// PostTpsAccessTokensJSONBody defines parameters for PostTpsAccessTokens.
type PostTpsAccessTokensJSONBody = ServicesReqServiceAccountsAccessTokens

// PostTpsAccountsJSONBody defines parameters for PostTpsAccounts.
type PostTpsAccountsJSONBody = map[string]interface{}

// PostTpsAccountsParams defines parameters for PostTpsAccounts.
type PostTpsAccountsParams struct {
	// The application ID to use to filter accounts
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// The organization ID to use to filter accounts
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`

	// The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostTpsAccountsCountJSONBody defines parameters for PostTpsAccountsCount.
type PostTpsAccountsCountJSONBody = map[string]interface{}

// PostTpsAccountsCountParams defines parameters for PostTpsAccountsCount.
type PostTpsAccountsCountParams struct {
	// The application ID to use to filter accounts
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// The organization ID to use to filter accounts
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`
}

// PostTpsServiceAccountIdJSONBody defines parameters for PostTpsServiceAccountId.
type PostTpsServiceAccountIdJSONBody = ServicesReqServiceAccountsParams

// GetTpsServiceRegsParams defines parameters for GetTpsServiceRegs.
type GetTpsServiceRegsParams struct {
	// A comma-separated list of service IDs to return registrations for
	Ids string `form:"ids" json:"ids"`
}

// GetUiCredentialResetParams defines parameters for GetUiCredentialReset.
type GetUiCredentialResetParams struct {
	// Credential ID
	Id string `form:"id" json:"id"`

	// Reset code
	Code string `form:"code" json:"code"`
}

// GetUiCredentialVerifyParams defines parameters for GetUiCredentialVerify.
type GetUiCredentialVerifyParams struct {
	// Credential ID
	Id string `form:"id" json:"id"`

	// Verification code
	Code string `form:"code" json:"code"`
}

// PutAdminAccountUsernameJSONRequestBody defines body for PutAdminAccountUsername for application/json ContentType.
type PutAdminAccountUsernameJSONRequestBody = PutAdminAccountUsernameJSONBody

// PostAdminApplicationAccountsJSONRequestBody defines body for PostAdminApplicationAccounts for application/json ContentType.
type PostAdminApplicationAccountsJSONRequestBody = PostAdminApplicationAccountsJSONBody

// PutAdminApplicationAccountsJSONRequestBody defines body for PutAdminApplicationAccounts for application/json ContentType.
type PutAdminApplicationAccountsJSONRequestBody = PutAdminApplicationAccountsJSONBody

// DeleteAdminApplicationAccountsIdPermissionsJSONRequestBody defines body for DeleteAdminApplicationAccountsIdPermissions for application/json ContentType.
type DeleteAdminApplicationAccountsIdPermissionsJSONRequestBody = DeleteAdminApplicationAccountsIdPermissionsJSONBody

// PutAdminApplicationAccountsIdPermissionsJSONRequestBody defines body for PutAdminApplicationAccountsIdPermissions for application/json ContentType.
type PutAdminApplicationAccountsIdPermissionsJSONRequestBody = PutAdminApplicationAccountsIdPermissionsJSONBody

// DeleteAdminApplicationAccountsIdRolesJSONRequestBody defines body for DeleteAdminApplicationAccountsIdRoles for application/json ContentType.
type DeleteAdminApplicationAccountsIdRolesJSONRequestBody = DeleteAdminApplicationAccountsIdRolesJSONBody

// PutAdminApplicationAccountsIdRolesJSONRequestBody defines body for PutAdminApplicationAccountsIdRoles for application/json ContentType.
type PutAdminApplicationAccountsIdRolesJSONRequestBody = PutAdminApplicationAccountsIdRolesJSONBody

// PutAdminApplicationAccountsIdSystemConfigsJSONRequestBody defines body for PutAdminApplicationAccountsIdSystemConfigs for application/json ContentType.
type PutAdminApplicationAccountsIdSystemConfigsJSONRequestBody = PutAdminApplicationAccountsIdSystemConfigsJSONBody

// PostAdminApplicationGroupsJSONRequestBody defines body for PostAdminApplicationGroups for application/json ContentType.
type PostAdminApplicationGroupsJSONRequestBody = PostAdminApplicationGroupsJSONBody

// PutAdminApplicationGroupsIdJSONRequestBody defines body for PutAdminApplicationGroupsId for application/json ContentType.
type PutAdminApplicationGroupsIdJSONRequestBody = PutAdminApplicationGroupsIdJSONBody

// DeleteAdminApplicationGroupsIdAccountsJSONRequestBody defines body for DeleteAdminApplicationGroupsIdAccounts for application/json ContentType.
type DeleteAdminApplicationGroupsIdAccountsJSONRequestBody = DeleteAdminApplicationGroupsIdAccountsJSONBody

// PutAdminApplicationGroupsIdAccountsJSONRequestBody defines body for PutAdminApplicationGroupsIdAccounts for application/json ContentType.
type PutAdminApplicationGroupsIdAccountsJSONRequestBody = PutAdminApplicationGroupsIdAccountsJSONBody

// PostAdminApplicationRolesJSONRequestBody defines body for PostAdminApplicationRoles for application/json ContentType.
type PostAdminApplicationRolesJSONRequestBody = PostAdminApplicationRolesJSONBody

// PutAdminApplicationRolesIdJSONRequestBody defines body for PutAdminApplicationRolesId for application/json ContentType.
type PutAdminApplicationRolesIdJSONRequestBody = PutAdminApplicationRolesIdJSONBody

// PutAdminApplicationRolesIdPermissionsJSONRequestBody defines body for PutAdminApplicationRolesIdPermissions for application/json ContentType.
type PutAdminApplicationRolesIdPermissionsJSONRequestBody = PutAdminApplicationRolesIdPermissionsJSONBody

// PostAdminAuthLoginJSONRequestBody defines body for PostAdminAuthLogin for application/json ContentType.
type PostAdminAuthLoginJSONRequestBody = PostAdminAuthLoginJSONBody

// PostAdminAuthLoginUrlJSONRequestBody defines body for PostAdminAuthLoginUrl for application/json ContentType.
type PostAdminAuthLoginUrlJSONRequestBody = PostAdminAuthLoginUrlJSONBody

// PostAdminAuthMfaJSONRequestBody defines body for PostAdminAuthMfa for application/json ContentType.
type PostAdminAuthMfaJSONRequestBody = PostAdminAuthMfaJSONBody

// PostAdminAuthRefreshJSONRequestBody defines body for PostAdminAuthRefresh for application/json ContentType.
type PostAdminAuthRefreshJSONRequestBody = PostAdminAuthRefreshJSONBody

// PostAdminAuthVerifyMfaJSONRequestBody defines body for PostAdminAuthVerifyMfa for application/json ContentType.
type PostAdminAuthVerifyMfaJSONRequestBody = PostAdminAuthVerifyMfaJSONBody

// PostBbsAccessTokenJSONRequestBody defines body for PostBbsAccessToken for application/json ContentType.
type PostBbsAccessTokenJSONRequestBody = PostBbsAccessTokenJSONBody

// PostBbsAccessTokensJSONRequestBody defines body for PostBbsAccessTokens for application/json ContentType.
type PostBbsAccessTokensJSONRequestBody = PostBbsAccessTokensJSONBody

// PostBbsAccountsJSONRequestBody defines body for PostBbsAccounts for application/json ContentType.
type PostBbsAccountsJSONRequestBody = PostBbsAccountsJSONBody

// PostBbsAccountsCountJSONRequestBody defines body for PostBbsAccountsCount for application/json ContentType.
type PostBbsAccountsCountJSONRequestBody = PostBbsAccountsCountJSONBody

// PostBbsServiceAccountIdJSONRequestBody defines body for PostBbsServiceAccountId for application/json ContentType.
type PostBbsServiceAccountIdJSONRequestBody = PostBbsServiceAccountIdJSONBody

// DeleteServicesAccountMfaJSONRequestBody defines body for DeleteServicesAccountMfa for application/json ContentType.
type DeleteServicesAccountMfaJSONRequestBody = DeleteServicesAccountMfaJSONBody

// PostServicesAccountMfaJSONRequestBody defines body for PostServicesAccountMfa for application/json ContentType.
type PostServicesAccountMfaJSONRequestBody = PostServicesAccountMfaJSONBody

// PutServicesAccountPreferencesJSONRequestBody defines body for PutServicesAccountPreferences for application/json ContentType.
type PutServicesAccountPreferencesJSONRequestBody = PutServicesAccountPreferencesJSONBody

// PutServicesAccountProfileJSONRequestBody defines body for PutServicesAccountProfile for application/json ContentType.
type PutServicesAccountProfileJSONRequestBody = PutServicesAccountProfileJSONBody

// PutServicesAccountUsernameJSONRequestBody defines body for PutServicesAccountUsername for application/json ContentType.
type PutServicesAccountUsernameJSONRequestBody = PutServicesAccountUsernameJSONBody

// PostServicesAccountsJSONRequestBody defines body for PostServicesAccounts for application/json ContentType.
type PostServicesAccountsJSONRequestBody = PostServicesAccountsJSONBody

// PutServicesAccountsJSONRequestBody defines body for PutServicesAccounts for application/json ContentType.
type PutServicesAccountsJSONRequestBody = PutServicesAccountsJSONBody

// PostServicesApplicationConfigsJSONRequestBody defines body for PostServicesApplicationConfigs for application/json ContentType.
type PostServicesApplicationConfigsJSONRequestBody = PostServicesApplicationConfigsJSONBody

// PostServicesApplicationOrganizationConfigsJSONRequestBody defines body for PostServicesApplicationOrganizationConfigs for application/json ContentType.
type PostServicesApplicationOrganizationConfigsJSONRequestBody = PostServicesApplicationOrganizationConfigsJSONBody

// DeleteServicesAuthAccountAuthTypeLinkJSONRequestBody defines body for DeleteServicesAuthAccountAuthTypeLink for application/json ContentType.
type DeleteServicesAuthAccountAuthTypeLinkJSONRequestBody = DeleteServicesAuthAccountAuthTypeLinkJSONBody

// PostServicesAuthAccountAuthTypeLinkJSONRequestBody defines body for PostServicesAuthAccountAuthTypeLink for application/json ContentType.
type PostServicesAuthAccountAuthTypeLinkJSONRequestBody = PostServicesAuthAccountAuthTypeLinkJSONBody

// PostServicesAuthAccountCanLinkJSONRequestBody defines body for PostServicesAuthAccountCanLink for application/json ContentType.
type PostServicesAuthAccountCanLinkJSONRequestBody = PostServicesAuthAccountCanLinkJSONBody

// PostServicesAuthAccountCanSignInJSONRequestBody defines body for PostServicesAuthAccountCanSignIn for application/json ContentType.
type PostServicesAuthAccountCanSignInJSONRequestBody = PostServicesAuthAccountCanSignInJSONBody

// PostServicesAuthAccountExistsJSONRequestBody defines body for PostServicesAuthAccountExists for application/json ContentType.
type PostServicesAuthAccountExistsJSONRequestBody = PostServicesAuthAccountExistsJSONBody

// PostServicesAuthAuthorizeServiceJSONRequestBody defines body for PostServicesAuthAuthorizeService for application/json ContentType.
type PostServicesAuthAuthorizeServiceJSONRequestBody = PostServicesAuthAuthorizeServiceJSONBody

// PostServicesAuthCredentialForgotCompleteJSONRequestBody defines body for PostServicesAuthCredentialForgotComplete for application/json ContentType.
type PostServicesAuthCredentialForgotCompleteJSONRequestBody = PostServicesAuthCredentialForgotCompleteJSONBody

// PostServicesAuthCredentialForgotInitiateJSONRequestBody defines body for PostServicesAuthCredentialForgotInitiate for application/json ContentType.
type PostServicesAuthCredentialForgotInitiateJSONRequestBody = PostServicesAuthCredentialForgotInitiateJSONBody

// PostServicesAuthCredentialSendVerifyJSONRequestBody defines body for PostServicesAuthCredentialSendVerify for application/json ContentType.
type PostServicesAuthCredentialSendVerifyJSONRequestBody = PostServicesAuthCredentialSendVerifyJSONBody

// PostServicesAuthCredentialUpdateJSONRequestBody defines body for PostServicesAuthCredentialUpdate for application/json ContentType.
type PostServicesAuthCredentialUpdateJSONRequestBody = PostServicesAuthCredentialUpdateJSONBody

// PostServicesAuthLoginJSONRequestBody defines body for PostServicesAuthLogin for application/json ContentType.
type PostServicesAuthLoginJSONRequestBody = PostServicesAuthLoginJSONBody

// PostServicesAuthLoginUrlJSONRequestBody defines body for PostServicesAuthLoginUrl for application/json ContentType.
type PostServicesAuthLoginUrlJSONRequestBody = PostServicesAuthLoginUrlJSONBody

// PostServicesAuthLogoutJSONRequestBody defines body for PostServicesAuthLogout for application/json ContentType.
type PostServicesAuthLogoutJSONRequestBody PostServicesAuthLogoutJSONBody

// PostServicesAuthMfaJSONRequestBody defines body for PostServicesAuthMfa for application/json ContentType.
type PostServicesAuthMfaJSONRequestBody = PostServicesAuthMfaJSONBody

// PostServicesAuthRefreshJSONRequestBody defines body for PostServicesAuthRefresh for application/json ContentType.
type PostServicesAuthRefreshJSONRequestBody = PostServicesAuthRefreshJSONBody

// PostServicesAuthVerifyMfaJSONRequestBody defines body for PostServicesAuthVerifyMfa for application/json ContentType.
type PostServicesAuthVerifyMfaJSONRequestBody = PostServicesAuthVerifyMfaJSONBody

// PostSystemApiKeysJSONRequestBody defines body for PostSystemApiKeys for application/json ContentType.
type PostSystemApiKeysJSONRequestBody = PostSystemApiKeysJSONBody

// PutSystemApiKeysJSONRequestBody defines body for PutSystemApiKeys for application/json ContentType.
type PutSystemApiKeysJSONRequestBody = PutSystemApiKeysJSONBody

// PostSystemAppOrgsJSONRequestBody defines body for PostSystemAppOrgs for application/json ContentType.
type PostSystemAppOrgsJSONRequestBody = PostSystemAppOrgsJSONBody

// PutSystemAppOrgsIdJSONRequestBody defines body for PutSystemAppOrgsId for application/json ContentType.
type PutSystemAppOrgsIdJSONRequestBody = PutSystemAppOrgsIdJSONBody

// PostSystemApplicationConfigsJSONRequestBody defines body for PostSystemApplicationConfigs for application/json ContentType.
type PostSystemApplicationConfigsJSONRequestBody = PostSystemApplicationConfigsJSONBody

// PutSystemApplicationConfigsIdJSONRequestBody defines body for PutSystemApplicationConfigsId for application/json ContentType.
type PutSystemApplicationConfigsIdJSONRequestBody = PutSystemApplicationConfigsIdJSONBody

// PostSystemApplicationsJSONRequestBody defines body for PostSystemApplications for application/json ContentType.
type PostSystemApplicationsJSONRequestBody = PostSystemApplicationsJSONBody

// PutSystemApplicationsIdJSONRequestBody defines body for PutSystemApplicationsId for application/json ContentType.
type PutSystemApplicationsIdJSONRequestBody = PutSystemApplicationsIdJSONBody

// PostSystemAuthTypesJSONRequestBody defines body for PostSystemAuthTypes for application/json ContentType.
type PostSystemAuthTypesJSONRequestBody = PostSystemAuthTypesJSONBody

// PutSystemAuthTypesIdJSONRequestBody defines body for PutSystemAuthTypesId for application/json ContentType.
type PutSystemAuthTypesIdJSONRequestBody = PutSystemAuthTypesIdJSONBody

// PostSystemGlobalConfigJSONRequestBody defines body for PostSystemGlobalConfig for application/json ContentType.
type PostSystemGlobalConfigJSONRequestBody = PostSystemGlobalConfigJSONBody

// PutSystemGlobalConfigJSONRequestBody defines body for PutSystemGlobalConfig for application/json ContentType.
type PutSystemGlobalConfigJSONRequestBody = PutSystemGlobalConfigJSONBody

// PostSystemOrganizationsJSONRequestBody defines body for PostSystemOrganizations for application/json ContentType.
type PostSystemOrganizationsJSONRequestBody = PostSystemOrganizationsJSONBody

// PutSystemOrganizationsIdJSONRequestBody defines body for PutSystemOrganizationsId for application/json ContentType.
type PutSystemOrganizationsIdJSONRequestBody = PutSystemOrganizationsIdJSONBody

// PostSystemPermissionsJSONRequestBody defines body for PostSystemPermissions for application/json ContentType.
type PostSystemPermissionsJSONRequestBody = PostSystemPermissionsJSONBody

// PutSystemPermissionsJSONRequestBody defines body for PutSystemPermissions for application/json ContentType.
type PutSystemPermissionsJSONRequestBody = PutSystemPermissionsJSONBody

// PostSystemServiceAccountsJSONRequestBody defines body for PostSystemServiceAccounts for application/json ContentType.
type PostSystemServiceAccountsJSONRequestBody = PostSystemServiceAccountsJSONBody

// PutSystemServiceAccountsIdJSONRequestBody defines body for PutSystemServiceAccountsId for application/json ContentType.
type PutSystemServiceAccountsIdJSONRequestBody = PutSystemServiceAccountsIdJSONBody

// PostSystemServiceAccountsIdCredsJSONRequestBody defines body for PostSystemServiceAccountsIdCreds for application/json ContentType.
type PostSystemServiceAccountsIdCredsJSONRequestBody = PostSystemServiceAccountsIdCredsJSONBody

// PostSystemServiceRegsJSONRequestBody defines body for PostSystemServiceRegs for application/json ContentType.
type PostSystemServiceRegsJSONRequestBody = PostSystemServiceRegsJSONBody

// PutSystemServiceRegsJSONRequestBody defines body for PutSystemServiceRegs for application/json ContentType.
type PutSystemServiceRegsJSONRequestBody = PutSystemServiceRegsJSONBody

// PostTpsAccessTokenJSONRequestBody defines body for PostTpsAccessToken for application/json ContentType.
type PostTpsAccessTokenJSONRequestBody = PostTpsAccessTokenJSONBody

// PostTpsAccessTokensJSONRequestBody defines body for PostTpsAccessTokens for application/json ContentType.
type PostTpsAccessTokensJSONRequestBody = PostTpsAccessTokensJSONBody

// PostTpsAccountsJSONRequestBody defines body for PostTpsAccounts for application/json ContentType.
type PostTpsAccountsJSONRequestBody = PostTpsAccountsJSONBody

// PostTpsAccountsCountJSONRequestBody defines body for PostTpsAccountsCount for application/json ContentType.
type PostTpsAccountsCountJSONRequestBody = PostTpsAccountsCountJSONBody

// PostTpsServiceAccountIdJSONRequestBody defines body for PostTpsServiceAccountId for application/json ContentType.
type PostTpsServiceAccountIdJSONRequestBody = PostTpsServiceAccountIdJSONBody

// Getter for additional properties for AccountAuthType_Params. Returns the specified
// element and whether it was found
func (a AccountAuthType_Params) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AccountAuthType_Params
func (a *AccountAuthType_Params) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AccountAuthType_Params to handle AdditionalProperties
func (a *AccountAuthType_Params) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AccountAuthType_Params to handle AdditionalProperties
func (a AccountAuthType_Params) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for AuthType_Params. Returns the specified
// element and whether it was found
func (a AuthType_Params) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AuthType_Params
func (a *AuthType_Params) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AuthType_Params to handle AdditionalProperties
func (a *AuthType_Params) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AuthType_Params to handle AdditionalProperties
func (a AuthType_Params) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for IdentityProviderSettings_ExternalIdFields. Returns the specified
// element and whether it was found
func (a IdentityProviderSettings_ExternalIdFields) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for IdentityProviderSettings_ExternalIdFields
func (a *IdentityProviderSettings_ExternalIdFields) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for IdentityProviderSettings_ExternalIdFields to handle AdditionalProperties
func (a *IdentityProviderSettings_ExternalIdFields) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for IdentityProviderSettings_ExternalIdFields to handle AdditionalProperties
func (a IdentityProviderSettings_ExternalIdFields) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for IdentityProviderSettings_Groups. Returns the specified
// element and whether it was found
func (a IdentityProviderSettings_Groups) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for IdentityProviderSettings_Groups
func (a *IdentityProviderSettings_Groups) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for IdentityProviderSettings_Groups to handle AdditionalProperties
func (a *IdentityProviderSettings_Groups) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for IdentityProviderSettings_Groups to handle AdditionalProperties
func (a IdentityProviderSettings_Groups) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for IdentityProviderSettings_Roles. Returns the specified
// element and whether it was found
func (a IdentityProviderSettings_Roles) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for IdentityProviderSettings_Roles
func (a *IdentityProviderSettings_Roles) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for IdentityProviderSettings_Roles to handle AdditionalProperties
func (a *IdentityProviderSettings_Roles) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for IdentityProviderSettings_Roles to handle AdditionalProperties
func (a IdentityProviderSettings_Roles) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SupportedAuthType_Params. Returns the specified
// element and whether it was found
func (a SupportedAuthType_Params) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SupportedAuthType_Params
func (a *SupportedAuthType_Params) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SupportedAuthType_Params to handle AdditionalProperties
func (a *SupportedAuthType_Params) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SupportedAuthType_Params to handle AdditionalProperties
func (a SupportedAuthType_Params) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
