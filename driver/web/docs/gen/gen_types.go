// Package Def provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.8.1 DO NOT EDIT.
package Def

import (
	"encoding/json"
	"fmt"

	"github.com/pkg/errors"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for DeviceFieldsType.
const (
	DeviceFieldsTypeDesktop DeviceFieldsType = "desktop"

	DeviceFieldsTypeMobile DeviceFieldsType = "mobile"

	DeviceFieldsTypeOther DeviceFieldsType = "other"

	DeviceFieldsTypeWeb DeviceFieldsType = "web"
)

// Defines values for JWKAlg.
const (
	JWKAlgRS256 JWKAlg = "RS256"
)

// Defines values for JWKKty.
const (
	JWKKtyRSA JWKKty = "RSA"
)

// Defines values for JWKUse.
const (
	JWKUseSig JWKUse = "sig"
)

// Defines values for OrganizationFieldsType.
const (
	OrganizationFieldsTypeHuge OrganizationFieldsType = "huge"

	OrganizationFieldsTypeLarge OrganizationFieldsType = "large"

	OrganizationFieldsTypeMedium OrganizationFieldsType = "medium"

	OrganizationFieldsTypeMicro OrganizationFieldsType = "micro"

	OrganizationFieldsTypeSmall OrganizationFieldsType = "small"
)

// Defines values for ServicesReqAccountExistsAuthType.
const (
	ServicesReqAccountExistsAuthTypeAnonymous ServicesReqAccountExistsAuthType = "anonymous"

	ServicesReqAccountExistsAuthTypeEmail ServicesReqAccountExistsAuthType = "email"

	ServicesReqAccountExistsAuthTypeIllinoisOidc ServicesReqAccountExistsAuthType = "illinois_oidc"

	ServicesReqAccountExistsAuthTypeTwilioPhone ServicesReqAccountExistsAuthType = "twilio_phone"

	ServicesReqAccountExistsAuthTypeUsername ServicesReqAccountExistsAuthType = "username"
)

// Defines values for ServicesReqAccountAuthTypeLinkAuthType.
const (
	ServicesReqAccountAuthTypeLinkAuthTypeEmail ServicesReqAccountAuthTypeLinkAuthType = "email"

	ServicesReqAccountAuthTypeLinkAuthTypeIllinoisOidc ServicesReqAccountAuthTypeLinkAuthType = "illinois_oidc"

	ServicesReqAccountAuthTypeLinkAuthTypeTwilioPhone ServicesReqAccountAuthTypeLinkAuthType = "twilio_phone"

	ServicesReqAccountAuthTypeLinkAuthTypeUsername ServicesReqAccountAuthTypeLinkAuthType = "username"
)

// Defines values for ServicesReqAccountAuthTypeUnlinkAuthType.
const (
	ServicesReqAccountAuthTypeUnlinkAuthTypeEmail ServicesReqAccountAuthTypeUnlinkAuthType = "email"

	ServicesReqAccountAuthTypeUnlinkAuthTypeIllinoisOidc ServicesReqAccountAuthTypeUnlinkAuthType = "illinois_oidc"

	ServicesReqAccountAuthTypeUnlinkAuthTypeTwilioPhone ServicesReqAccountAuthTypeUnlinkAuthType = "twilio_phone"

	ServicesReqAccountAuthTypeUnlinkAuthTypeUsername ServicesReqAccountAuthTypeUnlinkAuthType = "username"
)

// Defines values for ServicesReqCredentialForgotInitiateAuthType.
const (
	ServicesReqCredentialForgotInitiateAuthTypeEmail ServicesReqCredentialForgotInitiateAuthType = "email"
)

// Defines values for ServicesReqCredentialSendVerifyAuthType.
const (
	ServicesReqCredentialSendVerifyAuthTypeEmail ServicesReqCredentialSendVerifyAuthType = "email"
)

// Defines values for ServicesResAuthorizeServiceTokenType.
const (
	ServicesResAuthorizeServiceTokenTypeBearer ServicesResAuthorizeServiceTokenType = "Bearer"
)

// Defines values for SharedReqLoginAuthType.
const (
	SharedReqLoginAuthTypeAnonymous SharedReqLoginAuthType = "anonymous"

	SharedReqLoginAuthTypeEmail SharedReqLoginAuthType = "email"

	SharedReqLoginAuthTypeIllinoisOidc SharedReqLoginAuthType = "illinois_oidc"

	SharedReqLoginAuthTypeTwilioPhone SharedReqLoginAuthType = "twilio_phone"
)

// Defines values for SharedReqLoginUrlAuthType.
const (
	SharedReqLoginUrlAuthTypeIllinoisOidc SharedReqLoginUrlAuthType = "illinois_oidc"
)

// Defines values for SharedReqLoginDeviceType.
const (
	SharedReqLoginDeviceTypeDesktop SharedReqLoginDeviceType = "desktop"

	SharedReqLoginDeviceTypeMobile SharedReqLoginDeviceType = "mobile"

	SharedReqLoginDeviceTypeOther SharedReqLoginDeviceType = "other"

	SharedReqLoginDeviceTypeWeb SharedReqLoginDeviceType = "web"
)

// Defines values for SharedReqLoginMfaType.
const (
	SharedReqLoginMfaTypeEmail SharedReqLoginMfaType = "email"

	SharedReqLoginMfaTypePhone SharedReqLoginMfaType = "phone"

	SharedReqLoginMfaTypeRecovery SharedReqLoginMfaType = "recovery"

	SharedReqLoginMfaTypeTotp SharedReqLoginMfaType = "totp"
)

// Defines values for SharedReqMfaType.
const (
	SharedReqMfaTypeEmail SharedReqMfaType = "email"

	SharedReqMfaTypePhone SharedReqMfaType = "phone"

	SharedReqMfaTypeTotp SharedReqMfaType = "totp"
)

// Defines values for SharedResRokwireTokenTokenType.
const (
	SharedResRokwireTokenTokenTypeBearer SharedResRokwireTokenTokenType = "Bearer"
)

// Defines values for SystemReqCreateOrganizationType.
const (
	SystemReqCreateOrganizationTypeHuge SystemReqCreateOrganizationType = "huge"

	SystemReqCreateOrganizationTypeLarge SystemReqCreateOrganizationType = "large"

	SystemReqCreateOrganizationTypeMedium SystemReqCreateOrganizationType = "medium"

	SystemReqCreateOrganizationTypeMicro SystemReqCreateOrganizationType = "micro"

	SystemReqCreateOrganizationTypeSmall SystemReqCreateOrganizationType = "small"
)

// Defines values for SystemReqUpdateOrganizationType.
const (
	SystemReqUpdateOrganizationTypeHuge SystemReqUpdateOrganizationType = "huge"

	SystemReqUpdateOrganizationTypeLarge SystemReqUpdateOrganizationType = "large"

	SystemReqUpdateOrganizationTypeMedium SystemReqUpdateOrganizationType = "medium"

	SystemReqUpdateOrganizationTypeMicro SystemReqUpdateOrganizationType = "micro"

	SystemReqUpdateOrganizationTypeSmall SystemReqUpdateOrganizationType = "small"
)

// Defines values for SystemResGetOrganizationsType.
const (
	SystemResGetOrganizationsTypeHuge SystemResGetOrganizationsType = "huge"

	SystemResGetOrganizationsTypeLarge SystemResGetOrganizationsType = "large"

	SystemResGetOrganizationsTypeMedium SystemResGetOrganizationsType = "medium"

	SystemResGetOrganizationsTypeMicro SystemResGetOrganizationsType = "micro"

	SystemResGetOrganizationsTypeSmall SystemResGetOrganizationsType = "small"
)

// API key record
type APIKey struct {
	AppId string  `json:"app_id"`
	Id    *string `json:"id,omitempty"`
	Key   string  `json:"key"`
}

// Account defines model for Account.
type Account struct {
	AppOrg      *ApplicationOrganization `json:"app_org,omitempty"`
	AuthTypes   *[]AccountAuthType       `json:"auth_types,omitempty"`
	Devices     *[]Device                `json:"devices,omitempty"`
	Fields      *AccountFields           `json:"fields,omitempty"`
	Groups      *[]AppOrgGroup           `json:"groups,omitempty"`
	Permissions *[]Permission            `json:"permissions,omitempty"`
	Preferences *map[string]interface{}  `json:"preferences,omitempty"`
	Profile     *Profile                 `json:"profile,omitempty"`
	Roles       *[]AppOrgRole            `json:"roles,omitempty"`
}

// AccountAuthType defines model for AccountAuthType.
type AccountAuthType struct {
	Account    *Account               `json:"account,omitempty"`
	AuthType   *AuthType              `json:"auth_type,omitempty"`
	Credential *Credential            `json:"credential,omitempty"`
	Fields     *AccountAuthTypeFields `json:"fields,omitempty"`
}

// AccountAuthTypeFields defines model for AccountAuthTypeFields.
type AccountAuthTypeFields struct {
	Active     *bool                         `json:"active,omitempty"`
	Code       *string                       `json:"code,omitempty"`
	Id         *string                       `json:"id,omitempty"`
	Identifier *string                       `json:"identifier,omitempty"`
	Params     *AccountAuthTypeFields_Params `json:"params"`
}

// AccountAuthTypeFields_Params defines model for AccountAuthTypeFields.Params.
type AccountAuthTypeFields_Params struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// AccountFields defines model for AccountFields.
type AccountFields struct {
	Id string `json:"id"`
}

// AppOrgGroup defines model for AppOrgGroup.
type AppOrgGroup struct {
	Application *Application       `json:"application,omitempty"`
	Fields      *AppOrgGroupFields `json:"fields,omitempty"`
	Permissions *[]Permission      `json:"permissions,omitempty"`
	Roles       *[]AppOrgRole      `json:"roles,omitempty"`
}

// AppOrgGroupFields defines model for AppOrgGroupFields.
type AppOrgGroupFields struct {
	Id     string `json:"id"`
	Name   string `json:"name"`
	System *bool  `json:"system,omitempty"`
}

// AppOrgRole defines model for AppOrgRole.
type AppOrgRole struct {
	Application *Application      `json:"application,omitempty"`
	Fields      *AppOrgRoleFields `json:"fields,omitempty"`
	Permissions *[]Permission     `json:"permissions,omitempty"`
}

// AppOrgRoleFields defines model for AppOrgRoleFields.
type AppOrgRoleFields struct {
	Id     string `json:"id"`
	Name   string `json:"name"`
	System *bool  `json:"system,omitempty"`
}

// Application defines model for Application.
type Application struct {
	Fields        *ApplicationFields         `json:"fields,omitempty"`
	Organizations *[]ApplicationOrganization `json:"organizations,omitempty"`
	Types         *[]ApplicationType         `json:"types,omitempty"`
}

// ApplicationConfig defines model for ApplicationConfig.
type ApplicationConfig struct {
	AppTypeId string                 `json:"app_type_id"`
	Data      map[string]interface{} `json:"data"`
	Id        string                 `json:"id"`
	OrgId     *string                `json:"org_id,omitempty"`

	// conforms major.minor.patch format
	Version string `json:"version"`
}

// ApplicationFields defines model for ApplicationFields.
type ApplicationFields struct {
	Id               string `json:"id"`
	MultiTenant      *bool  `json:"multi_tenant,omitempty"`
	Name             string `json:"name"`
	SharedIdentities *bool  `json:"shared_identities,omitempty"`
}

// ApplicationOrganization defines model for ApplicationOrganization.
type ApplicationOrganization struct {
	TODO         *string       `json:"TODO,omitempty"`
	Application  *Application  `json:"application,omitempty"`
	Id           *string       `json:"id,omitempty"`
	Organization *Organization `json:"organization,omitempty"`
}

// ApplicationType defines model for ApplicationType.
type ApplicationType struct {
	Application *Application           `json:"application,omitempty"`
	Fields      *ApplicationTypeFields `json:"fields,omitempty"`
}

// ApplicationTypeFields defines model for ApplicationTypeFields.
type ApplicationTypeFields struct {
	Id         string    `json:"id"`
	Identifier string    `json:"identifier"`
	Name       *string   `json:"name,omitempty"`
	Versions   *[]string `json:"versions,omitempty"`
}

// Service registration record used for auth
type AuthServiceReg struct {
	Host      string  `json:"host"`
	PubKey    *PubKey `json:"pub_key,omitempty"`
	ServiceId string  `json:"service_id"`
}

// AuthType defines model for AuthType.
type AuthType struct {
	Fields *AuthTypeFields `json:"fields,omitempty"`
}

// AuthTypeFields defines model for AuthTypeFields.
type AuthTypeFields struct {
	Code        *string                `json:"code,omitempty"`
	Description *string                `json:"description,omitempty"`
	Id          *string                `json:"id,omitempty"`
	IgnoreMfa   *bool                  `json:"ignore_mfa,omitempty"`
	IsExternal  *bool                  `json:"is_external,omitempty"`
	Params      *AuthTypeFields_Params `json:"params,omitempty"`
}

// AuthTypeFields_Params defines model for AuthTypeFields.Params.
type AuthTypeFields_Params struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Credential defines model for Credential.
type Credential struct {
	AccountsAuthTypes *[]AccountAuthType `json:"accounts_auth_types,omitempty"`
	Fields            *CredentialFields  `json:"fields,omitempty"`
}

// CredentialFields defines model for CredentialFields.
type CredentialFields struct {
	Id    *string                 `json:"id,omitempty"`
	Value *map[string]interface{} `json:"value,omitempty"`
}

// Device defines model for Device.
type Device struct {
	Account *Account      `json:"account,omitempty"`
	Fields  *DeviceFields `json:"fields,omitempty"`
}

// DeviceFields defines model for DeviceFields.
type DeviceFields struct {
	Id   string           `json:"id"`
	Os   *string          `json:"os,omitempty"`
	Type DeviceFieldsType `json:"type"`
}

// DeviceFieldsType defines model for DeviceFields.Type.
type DeviceFieldsType string

// GlobalConfig defines model for GlobalConfig.
type GlobalConfig struct {
	Setting string `json:"setting"`
}

// JSON Web Key (JWK)
type JWK struct {

	// The "alg" (algorithm) parameter identifies the algorithm intended for use with the key
	Alg JWKAlg `json:"alg"`

	// The exponent of the key - Base64URL encoded
	E string `json:"e"`

	// The "kid" (key ID) parameter is used to match a specific key
	Kid string `json:"kid"`

	// The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key
	Kty JWKKty `json:"kty"`

	// The modulus (2048 bit) of the key - Base64URL encoded.
	N string `json:"n"`

	// The "use" (public key use) parameter identifies the intended use of the public key
	Use JWKUse `json:"use"`
}

// The "alg" (algorithm) parameter identifies the algorithm intended for use with the key
type JWKAlg string

// The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key
type JWKKty string

// The "use" (public key use) parameter identifies the intended use of the public key
type JWKUse string

// JSON Web Key Set (JWKS)
type JWKS struct {
	Keys []JWK `json:"keys"`
}

// OpenID Connect Discovery Metadata
type OIDCDiscovery struct {
	Issuer  string `json:"issuer"`
	JwksUri string `json:"jwks_uri"`
}

// Organization defines model for Organization.
type Organization struct {
	Config *OrganizationConfig `json:"config,omitempty"`
	Fields *OrganizationFields `json:"fields,omitempty"`
}

// OrganizationConfig defines model for OrganizationConfig.
type OrganizationConfig struct {
	Fields *OrganizationConfigFields `json:"fields,omitempty"`
}

// OrganizationConfigFields defines model for OrganizationConfigFields.
type OrganizationConfigFields struct {

	// organization domains
	Domains *[]string `json:"domains,omitempty"`

	// organization config id
	Id *string `json:"id,omitempty"`
}

// OrganizationFields defines model for OrganizationFields.
type OrganizationFields struct {
	Id   string                 `json:"id"`
	Name string                 `json:"name"`
	Type OrganizationFieldsType `json:"type"`
}

// OrganizationFieldsType defines model for OrganizationFields.Type.
type OrganizationFieldsType string

// Permission defines model for Permission.
type Permission struct {
	Fields *PermissionFields `json:"fields,omitempty"`
}

// PermissionFields defines model for PermissionFields.
type PermissionFields struct {
	Assigners *[]string `json:"assigners,omitempty"`
	Id        string    `json:"id"`
	Name      string    `json:"name"`
	ServiceId *string   `json:"service_id,omitempty"`
}

// Profile defines model for Profile.
type Profile struct {
	Accounts *[]Account     `json:"accounts,omitempty"`
	Fields   *ProfileFields `json:"fields,omitempty"`
}

// ProfileFields defines model for ProfileFields.
type ProfileFields struct {
	Address   *string `json:"address"`
	BirthYear *int    `json:"birth_year"`
	Country   *string `json:"country"`
	Email     *string `json:"email"`
	FirstName *string `json:"first_name,omitempty"`
	Id        *string `json:"id,omitempty"`
	LastName  *string `json:"last_name,omitempty"`
	Phone     *string `json:"phone"`
	PhotoUrl  *string `json:"photo_url,omitempty"`
	State     *string `json:"state"`
	ZipCode   *string `json:"zip_code"`
}

// PubKey defines model for PubKey.
type PubKey struct {
	Alg    string `json:"alg"`
	KeyPem string `json:"key_pem"`
}

// Full service registration record
type ServiceReg struct {
	Description string          `json:"description"`
	FirstParty  bool            `json:"first_party"`
	Host        string          `json:"host"`
	InfoUrl     *string         `json:"info_url,omitempty"`
	LogoUrl     *string         `json:"logo_url,omitempty"`
	Name        string          `json:"name"`
	PubKey      *PubKey         `json:"pub_key,omitempty"`
	Scopes      *[]ServiceScope `json:"scopes"`
	ServiceId   string          `json:"service_id"`
}

// ServiceScope defines model for ServiceScope.
type ServiceScope struct {

	// Explanation displayed to users for why this scope is requested/required
	Explanation *string `json:"explanation,omitempty"`
	Required    bool    `json:"required"`
	Scope       string  `json:"scope"`
}

// AdminReqAppToken defines model for _admin_req_app-token.
type AdminReqAppToken struct {
	Token string `json:"token"`
}

// AdminReqCreateApplicationGroup defines model for _admin_req_create-application_group.
type AdminReqCreateApplicationGroup struct {
	Name        string    `json:"name"`
	Permissions *[]string `json:"permissions,omitempty"`
	Roles       *[]string `json:"roles,omitempty"`
}

// AdminReqCreateApplicationRole defines model for _admin_req_create-application_role.
type AdminReqCreateApplicationRole struct {
	Description string   `json:"description"`
	Name        string   `json:"name"`
	Permissions []string `json:"permissions"`
}

// ServicesReqAccountExists defines model for _services_req_account-exists.
type ServicesReqAccountExists struct {
	ApiKey            string                           `json:"api_key"`
	AppTypeIdentifier string                           `json:"app_type_identifier"`
	AuthType          ServicesReqAccountExistsAuthType `json:"auth_type"`
	OrgId             string                           `json:"org_id"`
	UserIdentifier    string                           `json:"user_identifier"`
}

// ServicesReqAccountExistsAuthType defines model for ServicesReqAccountExists.AuthType.
type ServicesReqAccountExistsAuthType string

// ServicesReqAccountAuthTypeLink defines model for _services_req_account_auth-type-link.
type ServicesReqAccountAuthTypeLink struct {
	AppTypeIdentifier string                                 `json:"app_type_identifier"`
	AuthType          ServicesReqAccountAuthTypeLinkAuthType `json:"auth_type"`
	Creds             interface{}                            `json:"creds"`
	Params            *interface{}                           `json:"params,omitempty"`
}

// ServicesReqAccountAuthTypeLinkAuthType defines model for ServicesReqAccountAuthTypeLink.AuthType.
type ServicesReqAccountAuthTypeLinkAuthType string

// ServicesReqAccountAuthTypeUnlink defines model for _services_req_account_auth-type-unlink.
type ServicesReqAccountAuthTypeUnlink struct {
	AppTypeIdentifier string                                   `json:"app_type_identifier"`
	AuthType          ServicesReqAccountAuthTypeUnlinkAuthType `json:"auth_type"`
	Identifier        string                                   `json:"identifier"`
}

// ServicesReqAccountAuthTypeUnlinkAuthType defines model for ServicesReqAccountAuthTypeUnlink.AuthType.
type ServicesReqAccountAuthTypeUnlinkAuthType string

// ServicesReqApplicationConfigs defines model for _services_req_application_configs.
type ServicesReqApplicationConfigs struct {
	ApiKey            string `json:"api_key"`
	AppTypeIdentifier string `json:"app_type_identifier"`

	// conforms major.minor.patch format
	Version string `json:"version"`
}

// ServicesReqApplicationOrgConfigs defines model for _services_req_application_org-configs.
type ServicesReqApplicationOrgConfigs struct {
	AppTypeIdentifier string `json:"app_type_identifier"`

	// conforms major.minor.patch format
	Version string `json:"version"`
}

// ServicesReqAuthorizeService defines model for _services_req_authorize-service.
type ServicesReqAuthorizeService struct {

	// Scopes to be granted to this service in this and future tokens. Replaces existing scopes if present.
	ApprovedScopes *[]string `json:"approved_scopes,omitempty"`
	ServiceId      string    `json:"service_id"`
}

// ServicesReqCredentialForgotComplete defines model for _services_req_credential_forgot_complete.
type ServicesReqCredentialForgotComplete struct {
	CredentialId string       `json:"credential_id"`
	Params       *interface{} `json:"params,omitempty"`
	ResetCode    string       `json:"reset_code"`
}

// ServicesReqCredentialForgotInitiate defines model for _services_req_credential_forgot_initiate.
type ServicesReqCredentialForgotInitiate struct {
	ApiKey            string                                      `json:"api_key"`
	AppTypeIdentifier string                                      `json:"app_type_identifier"`
	AuthType          ServicesReqCredentialForgotInitiateAuthType `json:"auth_type"`
	Identifier        string                                      `json:"identifier"`
	OrgId             string                                      `json:"org_id"`
}

// ServicesReqCredentialForgotInitiateAuthType defines model for ServicesReqCredentialForgotInitiate.AuthType.
type ServicesReqCredentialForgotInitiateAuthType string

// ServicesReqCredentialSendVerify defines model for _services_req_credential_send-verify.
type ServicesReqCredentialSendVerify struct {
	ApiKey            string                                  `json:"api_key"`
	AppTypeIdentifier string                                  `json:"app_type_identifier"`
	AuthType          ServicesReqCredentialSendVerifyAuthType `json:"auth_type"`
	Identifier        string                                  `json:"identifier"`
	OrgId             string                                  `json:"org_id"`
}

// ServicesReqCredentialSendVerifyAuthType defines model for ServicesReqCredentialSendVerify.AuthType.
type ServicesReqCredentialSendVerifyAuthType string

// ServicesReqCredentialUpdate defines model for _services_req_credential_update.
type ServicesReqCredentialUpdate struct {
	AccountAuthTypeId string       `json:"account_auth_type_id"`
	Params            *interface{} `json:"params,omitempty"`
}

// ServicesResAccountExists defines model for _services_res_account-exists.
type ServicesResAccountExists bool

// ServicesResAccountAuthTypeLink defines model for _services_res_account_auth-type-link.
type ServicesResAccountAuthTypeLink struct {
	AuthTypes []AccountAuthTypeFields `json:"auth_types"`
	Message   *string                 `json:"message"`
}

// ServicesResAuthorizeService defines model for _services_res_authorize-service.
type ServicesResAuthorizeService struct {
	AccessToken    *string   `json:"access_token,omitempty"`
	ApprovedScopes *[]string `json:"approved_scopes,omitempty"`

	// Full service registration record
	ServiceReg *ServiceReg `json:"service_reg,omitempty"`

	// The type of the provided tokens to be specified when they are sent in the "Authorization" header
	TokenType *ServicesResAuthorizeServiceTokenType `json:"token_type,omitempty"`
}

// The type of the provided tokens to be specified when they are sent in the "Authorization" header
type ServicesResAuthorizeServiceTokenType string

// Auth login creds for auth_type="anonymous"
type SharedReqCredsAPIKey struct {
	AnonymousId *string `json:"anonymous_id,omitempty"`
}

// Auth login creds for auth_type="email"
type SharedReqCredsEmail struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// Auth login creds for auth_type="oidc" (or variants)
//   - full redirect URI received from OIDC provider
type SharedReqCredsOIDC string

// Auth login creds for auth_type="twilio_phone"
type SharedReqCredsTwilioPhone struct {
	Code  *string `json:"code,omitempty"`
	Phone string  `json:"phone"`
}

// SharedReqLogin defines model for _shared_req_Login.
type SharedReqLogin struct {
	ApiKey            string                 `json:"api_key"`
	AppTypeIdentifier string                 `json:"app_type_identifier"`
	AuthType          SharedReqLoginAuthType `json:"auth_type"`
	Creds             *interface{}           `json:"creds,omitempty"`

	// Client device
	Device      SharedReqLoginDevice      `json:"device"`
	OrgId       string                    `json:"org_id"`
	Params      *interface{}              `json:"params,omitempty"`
	Preferences *map[string]interface{}   `json:"preferences"`
	Profile     *SharedReqProfileNullable `json:"profile"`
}

// SharedReqLoginAuthType defines model for SharedReqLogin.AuthType.
type SharedReqLoginAuthType string

// SharedReqLoginUrl defines model for _shared_req_LoginUrl.
type SharedReqLoginUrl struct {
	ApiKey            string                    `json:"api_key"`
	AppTypeIdentifier string                    `json:"app_type_identifier"`
	AuthType          SharedReqLoginUrlAuthType `json:"auth_type"`
	OrgId             string                    `json:"org_id"`
	RedirectUri       string                    `json:"redirect_uri"`
}

// SharedReqLoginUrlAuthType defines model for SharedReqLoginUrl.AuthType.
type SharedReqLoginUrlAuthType string

// Client device
type SharedReqLoginDevice struct {
	DeviceId *string                  `json:"device_id,omitempty"`
	Os       *string                  `json:"os,omitempty"`
	Type     SharedReqLoginDeviceType `json:"type"`
}

// SharedReqLoginDeviceType defines model for SharedReqLoginDevice.Type.
type SharedReqLoginDeviceType string

// SharedReqLoginMfa defines model for _shared_req_Login_Mfa.
type SharedReqLoginMfa struct {
	AccountId  string                `json:"account_id"`
	ApiKey     string                `json:"api_key"`
	Code       string                `json:"code"`
	Identifier string                `json:"identifier"`
	SessionId  string                `json:"session_id"`
	State      string                `json:"state"`
	Type       SharedReqLoginMfaType `json:"type"`
}

// SharedReqLoginMfaType defines model for SharedReqLoginMfa.Type.
type SharedReqLoginMfaType string

// SharedReqMfa defines model for _shared_req_Mfa.
type SharedReqMfa struct {
	Code       *string          `json:"code,omitempty"`
	Identifier string           `json:"identifier"`
	Type       SharedReqMfaType `json:"type"`
}

// SharedReqMfaType defines model for SharedReqMfa.Type.
type SharedReqMfaType string

// Auth login params for auth_type="email"
type SharedReqParamsEmail struct {

	// This should match the `creds` password field when sign_up=true. This should be verified on the client side as well to reduce invalid requests.
	ConfirmPassword *string `json:"confirm_password,omitempty"`
	SignUp          *bool   `json:"sign_up,omitempty"`
}

// Auth login request params for unlisted auth_types (None)
type SharedReqParamsNone map[string]interface{}

// Auth login params for auth_type="oidc" (or variants)
type SharedReqParamsOIDC struct {
	PkceVerifier *string `json:"pkce_verifier,omitempty"`
	RedirectUri  *string `json:"redirect_uri,omitempty"`
}

// SharedReqParamsSetEmailCredential defines model for _shared_req_ParamsSetEmailCredential.
type SharedReqParamsSetEmailCredential struct {
	ConfirmPassword string `json:"confirm_password"`
	NewPassword     string `json:"new_password"`
}

// SharedReqProfile defines model for _shared_req_Profile.
type SharedReqProfile struct {
	Address   *string `json:"address"`
	BirthYear *int    `json:"birth_year"`
	Country   *string `json:"country"`
	Email     *string `json:"email"`
	FirstName *string `json:"first_name"`
	LastName  *string `json:"last_name"`
	Phone     *string `json:"phone"`
	PhotoUrl  *string `json:"photo_url"`
	State     *string `json:"state"`
	ZipCode   *string `json:"zip_code"`
}

// SharedReqProfileNullable defines model for _shared_req_ProfileNullable.
type SharedReqProfileNullable struct {
	Address   *string `json:"address"`
	BirthYear *int    `json:"birth_year"`
	Country   *string `json:"country"`
	Email     *string `json:"email"`
	FirstName *string `json:"first_name"`
	LastName  *string `json:"last_name"`
	Phone     *string `json:"phone"`
	PhotoUrl  *string `json:"photo_url"`
	State     *string `json:"state"`
	ZipCode   *string `json:"zip_code"`
}

// SharedReqRefresh defines model for _shared_req_Refresh.
type SharedReqRefresh struct {
	ApiKey       string `json:"api_key"`
	RefreshToken string `json:"refresh_token"`
}

// SharedResAccount defines model for _shared_res_Account.
type SharedResAccount struct {
	AuthTypes   *[]AccountAuthTypeFields `json:"auth_types,omitempty"`
	Groups      *[]AppOrgGroupFields     `json:"groups,omitempty"`
	Id          string                   `json:"id"`
	Permissions *[]PermissionFields      `json:"permissions,omitempty"`
	Preferences *map[string]interface{}  `json:"preferences"`
	Profile     *ProfileFields           `json:"profile,omitempty"`
	Roles       *[]AppOrgRoleFields      `json:"roles,omitempty"`
}

// SharedResLogin defines model for _shared_res_Login.
type SharedResLogin struct {
	Account *SharedResAccount      `json:"account,omitempty"`
	Message *string                `json:"message,omitempty"`
	Params  *interface{}           `json:"params"`
	Token   *SharedResRokwireToken `json:"token,omitempty"`
}

// SharedResLoginSession defines model for _shared_res_LoginSession.
type SharedResLoginSession struct {
	AccountAuthTypeId         *string `json:"account_auth_type_id,omitempty"`
	AccountAuthTypeIdentifier *string `json:"account_auth_type_identifier,omitempty"`
	Anonymous                 *bool   `json:"anonymous,omitempty"`
	AppTypeId                 *string `json:"app_type_id,omitempty"`
	AppTypeIdentifier         *string `json:"app_type_identifier,omitempty"`
	AuthTypeCode              *string `json:"auth_type_code,omitempty"`
	DateCreated               *string `json:"date_created,omitempty"`
	DateRefreshed             *string `json:"date_refreshed"`
	DateUpdated               *string `json:"date_updated"`
	DeviceId                  *string `json:"device_id,omitempty"`
	Id                        *string `json:"id,omitempty"`
	Identifier                *string `json:"identifier,omitempty"`
	IpAddress                 *string `json:"ip_address,omitempty"`
	MfaAttempts               *int    `json:"mfa_attempts,omitempty"`
	RefreshTokensCount        *int    `json:"refresh_tokens_count,omitempty"`
	State                     *string `json:"state,omitempty"`
	StateExpires              *string `json:"state_expires"`
}

// SharedResLoginUrl defines model for _shared_res_LoginUrl.
type SharedResLoginUrl struct {
	LoginUrl string `json:"login_url"`

	// Params to be submitted with 'login' request (if necessary)
	Params *map[string]interface{} `json:"params,omitempty"`
}

// SharedResLoginMfa defines model for _shared_res_Login_Mfa.
type SharedResLoginMfa struct {
	AccountId string         `json:"account_id"`
	Enrolled  []SharedResMfa `json:"enrolled"`
	Params    *interface{}   `json:"params"`
	SessionId string         `json:"session_id"`
	State     string         `json:"state"`
}

// SharedResMfa defines model for _shared_res_Mfa.
type SharedResMfa struct {
	Params   *map[string]interface{} `json:"params,omitempty"`
	Type     *string                 `json:"type,omitempty"`
	Verified *bool                   `json:"verified,omitempty"`
}

// SharedResRefresh defines model for _shared_res_Refresh.
type SharedResRefresh struct {
	Params *interface{}           `json:"params"`
	Token  *SharedResRokwireToken `json:"token,omitempty"`
}

// SharedResRokwireToken defines model for _shared_res_RokwireToken.
type SharedResRokwireToken struct {

	// The user's access token to be provided to authorize access to ROKWIRE APIs
	AccessToken *string `json:"access_token,omitempty"`

	// A refresh token that can be used to get a new access token once the one provided expires
	RefreshToken *string `json:"refresh_token,omitempty"`

	// The type of the provided tokens to be specified when they are sent in the "Authorization" header
	TokenType *SharedResRokwireTokenTokenType `json:"token_type,omitempty"`
}

// The type of the provided tokens to be specified when they are sent in the "Authorization" header
type SharedResRokwireTokenTokenType string

// SystemReqAccountPermissions defines model for _system_req_account-permissions.
type SystemReqAccountPermissions struct {
	AccountId   string   `json:"account_id"`
	AppId       string   `json:"app_id"`
	Permissions []string `json:"permissions"`
}

// SystemReqAccountRoles defines model for _system_req_account-roles.
type SystemReqAccountRoles struct {
	AccountId string   `json:"account_id"`
	AppId     string   `json:"app_id"`
	RoleIds   []string `json:"role_ids"`
}

// SystemReqApplicationRoles defines model for _system_req_application-roles.
type SystemReqApplicationRoles struct {
	AppId       string   `json:"app_id"`
	Description string   `json:"description"`
	Name        string   `json:"name"`
	Permissions []string `json:"permissions"`
}

// SystemReqCreateOrganization defines model for _system_req_create-Organization.
type SystemReqCreateOrganization struct {
	Config *OrganizationConfigFields       `json:"config,omitempty"`
	Id     *string                         `json:"id,omitempty"`
	Name   string                          `json:"name"`
	Type   SystemReqCreateOrganizationType `json:"type"`
}

// SystemReqCreateOrganizationType defines model for SystemReqCreateOrganization.Type.
type SystemReqCreateOrganizationType string

// SystemReqCreateApplication defines model for _system_req_create_Application.
type SystemReqCreateApplication struct {
	ApplicationTypes *[]struct {
		Identifier string    `json:"identifier"`
		Name       *string   `json:"name,omitempty"`
		Versions   *[]string `json:"versions,omitempty"`
	} `json:"application_types,omitempty"`

	// The maximum allowed duration (in hours) of a user's login session for this application
	MaxLoginSessionDuration *int   `json:"max_login_session_duration,omitempty"`
	MultiTenant             bool   `json:"multi_tenant"`
	Name                    string `json:"name"`
	SharedIdentities        bool   `json:"shared_identities"`
}

// SystemReqCreateApplicationConfigRequest defines model for _system_req_create_ApplicationConfig_Request.
type SystemReqCreateApplicationConfigRequest struct {
	AppTypeId string                 `json:"app_type_id"`
	Data      map[string]interface{} `json:"data"`
	OrgId     *string                `json:"org_id,omitempty"`

	// conforms major.minor.patch format
	Version string `json:"version"`
}

// SystemReqGetApplication defines model for _system_req_get_Application.
type SystemReqGetApplication string

// SystemReqGetOrganization defines model for _system_req_get_Organization.
type SystemReqGetOrganization struct {
	Id string `json:"id"`
}

// SystemReqPermissions defines model for _system_req_permissions.
type SystemReqPermissions struct {

	// permissions that could assign current permission to accounts
	Assigners *[]string `json:"assigners,omitempty"`
	Name      string    `json:"name"`
	ServiceId *string   `json:"service_id,omitempty"`
}

// SystemReqUpdateOrganization defines model for _system_req_update_Organization.
type SystemReqUpdateOrganization struct {
	Config *OrganizationConfigFields       `json:"config,omitempty"`
	Id     string                          `json:"id"`
	Name   string                          `json:"name"`
	Type   SystemReqUpdateOrganizationType `json:"type"`
}

// SystemReqUpdateOrganizationType defines model for SystemReqUpdateOrganization.Type.
type SystemReqUpdateOrganizationType string

// SystemResGetApplications defines model for _system_res_get_Applications.
type SystemResGetApplications struct {
	ApplicationTypes *ApplicationTypeFields `json:"application_types,omitempty"`
	Id               string                 `json:"id"`

	// The maximum allowed duration (in hours) of a user's login session for this application
	MaxLoginSessionDuration *int   `json:"max_login_session_duration,omitempty"`
	MultiTenant             bool   `json:"multi_tenant"`
	Name                    string `json:"name"`
	SharedIdentities        bool   `json:"shared_identities"`
}

// SystemResGetOrganizations defines model for _system_res_get_Organizations.
type SystemResGetOrganizations struct {
	Config *[]OrganizationConfigFields   `json:"config,omitempty"`
	Id     string                        `json:"id"`
	Name   string                        `json:"name"`
	Type   SystemResGetOrganizationsType `json:"type"`
}

// SystemResGetOrganizationsType defines model for SystemResGetOrganizations.Type.
type SystemResGetOrganizationsType string

// DeleteAdminAccountMfaParams defines parameters for DeleteAdminAccountMfa.
type DeleteAdminAccountMfaParams struct {

	// MFA type
	Type string `json:"type"`
}

// PostAdminAccountMfaParams defines parameters for PostAdminAccountMfa.
type PostAdminAccountMfaParams struct {

	// MFA type
	Type string `json:"type"`
}

// GetAdminApplicationAccountsParams defines parameters for GetAdminApplicationAccounts.
type GetAdminApplicationAccountsParams struct {

	// The account ID
	AccountId *string `json:"account-id,omitempty"`

	// The authentication type identifier
	AuthTypeIdentifier *string `json:"auth-type-identifier,omitempty"`
}

// PostAdminApplicationGroupsJSONBody defines parameters for PostAdminApplicationGroups.
type PostAdminApplicationGroupsJSONBody AdminReqCreateApplicationGroup

// GetAdminApplicationLoginSessionsParams defines parameters for GetAdminApplicationLoginSessions.
type GetAdminApplicationLoginSessionsParams struct {

	// identifier
	Identifier *string `json:"identifier,omitempty"`

	// account auth type identifier
	AccountAuthTypeIdentifier *string `json:"account-auth-type-identifier,omitempty"`

	// app type id
	AppTypeId *string `json:"app-type-id,omitempty"`

	// app type identifier
	AppTypeIdentifier *string `json:"app-type-identifier,omitempty"`

	// anonymous
	Anonymous *bool `json:"anonymous,omitempty"`

	// device id
	DeviceId *string `json:"device-id,omitempty"`

	// ip address
	IpAddress *string `json:"ip-address,omitempty"`
}

// PostAdminApplicationRolesJSONBody defines parameters for PostAdminApplicationRoles.
type PostAdminApplicationRolesJSONBody AdminReqCreateApplicationRole

// GetAdminAuthAppTokenParams defines parameters for GetAdminAuthAppToken.
type GetAdminAuthAppTokenParams struct {

	// The application ID of the token to return
	AppId string `json:"app_id"`
}

// PostAdminAuthLoginJSONBody defines parameters for PostAdminAuthLogin.
type PostAdminAuthLoginJSONBody SharedReqLogin

// PostAdminAuthLoginUrlJSONBody defines parameters for PostAdminAuthLoginUrl.
type PostAdminAuthLoginUrlJSONBody SharedReqLoginUrl

// PostAdminAuthMfaJSONBody defines parameters for PostAdminAuthMfa.
type PostAdminAuthMfaJSONBody SharedReqLoginMfa

// PostAdminAuthMfaParams defines parameters for PostAdminAuthMfa.
type PostAdminAuthMfaParams struct {

	// Login state
	State *string `json:"state,omitempty"`
}

// PostAdminAuthRefreshJSONBody defines parameters for PostAdminAuthRefresh.
type PostAdminAuthRefreshJSONBody SharedReqRefresh

// PostAdminAuthVerifyMfaJSONBody defines parameters for PostAdminAuthVerifyMfa.
type PostAdminAuthVerifyMfaJSONBody SharedReqMfa

// GetBbsServiceRegsParams defines parameters for GetBbsServiceRegs.
type GetBbsServiceRegsParams struct {

	// A comma-separated list of service IDs to return registrations for
	Ids string `json:"ids"`
}

// DeleteServicesAccountMfaJSONBody defines parameters for DeleteServicesAccountMfa.
type DeleteServicesAccountMfaJSONBody SharedReqMfa

// PostServicesAccountMfaJSONBody defines parameters for PostServicesAccountMfa.
type PostServicesAccountMfaJSONBody SharedReqMfa

// PutServicesAccountPreferencesJSONBody defines parameters for PutServicesAccountPreferences.
type PutServicesAccountPreferencesJSONBody map[string]interface{}

// PutServicesAccountProfileJSONBody defines parameters for PutServicesAccountProfile.
type PutServicesAccountProfileJSONBody SharedReqProfile

// PostServicesApplicationConfigsJSONBody defines parameters for PostServicesApplicationConfigs.
type PostServicesApplicationConfigsJSONBody ServicesReqApplicationConfigs

// PostServicesApplicationOrganizationConfigsJSONBody defines parameters for PostServicesApplicationOrganizationConfigs.
type PostServicesApplicationOrganizationConfigsJSONBody ServicesReqApplicationOrgConfigs

// DeleteServicesAuthAccountAuthTypeLinkJSONBody defines parameters for DeleteServicesAuthAccountAuthTypeLink.
type DeleteServicesAuthAccountAuthTypeLinkJSONBody ServicesReqAccountAuthTypeUnlink

// PostServicesAuthAccountAuthTypeLinkJSONBody defines parameters for PostServicesAuthAccountAuthTypeLink.
type PostServicesAuthAccountAuthTypeLinkJSONBody ServicesReqAccountAuthTypeLink

// PostServicesAuthAccountExistsJSONBody defines parameters for PostServicesAuthAccountExists.
type PostServicesAuthAccountExistsJSONBody ServicesReqAccountExists

// PostServicesAuthAuthorizeServiceJSONBody defines parameters for PostServicesAuthAuthorizeService.
type PostServicesAuthAuthorizeServiceJSONBody ServicesReqAuthorizeService

// PostServicesAuthCredentialForgotCompleteJSONBody defines parameters for PostServicesAuthCredentialForgotComplete.
type PostServicesAuthCredentialForgotCompleteJSONBody ServicesReqCredentialForgotComplete

// PostServicesAuthCredentialForgotInitiateJSONBody defines parameters for PostServicesAuthCredentialForgotInitiate.
type PostServicesAuthCredentialForgotInitiateJSONBody ServicesReqCredentialForgotInitiate

// PostServicesAuthCredentialSendVerifyJSONBody defines parameters for PostServicesAuthCredentialSendVerify.
type PostServicesAuthCredentialSendVerifyJSONBody ServicesReqCredentialSendVerify

// PostServicesAuthCredentialUpdateJSONBody defines parameters for PostServicesAuthCredentialUpdate.
type PostServicesAuthCredentialUpdateJSONBody ServicesReqCredentialUpdate

// GetServicesAuthCredentialVerifyParams defines parameters for GetServicesAuthCredentialVerify.
type GetServicesAuthCredentialVerifyParams struct {

	// Credential ID
	Id string `json:"id"`

	// Verification code
	Code string `json:"code"`
}

// PostServicesAuthLoginJSONBody defines parameters for PostServicesAuthLogin.
type PostServicesAuthLoginJSONBody SharedReqLogin

// PostServicesAuthLoginUrlJSONBody defines parameters for PostServicesAuthLoginUrl.
type PostServicesAuthLoginUrlJSONBody SharedReqLoginUrl

// PostServicesAuthMfaJSONBody defines parameters for PostServicesAuthMfa.
type PostServicesAuthMfaJSONBody SharedReqLoginMfa

// PostServicesAuthMfaParams defines parameters for PostServicesAuthMfa.
type PostServicesAuthMfaParams struct {

	// Login state
	State *string `json:"state,omitempty"`
}

// PostServicesAuthRefreshJSONBody defines parameters for PostServicesAuthRefresh.
type PostServicesAuthRefreshJSONBody SharedReqRefresh

// GetServicesAuthServiceRegsParams defines parameters for GetServicesAuthServiceRegs.
type GetServicesAuthServiceRegsParams struct {

	// A comma-separated list of service IDs to return registrations for
	Ids string `json:"ids"`
}

// PostServicesAuthVerifyMfaJSONBody defines parameters for PostServicesAuthVerifyMfa.
type PostServicesAuthVerifyMfaJSONBody SharedReqMfa

// DeleteSystemAccountMfaParams defines parameters for DeleteSystemAccountMfa.
type DeleteSystemAccountMfaParams struct {

	// MFA type
	Type string `json:"type"`
}

// PostSystemAccountMfaParams defines parameters for PostSystemAccountMfa.
type PostSystemAccountMfaParams struct {

	// MFA type
	Type string `json:"type"`
}

// PutSystemAccountPermissionsJSONBody defines parameters for PutSystemAccountPermissions.
type PutSystemAccountPermissionsJSONBody SystemReqAccountPermissions

// PutSystemAccountRolesJSONBody defines parameters for PutSystemAccountRoles.
type PutSystemAccountRolesJSONBody SystemReqAccountRoles

// DeleteSystemApiKeysParams defines parameters for DeleteSystemApiKeys.
type DeleteSystemApiKeysParams struct {

	// The ID of the API key to delete
	Id string `json:"id"`
}

// GetSystemApiKeysParams defines parameters for GetSystemApiKeys.
type GetSystemApiKeysParams struct {

	// The ID of the API key to return
	Id string `json:"id"`
}

// PostSystemApiKeysJSONBody defines parameters for PostSystemApiKeys.
type PostSystemApiKeysJSONBody APIKey

// PutSystemApiKeysJSONBody defines parameters for PutSystemApiKeys.
type PutSystemApiKeysJSONBody APIKey

// GetSystemApplicationApiKeysParams defines parameters for GetSystemApplicationApiKeys.
type GetSystemApplicationApiKeysParams struct {

	// The app ID of the API keys to return
	AppId string `json:"app_id"`
}

// PostSystemApplicationRolesJSONBody defines parameters for PostSystemApplicationRoles.
type PostSystemApplicationRolesJSONBody SystemReqApplicationRoles

// GetSystemApplicationConfigsParams defines parameters for GetSystemApplicationConfigs.
type GetSystemApplicationConfigsParams struct {
	AppTypeId string  `json:"app_type_id"`
	OrgId     *string `json:"org_id,omitempty"`
	Version   *string `json:"version,omitempty"`
}

// PostSystemApplicationConfigsJSONBody defines parameters for PostSystemApplicationConfigs.
type PostSystemApplicationConfigsJSONBody SystemReqCreateApplicationConfigRequest

// PutSystemApplicationConfigsIdJSONBody defines parameters for PutSystemApplicationConfigsId.
type PutSystemApplicationConfigsIdJSONBody SystemReqCreateApplicationConfigRequest

// PostSystemApplicationsJSONBody defines parameters for PostSystemApplications.
type PostSystemApplicationsJSONBody SystemReqCreateApplication

// PostSystemGlobalConfigJSONBody defines parameters for PostSystemGlobalConfig.
type PostSystemGlobalConfigJSONBody GlobalConfig

// PutSystemGlobalConfigJSONBody defines parameters for PutSystemGlobalConfig.
type PutSystemGlobalConfigJSONBody GlobalConfig

// PostSystemOrganizationsJSONBody defines parameters for PostSystemOrganizations.
type PostSystemOrganizationsJSONBody SystemReqCreateOrganization

// PutSystemOrganizationsIdJSONBody defines parameters for PutSystemOrganizationsId.
type PutSystemOrganizationsIdJSONBody SystemReqUpdateOrganization

// PostSystemPermissionsJSONBody defines parameters for PostSystemPermissions.
type PostSystemPermissionsJSONBody SystemReqPermissions

// PutSystemPermissionsJSONBody defines parameters for PutSystemPermissions.
type PutSystemPermissionsJSONBody SystemReqPermissions

// DeleteSystemServiceRegsParams defines parameters for DeleteSystemServiceRegs.
type DeleteSystemServiceRegsParams struct {

	// The service ID of the registration to delete
	Id string `json:"id"`
}

// GetSystemServiceRegsParams defines parameters for GetSystemServiceRegs.
type GetSystemServiceRegsParams struct {

	// A comma-separated list of service IDs to return registrations for
	Ids string `json:"ids"`
}

// PostSystemServiceRegsJSONBody defines parameters for PostSystemServiceRegs.
type PostSystemServiceRegsJSONBody ServiceReg

// PutSystemServiceRegsJSONBody defines parameters for PutSystemServiceRegs.
type PutSystemServiceRegsJSONBody ServiceReg

// GetTpsServiceRegsParams defines parameters for GetTpsServiceRegs.
type GetTpsServiceRegsParams struct {

	// A comma-separated list of service IDs to return registrations for
	Ids string `json:"ids"`
}

// PostAdminApplicationGroupsJSONRequestBody defines body for PostAdminApplicationGroups for application/json ContentType.
type PostAdminApplicationGroupsJSONRequestBody PostAdminApplicationGroupsJSONBody

// PostAdminApplicationRolesJSONRequestBody defines body for PostAdminApplicationRoles for application/json ContentType.
type PostAdminApplicationRolesJSONRequestBody PostAdminApplicationRolesJSONBody

// PostAdminAuthLoginJSONRequestBody defines body for PostAdminAuthLogin for application/json ContentType.
type PostAdminAuthLoginJSONRequestBody PostAdminAuthLoginJSONBody

// PostAdminAuthLoginUrlJSONRequestBody defines body for PostAdminAuthLoginUrl for application/json ContentType.
type PostAdminAuthLoginUrlJSONRequestBody PostAdminAuthLoginUrlJSONBody

// PostAdminAuthMfaJSONRequestBody defines body for PostAdminAuthMfa for application/json ContentType.
type PostAdminAuthMfaJSONRequestBody PostAdminAuthMfaJSONBody

// PostAdminAuthRefreshJSONRequestBody defines body for PostAdminAuthRefresh for application/json ContentType.
type PostAdminAuthRefreshJSONRequestBody PostAdminAuthRefreshJSONBody

// PostAdminAuthVerifyMfaJSONRequestBody defines body for PostAdminAuthVerifyMfa for application/json ContentType.
type PostAdminAuthVerifyMfaJSONRequestBody PostAdminAuthVerifyMfaJSONBody

// DeleteServicesAccountMfaJSONRequestBody defines body for DeleteServicesAccountMfa for application/json ContentType.
type DeleteServicesAccountMfaJSONRequestBody DeleteServicesAccountMfaJSONBody

// PostServicesAccountMfaJSONRequestBody defines body for PostServicesAccountMfa for application/json ContentType.
type PostServicesAccountMfaJSONRequestBody PostServicesAccountMfaJSONBody

// PutServicesAccountPreferencesJSONRequestBody defines body for PutServicesAccountPreferences for application/json ContentType.
type PutServicesAccountPreferencesJSONRequestBody PutServicesAccountPreferencesJSONBody

// PutServicesAccountProfileJSONRequestBody defines body for PutServicesAccountProfile for application/json ContentType.
type PutServicesAccountProfileJSONRequestBody PutServicesAccountProfileJSONBody

// PostServicesApplicationConfigsJSONRequestBody defines body for PostServicesApplicationConfigs for application/json ContentType.
type PostServicesApplicationConfigsJSONRequestBody PostServicesApplicationConfigsJSONBody

// PostServicesApplicationOrganizationConfigsJSONRequestBody defines body for PostServicesApplicationOrganizationConfigs for application/json ContentType.
type PostServicesApplicationOrganizationConfigsJSONRequestBody PostServicesApplicationOrganizationConfigsJSONBody

// DeleteServicesAuthAccountAuthTypeLinkJSONRequestBody defines body for DeleteServicesAuthAccountAuthTypeLink for application/json ContentType.
type DeleteServicesAuthAccountAuthTypeLinkJSONRequestBody DeleteServicesAuthAccountAuthTypeLinkJSONBody

// PostServicesAuthAccountAuthTypeLinkJSONRequestBody defines body for PostServicesAuthAccountAuthTypeLink for application/json ContentType.
type PostServicesAuthAccountAuthTypeLinkJSONRequestBody PostServicesAuthAccountAuthTypeLinkJSONBody

// PostServicesAuthAccountExistsJSONRequestBody defines body for PostServicesAuthAccountExists for application/json ContentType.
type PostServicesAuthAccountExistsJSONRequestBody PostServicesAuthAccountExistsJSONBody

// PostServicesAuthAuthorizeServiceJSONRequestBody defines body for PostServicesAuthAuthorizeService for application/json ContentType.
type PostServicesAuthAuthorizeServiceJSONRequestBody PostServicesAuthAuthorizeServiceJSONBody

// PostServicesAuthCredentialForgotCompleteJSONRequestBody defines body for PostServicesAuthCredentialForgotComplete for application/json ContentType.
type PostServicesAuthCredentialForgotCompleteJSONRequestBody PostServicesAuthCredentialForgotCompleteJSONBody

// PostServicesAuthCredentialForgotInitiateJSONRequestBody defines body for PostServicesAuthCredentialForgotInitiate for application/json ContentType.
type PostServicesAuthCredentialForgotInitiateJSONRequestBody PostServicesAuthCredentialForgotInitiateJSONBody

// PostServicesAuthCredentialSendVerifyJSONRequestBody defines body for PostServicesAuthCredentialSendVerify for application/json ContentType.
type PostServicesAuthCredentialSendVerifyJSONRequestBody PostServicesAuthCredentialSendVerifyJSONBody

// PostServicesAuthCredentialUpdateJSONRequestBody defines body for PostServicesAuthCredentialUpdate for application/json ContentType.
type PostServicesAuthCredentialUpdateJSONRequestBody PostServicesAuthCredentialUpdateJSONBody

// PostServicesAuthLoginJSONRequestBody defines body for PostServicesAuthLogin for application/json ContentType.
type PostServicesAuthLoginJSONRequestBody PostServicesAuthLoginJSONBody

// PostServicesAuthLoginUrlJSONRequestBody defines body for PostServicesAuthLoginUrl for application/json ContentType.
type PostServicesAuthLoginUrlJSONRequestBody PostServicesAuthLoginUrlJSONBody

// PostServicesAuthMfaJSONRequestBody defines body for PostServicesAuthMfa for application/json ContentType.
type PostServicesAuthMfaJSONRequestBody PostServicesAuthMfaJSONBody

// PostServicesAuthRefreshJSONRequestBody defines body for PostServicesAuthRefresh for application/json ContentType.
type PostServicesAuthRefreshJSONRequestBody PostServicesAuthRefreshJSONBody

// PostServicesAuthVerifyMfaJSONRequestBody defines body for PostServicesAuthVerifyMfa for application/json ContentType.
type PostServicesAuthVerifyMfaJSONRequestBody PostServicesAuthVerifyMfaJSONBody

// PutSystemAccountPermissionsJSONRequestBody defines body for PutSystemAccountPermissions for application/json ContentType.
type PutSystemAccountPermissionsJSONRequestBody PutSystemAccountPermissionsJSONBody

// PutSystemAccountRolesJSONRequestBody defines body for PutSystemAccountRoles for application/json ContentType.
type PutSystemAccountRolesJSONRequestBody PutSystemAccountRolesJSONBody

// PostSystemApiKeysJSONRequestBody defines body for PostSystemApiKeys for application/json ContentType.
type PostSystemApiKeysJSONRequestBody PostSystemApiKeysJSONBody

// PutSystemApiKeysJSONRequestBody defines body for PutSystemApiKeys for application/json ContentType.
type PutSystemApiKeysJSONRequestBody PutSystemApiKeysJSONBody

// PostSystemApplicationRolesJSONRequestBody defines body for PostSystemApplicationRoles for application/json ContentType.
type PostSystemApplicationRolesJSONRequestBody PostSystemApplicationRolesJSONBody

// PostSystemApplicationConfigsJSONRequestBody defines body for PostSystemApplicationConfigs for application/json ContentType.
type PostSystemApplicationConfigsJSONRequestBody PostSystemApplicationConfigsJSONBody

// PutSystemApplicationConfigsIdJSONRequestBody defines body for PutSystemApplicationConfigsId for application/json ContentType.
type PutSystemApplicationConfigsIdJSONRequestBody PutSystemApplicationConfigsIdJSONBody

// PostSystemApplicationsJSONRequestBody defines body for PostSystemApplications for application/json ContentType.
type PostSystemApplicationsJSONRequestBody PostSystemApplicationsJSONBody

// PostSystemGlobalConfigJSONRequestBody defines body for PostSystemGlobalConfig for application/json ContentType.
type PostSystemGlobalConfigJSONRequestBody PostSystemGlobalConfigJSONBody

// PutSystemGlobalConfigJSONRequestBody defines body for PutSystemGlobalConfig for application/json ContentType.
type PutSystemGlobalConfigJSONRequestBody PutSystemGlobalConfigJSONBody

// PostSystemOrganizationsJSONRequestBody defines body for PostSystemOrganizations for application/json ContentType.
type PostSystemOrganizationsJSONRequestBody PostSystemOrganizationsJSONBody

// PutSystemOrganizationsIdJSONRequestBody defines body for PutSystemOrganizationsId for application/json ContentType.
type PutSystemOrganizationsIdJSONRequestBody PutSystemOrganizationsIdJSONBody

// PostSystemPermissionsJSONRequestBody defines body for PostSystemPermissions for application/json ContentType.
type PostSystemPermissionsJSONRequestBody PostSystemPermissionsJSONBody

// PutSystemPermissionsJSONRequestBody defines body for PutSystemPermissions for application/json ContentType.
type PutSystemPermissionsJSONRequestBody PutSystemPermissionsJSONBody

// PostSystemServiceRegsJSONRequestBody defines body for PostSystemServiceRegs for application/json ContentType.
type PostSystemServiceRegsJSONRequestBody PostSystemServiceRegsJSONBody

// PutSystemServiceRegsJSONRequestBody defines body for PutSystemServiceRegs for application/json ContentType.
type PutSystemServiceRegsJSONRequestBody PutSystemServiceRegsJSONBody

// Getter for additional properties for AccountAuthTypeFields_Params. Returns the specified
// element and whether it was found
func (a AccountAuthTypeFields_Params) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AccountAuthTypeFields_Params
func (a *AccountAuthTypeFields_Params) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AccountAuthTypeFields_Params to handle AdditionalProperties
func (a *AccountAuthTypeFields_Params) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AccountAuthTypeFields_Params to handle AdditionalProperties
func (a AccountAuthTypeFields_Params) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for AuthTypeFields_Params. Returns the specified
// element and whether it was found
func (a AuthTypeFields_Params) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AuthTypeFields_Params
func (a *AuthTypeFields_Params) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AuthTypeFields_Params to handle AdditionalProperties
func (a *AuthTypeFields_Params) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AuthTypeFields_Params to handle AdditionalProperties
func (a AuthTypeFields_Params) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}
