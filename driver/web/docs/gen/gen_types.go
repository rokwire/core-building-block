// Package Def provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package Def

import (
	"encoding/json"
	"fmt"

	"github.com/oapi-codegen/runtime"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for DeviceType.
const (
	Desktop DeviceType = "desktop"
	Mobile  DeviceType = "mobile"
	Other   DeviceType = "other"
	Web     DeviceType = "web"
)

// Defines values for JWKAlg.
const (
	JWKAlgES256 JWKAlg = "ES256"
	JWKAlgES384 JWKAlg = "ES384"
	JWKAlgES512 JWKAlg = "ES512"
	JWKAlgOKP   JWKAlg = "OKP"
	JWKAlgPS256 JWKAlg = "PS256"
	JWKAlgPS384 JWKAlg = "PS384"
	JWKAlgPS512 JWKAlg = "PS512"
	JWKAlgRS256 JWKAlg = "RS256"
	JWKAlgRS384 JWKAlg = "RS384"
	JWKAlgRS512 JWKAlg = "RS512"
)

// Defines values for JWKKty.
const (
	JWKKtyEC  JWKKty = "EC"
	JWKKtyOKP JWKKty = "OKP"
	JWKKtyRSA JWKKty = "RSA"
)

// Defines values for JWKUse.
const (
	Sig JWKUse = "sig"
)

// Defines values for OrganizationType.
const (
	Huge   OrganizationType = "huge"
	Large  OrganizationType = "large"
	Medium OrganizationType = "medium"
	Micro  OrganizationType = "micro"
	Small  OrganizationType = "small"
)

// Defines values for ServiceAccountCredentialType.
const (
	ServiceAccountCredentialTypeSignature   ServiceAccountCredentialType = "signature"
	ServiceAccountCredentialTypeStaticToken ServiceAccountCredentialType = "static_token"
)

// Defines values for ServicesReqAccountAuthTypeLinkAuthType.
const (
	ServicesReqAccountAuthTypeLinkAuthTypeCode         ServicesReqAccountAuthTypeLinkAuthType = "code"
	ServicesReqAccountAuthTypeLinkAuthTypeCondeOidc    ServicesReqAccountAuthTypeLinkAuthType = "conde_oidc"
	ServicesReqAccountAuthTypeLinkAuthTypeEmail        ServicesReqAccountAuthTypeLinkAuthType = "email"
	ServicesReqAccountAuthTypeLinkAuthTypeIllinoisOidc ServicesReqAccountAuthTypeLinkAuthType = "illinois_oidc"
	ServicesReqAccountAuthTypeLinkAuthTypePassword     ServicesReqAccountAuthTypeLinkAuthType = "password"
	ServicesReqAccountAuthTypeLinkAuthTypePhone        ServicesReqAccountAuthTypeLinkAuthType = "phone"
	ServicesReqAccountAuthTypeLinkAuthTypeTwilioPhone  ServicesReqAccountAuthTypeLinkAuthType = "twilio_phone"
	ServicesReqAccountAuthTypeLinkAuthTypeUsername     ServicesReqAccountAuthTypeLinkAuthType = "username"
	ServicesReqAccountAuthTypeLinkAuthTypeWebauthn     ServicesReqAccountAuthTypeLinkAuthType = "webauthn"
)

// Defines values for ServicesReqAccountAuthTypeUnlinkAuthType.
const (
	ServicesReqAccountAuthTypeUnlinkAuthTypeCode         ServicesReqAccountAuthTypeUnlinkAuthType = "code"
	ServicesReqAccountAuthTypeUnlinkAuthTypeCondeOidc    ServicesReqAccountAuthTypeUnlinkAuthType = "conde_oidc"
	ServicesReqAccountAuthTypeUnlinkAuthTypeEmail        ServicesReqAccountAuthTypeUnlinkAuthType = "email"
	ServicesReqAccountAuthTypeUnlinkAuthTypeIllinoisOidc ServicesReqAccountAuthTypeUnlinkAuthType = "illinois_oidc"
	ServicesReqAccountAuthTypeUnlinkAuthTypePassword     ServicesReqAccountAuthTypeUnlinkAuthType = "password"
	ServicesReqAccountAuthTypeUnlinkAuthTypePhone        ServicesReqAccountAuthTypeUnlinkAuthType = "phone"
	ServicesReqAccountAuthTypeUnlinkAuthTypeTwilioPhone  ServicesReqAccountAuthTypeUnlinkAuthType = "twilio_phone"
	ServicesReqAccountAuthTypeUnlinkAuthTypeUsername     ServicesReqAccountAuthTypeUnlinkAuthType = "username"
	ServicesReqAccountAuthTypeUnlinkAuthTypeWebauthn     ServicesReqAccountAuthTypeUnlinkAuthType = "webauthn"
)

// Defines values for ServicesReqCredentialForgotInitiateAuthType.
const (
	ServicesReqCredentialForgotInitiateAuthTypeEmail    ServicesReqCredentialForgotInitiateAuthType = "email"
	ServicesReqCredentialForgotInitiateAuthTypePassword ServicesReqCredentialForgotInitiateAuthType = "password"
)

// Defines values for ServicesReqIdentifierSendVerifyAuthType.
const (
	ServicesReqIdentifierSendVerifyAuthTypeEmail ServicesReqIdentifierSendVerifyAuthType = "email"
)

// Defines values for ServicesReqServiceAccountsAccessTokenAuthType.
const (
	ServicesReqServiceAccountsAccessTokenAuthTypeSignature   ServicesReqServiceAccountsAccessTokenAuthType = "signature"
	ServicesReqServiceAccountsAccessTokenAuthTypeStaticToken ServicesReqServiceAccountsAccessTokenAuthType = "static_token"
)

// Defines values for ServicesReqServiceAccountsAccessTokensAuthType.
const (
	ServicesReqServiceAccountsAccessTokensAuthTypeSignature   ServicesReqServiceAccountsAccessTokensAuthType = "signature"
	ServicesReqServiceAccountsAccessTokensAuthTypeStaticToken ServicesReqServiceAccountsAccessTokensAuthType = "static_token"
)

// Defines values for ServicesReqServiceAccountsParamsAuthType.
const (
	ServicesReqServiceAccountsParamsAuthTypeSignature   ServicesReqServiceAccountsParamsAuthType = "signature"
	ServicesReqServiceAccountsParamsAuthTypeStaticToken ServicesReqServiceAccountsParamsAuthType = "static_token"
)

// Defines values for ServicesResAuthorizeServiceTokenType.
const (
	ServicesResAuthorizeServiceTokenTypeBearer ServicesResAuthorizeServiceTokenType = "Bearer"
)

// Defines values for SharedReqAccountCheckAuthType.
const (
	SharedReqAccountCheckAuthTypeAnonymous    SharedReqAccountCheckAuthType = "anonymous"
	SharedReqAccountCheckAuthTypeCondeOidc    SharedReqAccountCheckAuthType = "conde_oidc"
	SharedReqAccountCheckAuthTypeEmail        SharedReqAccountCheckAuthType = "email"
	SharedReqAccountCheckAuthTypeIllinoisOidc SharedReqAccountCheckAuthType = "illinois_oidc"
	SharedReqAccountCheckAuthTypePhone        SharedReqAccountCheckAuthType = "phone"
	SharedReqAccountCheckAuthTypeTwilioPhone  SharedReqAccountCheckAuthType = "twilio_phone"
	SharedReqAccountCheckAuthTypeUsername     SharedReqAccountCheckAuthType = "username"
)

// Defines values for SharedReqCreateAccountAuthType.
const (
	SharedReqCreateAccountAuthTypeIllinoisOidc SharedReqCreateAccountAuthType = "illinois_oidc"
	SharedReqCreateAccountAuthTypePassword     SharedReqCreateAccountAuthType = "password"
)

// Defines values for SharedReqLoginAuthType.
const (
	SharedReqLoginAuthTypeAnonymous    SharedReqLoginAuthType = "anonymous"
	SharedReqLoginAuthTypeCode         SharedReqLoginAuthType = "code"
	SharedReqLoginAuthTypeCondeOidc    SharedReqLoginAuthType = "conde_oidc"
	SharedReqLoginAuthTypeEmail        SharedReqLoginAuthType = "email"
	SharedReqLoginAuthTypeIllinoisOidc SharedReqLoginAuthType = "illinois_oidc"
	SharedReqLoginAuthTypePassword     SharedReqLoginAuthType = "password"
	SharedReqLoginAuthTypePhone        SharedReqLoginAuthType = "phone"
	SharedReqLoginAuthTypeTwilioPhone  SharedReqLoginAuthType = "twilio_phone"
	SharedReqLoginAuthTypeUsername     SharedReqLoginAuthType = "username"
	SharedReqLoginAuthTypeWebauthn     SharedReqLoginAuthType = "webauthn"
)

// Defines values for SharedReqLoginUrlAuthType.
const (
	SharedReqLoginUrlAuthTypeCondeOidc    SharedReqLoginUrlAuthType = "conde_oidc"
	SharedReqLoginUrlAuthTypeIllinoisOidc SharedReqLoginUrlAuthType = "illinois_oidc"
)

// Defines values for SharedReqLoginMfaType.
const (
	SharedReqLoginMfaTypeEmail    SharedReqLoginMfaType = "email"
	SharedReqLoginMfaTypePhone    SharedReqLoginMfaType = "phone"
	SharedReqLoginMfaTypeRecovery SharedReqLoginMfaType = "recovery"
	SharedReqLoginMfaTypeTotp     SharedReqLoginMfaType = "totp"
)

// Defines values for SharedReqMfaType.
const (
	SharedReqMfaTypeEmail SharedReqMfaType = "email"
	SharedReqMfaTypePhone SharedReqMfaType = "phone"
	SharedReqMfaTypeTotp  SharedReqMfaType = "totp"
)

// Defines values for SharedReqUpdateAccountAuthType.
const (
	IllinoisOidc SharedReqUpdateAccountAuthType = "illinois_oidc"
	Password     SharedReqUpdateAccountAuthType = "password"
)

// Defines values for SharedResRokwireTokenTokenType.
const (
	SharedResRokwireTokenTokenTypeBearer SharedResRokwireTokenTokenType = "Bearer"
)

// APIKey API key record
type APIKey struct {
	AppId string  `json:"app_id"`
	Id    *string `json:"id,omitempty"`
	Key   string  `json:"key"`
}

// AccessTokenExpirationPolicy defines model for AccessTokenExpirationPolicy.
type AccessTokenExpirationPolicy struct {
	DefaultExp *int `json:"default_exp,omitempty"`
	MaxExp     *int `json:"max_exp,omitempty"`
	MinExp     *int `json:"min_exp,omitempty"`
}

// Account defines model for Account.
type Account struct {
	Anonymous *bool                    `json:"anonymous,omitempty"`
	AppOrg    *ApplicationOrganization `json:"app_org"`
	Apps      *[]PartialApp            `json:"apps,omitempty"`
	AuthTypes *[]AccountAuthType       `json:"auth_types,omitempty"`
	Devices   *[]Device                `json:"devices,omitempty"`
	// Deprecated:
	ExternalIds             *map[string]interface{} `json:"external_ids,omitempty"`
	Groups                  *[]AppOrgGroup          `json:"groups,omitempty"`
	Id                      *string                 `json:"id,omitempty"`
	Identifiers             *[]AccountIdentifier    `json:"identifiers,omitempty"`
	LastAccessTokenDate     *string                 `json:"last_access_token_date,omitempty"`
	LastLoginDate           *string                 `json:"last_login_date,omitempty"`
	MostRecentClientVersion *string                 `json:"most_recent_client_version,omitempty"`
	Permissions             *[]Permission           `json:"permissions,omitempty"`
	Preferences             *map[string]interface{} `json:"preferences,omitempty"`
	Privacy                 *Privacy                `json:"privacy,omitempty"`
	Profile                 *Profile                `json:"profile,omitempty"`
	Roles                   *[]AppOrgRole           `json:"roles,omitempty"`
	Scopes                  *[]string               `json:"scopes,omitempty"`
	Secrets                 *map[string]interface{} `json:"secrets,omitempty"`
	System                  *bool                   `json:"system,omitempty"`
	SystemConfigs           *map[string]interface{} `json:"system_configs,omitempty"`
	// Deprecated:
	Username *string `json:"username,omitempty"`
	Verified *bool   `json:"verified,omitempty"`
}

// AccountAuthType defines model for AccountAuthType.
type AccountAuthType struct {
	Active       *bool  `json:"active,omitempty"`
	AuthTypeCode string `json:"auth_type_code"`
	// Deprecated:
	Code *string `json:"code,omitempty"`
	Id   string  `json:"id"`
	// Deprecated:
	Identifier *string                 `json:"identifier,omitempty"`
	Params     *map[string]interface{} `json:"params"`
}

// AccountIdentifier defines model for AccountIdentifier.
type AccountIdentifier struct {
	AccountAuthTypeId *string `json:"account_auth_type_id"`
	Code              string  `json:"code"`
	Id                string  `json:"id"`
	Identifier        string  `json:"identifier"`
	Linked            bool    `json:"linked"`
	Sensitive         bool    `json:"sensitive"`
	Verified          bool    `json:"verified"`
}

// AdminToken defines model for AdminToken.
type AdminToken struct {
	Token string `json:"token"`
}

// AppOrgGroup defines model for AppOrgGroup.
type AppOrgGroup struct {
	Application *Application  `json:"application,omitempty"`
	DateCreated *string       `json:"date_created,omitempty"`
	DateUpdated *string       `json:"date_updated,omitempty"`
	Description *string       `json:"description,omitempty"`
	Id          *string       `json:"id,omitempty"`
	Name        string        `json:"name"`
	Permissions *[]Permission `json:"permissions,omitempty"`
	Roles       *[]AppOrgRole `json:"roles,omitempty"`
	System      *bool         `json:"system,omitempty"`
}

// AppOrgPair defines model for AppOrgPair.
type AppOrgPair struct {
	AppId string `json:"app_id"`
	OrgId string `json:"org_id"`
}

// AppOrgRole defines model for AppOrgRole.
type AppOrgRole struct {
	Application *Application  `json:"application,omitempty"`
	DateCreated *string       `json:"date_created,omitempty"`
	DateUpdated *string       `json:"date_updated,omitempty"`
	Description *string       `json:"description,omitempty"`
	Id          *string       `json:"id,omitempty"`
	Name        string        `json:"name"`
	Permissions *[]Permission `json:"permissions,omitempty"`
	Scopes      *[]string     `json:"scopes,omitempty"`
	System      *bool         `json:"system,omitempty"`
}

// Application defines model for Application.
type Application struct {
	Admin       bool               `json:"admin"`
	Id          *string            `json:"id,omitempty"`
	MultiTenant bool               `json:"multi_tenant"`
	Name        string             `json:"name"`
	Types       *[]ApplicationType `json:"types,omitempty"`
}

// ApplicationConfig defines model for ApplicationConfig.
type ApplicationConfig struct {
	AppTypeId string                 `json:"app_type_id"`
	Data      map[string]interface{} `json:"data"`
	Id        *string                `json:"id,omitempty"`
	OrgId     *string                `json:"org_id,omitempty"`

	// Version conforms major.minor.patch format
	Version string `json:"version"`
}

// ApplicationOrganization defines model for ApplicationOrganization.
type ApplicationOrganization struct {
	AppId                    string                      `json:"app_id"`
	Id                       *string                     `json:"id,omitempty"`
	IdentityProviderSettings *[]IdentityProviderSettings `json:"identity_provider_settings"`
	LoginSessionSettings     *LoginSessionSettings       `json:"login_session_settings,omitempty"`
	OrgId                    string                      `json:"org_id"`
	ServicesIds              *[]string                   `json:"services_ids"`
	SupportedAuthTypes       *[]SupportedAuthTypes       `json:"supported_auth_types"`
}

// ApplicationType defines model for ApplicationType.
type ApplicationType struct {
	Id         *string   `json:"id,omitempty"`
	Identifier string    `json:"identifier"`
	Name       *string   `json:"name,omitempty"`
	Versions   *[]string `json:"versions,omitempty"`
}

// AuthConfigData defines model for AuthConfigData.
type AuthConfigData struct {
	EmailShouldVerify   *bool `json:"email_should_verify"`
	EmailVerifyExpiry   *int  `json:"email_verify_expiry"`
	EmailVerifyWaitTime *int  `json:"email_verify_wait_time"`
}

// AuthServiceReg Service registration record used for auth
type AuthServiceReg struct {
	Host             string  `json:"host"`
	PubKey           *PubKey `json:"pub_key,omitempty"`
	ServiceAccountId *string `json:"service_account_id,omitempty"`
	ServiceId        string  `json:"service_id"`
}

// AuthType defines model for AuthType.
type AuthType struct {
	// Code passowrd or code or webauthn or illinois_oidc etc
	Code        string  `json:"code"`
	Description string  `json:"description"`
	Id          *string `json:"id,omitempty"`

	// IgnoreMfa says if login using this auth type may bypass account MFA
	IgnoreMfa bool `json:"ignore_mfa"`

	// IsAnonymous says if the auth type results in anonymous users
	IsAnonymous bool `json:"is_anonymous"`

	// IsExternal says if the users source is external - identity providers
	IsExternal bool                    `json:"is_external"`
	Params     *map[string]interface{} `json:"params,omitempty"`

	// UseCredentials says if the auth type uses credentials
	UseCredentials bool `json:"use_credentials"`
}

// Config defines model for Config.
type Config struct {
	AppId       *string     `json:"app_id,omitempty"`
	Data        Config_Data `json:"data"`
	DateCreated *string     `json:"date_created,omitempty"`
	DateUpdated *string     `json:"date_updated"`
	Id          *string     `json:"id,omitempty"`
	OrgId       *string     `json:"org_id,omitempty"`
	System      bool        `json:"system"`
	Type        string      `json:"type"`
}

// Config_Data defines model for Config.Data.
type Config_Data struct {
	union json.RawMessage
}

// Device defines model for Device.
type Device struct {
	DeviceId *string    `json:"device_id"`
	Id       *string    `json:"id,omitempty"`
	Os       *string    `json:"os,omitempty"`
	Type     DeviceType `json:"type"`
}

// DeviceType defines model for Device.Type.
type DeviceType string

// EnvConfigData defines model for EnvConfigData.
type EnvConfigData struct {
	CorsAllowedHeaders *[]string `json:"cors_allowed_headers"`
	CorsAllowedOrigins *[]string `json:"cors_allowed_origins"`
}

// Follow defines model for Follow.
type Follow struct {
	FollowerId  *string `json:"follower_id,omitempty"`
	FollowingId string  `json:"following_id"`
	Id          *string `json:"id,omitempty"`
}

// IdentityProviderSettings defines model for IdentityProviderSettings.
type IdentityProviderSettings struct {
	AlwaysSyncProfile    *bool              `json:"always_sync_profile,omitempty"`
	EmailField           *string            `json:"email_field,omitempty"`
	ExternalIdFields     *map[string]string `json:"external_id_fields"`
	FirstNameField       *string            `json:"first_name_field,omitempty"`
	Groups               *map[string]string `json:"groups"`
	GroupsField          *string            `json:"groups_field,omitempty"`
	IdentityBbBaseUrl    *string            `json:"identity_bb_base_url,omitempty"`
	IdentityProviderId   string             `json:"identity_provider_id"`
	IsEmailVerified      *bool              `json:"is_email_verified,omitempty"`
	LastNameField        *string            `json:"last_name_field,omitempty"`
	MiddleNameField      *string            `json:"middle_name_field,omitempty"`
	Roles                *map[string]string `json:"roles"`
	RolesField           *string            `json:"roles_field,omitempty"`
	SensitiveExternalIds *[]string          `json:"sensitive_external_ids"`
	UserIdentifierField  string             `json:"user_identifier_field"`
	UserSpecificFields   *[]string          `json:"user_specific_fields"`
}

// InactiveExpirePolicy defines model for InactiveExpirePolicy.
type InactiveExpirePolicy struct {
	Active           bool `json:"active"`
	InactivityPeriod int  `json:"inactivity_period"`
}

// JWK defines model for JWK.
type JWK struct {
	// Alg The "alg" (algorithm) parameter identifies the algorithm intended for use with the key
	Alg JWKAlg `json:"alg"`

	// Crv The curve used with the key
	Crv *string `json:"crv,omitempty"`

	// E The exponent of the key - Base64URL encoded
	E *string `json:"e,omitempty"`

	// Kid The "kid" (key ID) parameter is used to match a specific key
	Kid string `json:"kid"`

	// Kty The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key
	Kty JWKKty `json:"kty"`

	// N The modulus of the key - Base64URL encoded
	N *string `json:"n,omitempty"`

	// Use The "use" (public key use) parameter identifies the intended use of the public key
	Use JWKUse `json:"use"`

	// X x coordinate of the key - Base64URL encoded
	X *string `json:"x,omitempty"`

	// Y y coordinate of the key - Base64URL encoded
	Y *string `json:"y,omitempty"`
}

// JWKAlg The "alg" (algorithm) parameter identifies the algorithm intended for use with the key
type JWKAlg string

// JWKKty The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key
type JWKKty string

// JWKUse The "use" (public key use) parameter identifies the intended use of the public key
type JWKUse string

// JWKParamsEC JSON Web Key EC parameters
type JWKParamsEC struct {
	// Crv The curve used with the key
	Crv *string `json:"crv,omitempty"`

	// X x coordinate of the key - Base64URL encoded
	X *string `json:"x,omitempty"`

	// Y y coordinate of the key - Base64URL encoded
	Y *string `json:"y,omitempty"`
}

// JWKParamsOKP JSON Web Key OKP parameters
type JWKParamsOKP struct {
	// Crv The curve used with the key
	Crv *string `json:"crv,omitempty"`

	// X x coordinate of the key - Base64URL encoded
	X *string `json:"x,omitempty"`
}

// JWKParamsRSA JSON Web Key RSA parameters
type JWKParamsRSA struct {
	// E The exponent of the key - Base64URL encoded
	E *string `json:"e,omitempty"`

	// N The modulus of the key - Base64URL encoded
	N *string `json:"n,omitempty"`
}

// JWKS JSON Web Key Set (JWKS)
type JWKS struct {
	Keys []JWK `json:"keys"`
}

// LoginSession defines model for LoginSession.
type LoginSession struct {
	Anonymous          *bool   `json:"anonymous,omitempty"`
	AppOrgId           *string `json:"app_org_id,omitempty"`
	AppTypeId          *string `json:"app_type_id,omitempty"`
	AppTypeIdentifier  *string `json:"app_type_identifier,omitempty"`
	AuthTypeCode       *string `json:"auth_type_code,omitempty"`
	DateCreated        *string `json:"date_created,omitempty"`
	DateRefreshed      *string `json:"date_refreshed"`
	DateUpdated        *string `json:"date_updated"`
	DeviceId           *string `json:"device_id"`
	Id                 *string `json:"id,omitempty"`
	Identifier         *string `json:"identifier,omitempty"`
	IpAddress          *string `json:"ip_address,omitempty"`
	MfaAttempts        *int    `json:"mfa_attempts,omitempty"`
	RefreshTokensCount *int    `json:"refresh_tokens_count,omitempty"`
	State              *string `json:"state,omitempty"`
	StateExpires       *string `json:"state_expires"`
}

// LoginSessionSettings defines model for LoginSessionSettings.
type LoginSessionSettings struct {
	AccessTokenExpirationPolicy *AccessTokenExpirationPolicy `json:"access_token_expiration_policy,omitempty"`
	InactivityExpirePolicy      *InactiveExpirePolicy        `json:"inactivity_expire_policy,omitempty"`
	MaxConcurrentSessions       *int                         `json:"max_concurrent_sessions,omitempty"`
	TimeSinceLoginExpirePolicy  *TSLExpirePolicy             `json:"time_since_login_expire_policy,omitempty"`
	YearlyExpirePolicy          *YearlyExpirePolicy          `json:"yearly_expire_policy,omitempty"`
}

// OIDCDiscovery OpenID Connect Discovery Metadata
type OIDCDiscovery struct {
	Issuer  string `json:"issuer"`
	JwksUri string `json:"jwks_uri"`
}

// Organization defines model for Organization.
type Organization struct {
	Config *OrganizationConfig `json:"config,omitempty"`
	Id     *string             `json:"id,omitempty"`
	Name   string              `json:"name"`
	Type   OrganizationType    `json:"type"`
}

// OrganizationType defines model for Organization.Type.
type OrganizationType string

// OrganizationConfig defines model for OrganizationConfig.
type OrganizationConfig struct {
	// Domains organization domains
	Domains []string `json:"domains"`

	// Id organization config id
	Id *string `json:"id,omitempty"`
}

// PartialAccount defines model for PartialAccount.
type PartialAccount struct {
	Anonymous   bool              `json:"anonymous"`
	AppId       string            `json:"app_id"`
	Apps        *[]PartialApp     `json:"apps,omitempty"`
	AuthTypes   []AccountAuthType `json:"auth_types"`
	DateCreated *string           `json:"date_created,omitempty"`
	DateUpdated *string           `json:"date_updated,omitempty"`
	// Deprecated:
	ExternalIds   *map[string]interface{} `json:"external_ids,omitempty"`
	FirstName     string                  `json:"first_name"`
	Groups        []AppOrgGroup           `json:"groups"`
	Id            *string                 `json:"id,omitempty"`
	Identifiers   []AccountIdentifier     `json:"identifiers"`
	LastName      string                  `json:"last_name"`
	OrgId         string                  `json:"org_id"`
	Params        *map[string]interface{} `json:"params,omitempty"`
	Permissions   []Permission            `json:"permissions"`
	Privacy       *Privacy                `json:"privacy,omitempty"`
	Roles         []AppOrgRole            `json:"roles"`
	Scopes        *[]string               `json:"scopes,omitempty"`
	System        *bool                   `json:"system,omitempty"`
	SystemConfigs *map[string]interface{} `json:"system_configs,omitempty"`
	// Deprecated:
	Username *string `json:"username,omitempty"`
	Verified *bool   `json:"verified,omitempty"`
}

// PartialApp defines model for PartialApp.
type PartialApp struct {
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name"`
}

// Permission defines model for Permission.
type Permission struct {
	Assigners   *[]string `json:"assigners,omitempty"`
	DateCreated *string   `json:"date_created,omitempty"`
	DateUpdated *string   `json:"date_updated,omitempty"`
	Description *string   `json:"description,omitempty"`
	Id          *string   `json:"id,omitempty"`
	Name        string    `json:"name"`
	ServiceId   *string   `json:"service_id,omitempty"`
}

// Privacy defines model for Privacy.
type Privacy struct {
	Public *bool `json:"public,omitempty"`
}

// PrivacyNullable defines model for PrivacyNullable.
type PrivacyNullable struct {
	Public *bool `json:"public"`
}

// Profile defines model for Profile.
type Profile struct {
	Address   *string `json:"address"`
	BirthYear *int    `json:"birth_year"`
	Country   *string `json:"country"`
	// Deprecated:
	Email     *string `json:"email"`
	FirstName *string `json:"first_name,omitempty"`
	Id        *string `json:"id,omitempty"`
	LastName  *string `json:"last_name,omitempty"`
	// Deprecated:
	Phone                  *string                 `json:"phone"`
	PhotoUrl               *string                 `json:"photo_url,omitempty"`
	State                  *string                 `json:"state"`
	UnstructuredProperties *map[string]interface{} `json:"unstructured_properties"`
	ZipCode                *string                 `json:"zip_code"`
}

// ProfileNullable defines model for ProfileNullable.
type ProfileNullable struct {
	Address   *string `json:"address"`
	BirthYear *int    `json:"birth_year"`
	Country   *string `json:"country"`
	// Deprecated:
	Email     *string `json:"email"`
	FirstName *string `json:"first_name"`
	LastName  *string `json:"last_name"`
	// Deprecated:
	Phone                  *string                 `json:"phone"`
	PhotoUrl               *string                 `json:"photo_url"`
	State                  *string                 `json:"state"`
	UnstructuredProperties *map[string]interface{} `json:"unstructured_properties"`
	ZipCode                *string                 `json:"zip_code"`
}

// PubKey defines model for PubKey.
type PubKey struct {
	Alg    string `json:"alg"`
	KeyPem string `json:"key_pem"`
}

// PublicAccount defines model for PublicAccount.
type PublicAccount struct {
	FirstName   *string `json:"first_name,omitempty"`
	Id          string  `json:"id"`
	IsFollowing *bool   `json:"is_following,omitempty"`
	LastName    *string `json:"last_name,omitempty"`
	Username    *string `json:"username,omitempty"`
	Verified    *bool   `json:"verified,omitempty"`
}

// ServiceAccount defines model for ServiceAccount.
type ServiceAccount struct {
	AccountId   *string                     `json:"account_id,omitempty"`
	AppId       string                      `json:"app_id"`
	Creds       *[]ServiceAccountCredential `json:"creds,omitempty"`
	FirstParty  *bool                       `json:"first_party,omitempty"`
	Name        *string                     `json:"name,omitempty"`
	OrgId       string                      `json:"org_id"`
	Permissions *[]string                   `json:"permissions"`
	Scopes      *[]string                   `json:"scopes"`
}

// ServiceAccountCredential defines model for ServiceAccountCredential.
type ServiceAccountCredential struct {
	DateCreated *string                      `json:"date_created,omitempty"`
	Id          *string                      `json:"id,omitempty"`
	Name        string                       `json:"name"`
	Params      *map[string]interface{}      `json:"params"`
	Type        ServiceAccountCredentialType `json:"type"`
}

// ServiceAccountCredentialType defines model for ServiceAccountCredential.Type.
type ServiceAccountCredentialType string

// ServiceReg Full service registration record
type ServiceReg struct {
	Description      string          `json:"description"`
	FirstParty       bool            `json:"first_party"`
	Host             string          `json:"host"`
	InfoUrl          *string         `json:"info_url,omitempty"`
	LogoUrl          *string         `json:"logo_url,omitempty"`
	Name             string          `json:"name"`
	PubKey           *PubKey         `json:"pub_key,omitempty"`
	Scopes           *[]ServiceScope `json:"scopes"`
	ServiceAccountId *string         `json:"service_account_id,omitempty"`
	ServiceId        string          `json:"service_id"`
}

// ServiceScope defines model for ServiceScope.
type ServiceScope struct {
	// Explanation Explanation displayed to users for why this scope is requested/required
	Explanation *string `json:"explanation,omitempty"`
	Required    bool    `json:"required"`
	Scope       string  `json:"scope"`
}

// SupportedAuthType defines model for SupportedAuthType.
type SupportedAuthType struct {
	AuthTypeId *string                 `json:"auth_type_id,omitempty"`
	Params     *map[string]interface{} `json:"params"`
}

// SupportedAuthTypes defines model for SupportedAuthTypes.
type SupportedAuthTypes struct {
	AppTypeId          *string              `json:"app_type_id,omitempty"`
	SupportedAuthTypes *[]SupportedAuthType `json:"supported_auth_types,omitempty"`
}

// TSLExpirePolicy defines model for TSLExpirePolicy.
type TSLExpirePolicy struct {
	Active               bool `json:"active"`
	TimeSinceLoginPeriod int  `json:"time_since_login_period"`
}

// Username defines model for Username.
type Username struct {
	Username string `json:"username"`
}

// YearlyExpirePolicy defines model for YearlyExpirePolicy.
type YearlyExpirePolicy struct {
	Active bool `json:"active"`
	Day    int  `json:"day"`
	Hour   int  `json:"hour"`
	Min    int  `json:"min"`
	Month  int  `json:"month"`
}

// AdminReqAddAccountsToGroup defines model for _admin_req_add-accounts-to-group.
type AdminReqAddAccountsToGroup struct {
	AccountIds []string `json:"account_ids"`
}

// AdminReqApplicationGroup defines model for _admin_req_application_group.
type AdminReqApplicationGroup struct {
	AccountIds  *[]string `json:"account_ids"`
	Description string    `json:"description"`
	Name        string    `json:"name"`
	Permissions *[]string `json:"permissions,omitempty"`
	Roles       *[]string `json:"roles,omitempty"`
	System      *bool     `json:"system,omitempty"`
}

// AdminReqApplicationRole defines model for _admin_req_application_role.
type AdminReqApplicationRole struct {
	Description string    `json:"description"`
	Name        string    `json:"name"`
	Permissions []string  `json:"permissions"`
	Scopes      *[]string `json:"scopes,omitempty"`
	System      *bool     `json:"system,omitempty"`
}

// AdminReqCreateUpdateConfig defines model for _admin_req_create-update-config.
type AdminReqCreateUpdateConfig struct {
	AllApps *bool                           `json:"all_apps"`
	AllOrgs *bool                           `json:"all_orgs"`
	Data    AdminReqCreateUpdateConfig_Data `json:"data"`
	System  bool                            `json:"system"`
	Type    string                          `json:"type"`
}

// AdminReqCreateUpdateConfig_Data defines model for AdminReqCreateUpdateConfig.Data.
type AdminReqCreateUpdateConfig_Data struct {
	union json.RawMessage
}

// AdminReqGrantPermissions defines model for _admin_req_grant-permissions.
type AdminReqGrantPermissions struct {
	Permissions []string `json:"permissions"`
}

// AdminReqGrantPermissionsToRole defines model for _admin_req_grant-permissions-to-role.
type AdminReqGrantPermissionsToRole struct {
	Permissions []string `json:"permissions"`
}

// AdminReqGrantRolesToAccount defines model for _admin_req_grant-roles-to-account.
type AdminReqGrantRolesToAccount struct {
	RoleIds []string `json:"role_ids"`
}

// AdminReqRemoveAccountFromGroup defines model for _admin_req_remove-account-from-group.
type AdminReqRemoveAccountFromGroup struct {
	AccountIds []string `json:"account_ids"`
}

// AdminReqRevokePermissions defines model for _admin_req_revoke-permissions.
type AdminReqRevokePermissions struct {
	Permissions []string `json:"permissions"`
}

// AdminReqRevokeRolesFromAccount defines model for _admin_req_revoke-roles-from-account.
type AdminReqRevokeRolesFromAccount struct {
	RoleIds []string `json:"role_ids"`
}

// AdminReqVerified defines model for _admin_req_verified.
type AdminReqVerified struct {
	Verified bool `json:"verified"`
}

// ServicesReqAccountAuthTypeLink defines model for _services_req_account_auth-type-link.
type ServicesReqAccountAuthTypeLink struct {
	AppTypeIdentifier string                                 `json:"app_type_identifier"`
	AuthType          ServicesReqAccountAuthTypeLinkAuthType `json:"auth_type"`
	Creds             *ServicesReqAccountAuthTypeLink_Creds  `json:"creds,omitempty"`
	Params            *ServicesReqAccountAuthTypeLink_Params `json:"params,omitempty"`
}

// ServicesReqAccountAuthTypeLinkAuthType defines model for ServicesReqAccountAuthTypeLink.AuthType.
type ServicesReqAccountAuthTypeLinkAuthType string

// ServicesReqAccountAuthTypeLink_Creds defines model for ServicesReqAccountAuthTypeLink.Creds.
type ServicesReqAccountAuthTypeLink_Creds struct {
	union json.RawMessage
}

// ServicesReqAccountAuthTypeLink_Params defines model for ServicesReqAccountAuthTypeLink.Params.
type ServicesReqAccountAuthTypeLink_Params struct {
	union json.RawMessage
}

// ServicesReqAccountAuthTypeUnlink defines model for _services_req_account_auth-type-unlink.
type ServicesReqAccountAuthTypeUnlink struct {
	AuthType   *ServicesReqAccountAuthTypeUnlinkAuthType `json:"auth_type,omitempty"`
	Id         *string                                   `json:"id,omitempty"`
	Identifier *string                                   `json:"identifier,omitempty"`
}

// ServicesReqAccountAuthTypeUnlinkAuthType defines model for ServicesReqAccountAuthTypeUnlink.AuthType.
type ServicesReqAccountAuthTypeUnlinkAuthType string

// ServicesReqAccountIdentifierLink defines model for _services_req_account_identifier-link.
type ServicesReqAccountIdentifierLink struct {
	// Identifier Allowed identifier types
	Identifier SharedReqIdentifiers `json:"identifier"`
}

// ServicesReqAccountIdentifierUnlink defines model for _services_req_account_identifier-unlink.
type ServicesReqAccountIdentifierUnlink struct {
	Id string `json:"id"`
}

// ServicesReqAuthorizeService defines model for _services_req_authorize-service.
type ServicesReqAuthorizeService struct {
	// ApprovedScopes Scopes to be granted to this service in this and future tokens. Replaces existing scopes if present.
	ApprovedScopes *[]string `json:"approved_scopes,omitempty"`
	ServiceId      string    `json:"service_id"`
}

// ServicesReqCredentialForgotComplete defines model for _services_req_credential_forgot_complete.
type ServicesReqCredentialForgotComplete struct {
	CredentialId string                                      `json:"credential_id"`
	Params       *ServicesReqCredentialForgotComplete_Params `json:"params,omitempty"`
	ResetCode    string                                      `json:"reset_code"`
}

// ServicesReqCredentialForgotComplete_Params defines model for ServicesReqCredentialForgotComplete.Params.
type ServicesReqCredentialForgotComplete_Params struct {
	union json.RawMessage
}

// ServicesReqCredentialForgotInitiate defines model for _services_req_credential_forgot_initiate.
type ServicesReqCredentialForgotInitiate struct {
	ApiKey            string                                         `json:"api_key"`
	AppTypeIdentifier string                                         `json:"app_type_identifier"`
	AuthType          ServicesReqCredentialForgotInitiateAuthType    `json:"auth_type"`
	Identifier        ServicesReqCredentialForgotInitiate_Identifier `json:"identifier"`
	OrgId             string                                         `json:"org_id"`
}

// ServicesReqCredentialForgotInitiateAuthType defines model for ServicesReqCredentialForgotInitiate.AuthType.
type ServicesReqCredentialForgotInitiateAuthType string

// ServicesReqCredentialForgotInitiate_Identifier defines model for ServicesReqCredentialForgotInitiate.Identifier.
type ServicesReqCredentialForgotInitiate_Identifier struct {
	union json.RawMessage
}

// ServicesReqCredentialUpdate defines model for _services_req_credential_update.
type ServicesReqCredentialUpdate struct {
	AccountAuthTypeId string                              `json:"account_auth_type_id"`
	Params            *ServicesReqCredentialUpdate_Params `json:"params,omitempty"`
}

// ServicesReqCredentialUpdate_Params defines model for ServicesReqCredentialUpdate.Params.
type ServicesReqCredentialUpdate_Params struct {
	union json.RawMessage
}

// ServicesReqIdentifierSendVerify defines model for _services_req_identifier_send-verify.
type ServicesReqIdentifierSendVerify struct {
	ApiKey            string                                     `json:"api_key"`
	AppTypeIdentifier string                                     `json:"app_type_identifier"`
	AuthType          *ServicesReqIdentifierSendVerifyAuthType   `json:"auth_type,omitempty"`
	Identifier        ServicesReqIdentifierSendVerify_Identifier `json:"identifier"`
	OrgId             string                                     `json:"org_id"`
}

// ServicesReqIdentifierSendVerifyAuthType defines model for ServicesReqIdentifierSendVerify.AuthType.
type ServicesReqIdentifierSendVerifyAuthType string

// ServicesReqIdentifierSendVerify_Identifier defines model for ServicesReqIdentifierSendVerify.Identifier.
type ServicesReqIdentifierSendVerify_Identifier struct {
	union json.RawMessage
}

// ServicesReqServiceAccountsAccessToken defines model for _services_req_service-accounts_access-token.
type ServicesReqServiceAccountsAccessToken struct {
	AccountId string                                        `json:"account_id"`
	AppId     string                                        `json:"app_id"`
	AuthType  ServicesReqServiceAccountsAccessTokenAuthType `json:"auth_type"`

	// Creds Service account token for auth_type="static_token"
	Creds *ServicesServiceAccountsCredsStaticToken `json:"creds,omitempty"`
	OrgId string                                   `json:"org_id"`
}

// ServicesReqServiceAccountsAccessTokenAuthType defines model for ServicesReqServiceAccountsAccessToken.AuthType.
type ServicesReqServiceAccountsAccessTokenAuthType string

// ServicesReqServiceAccountsAccessTokens defines model for _services_req_service-accounts_access-tokens.
type ServicesReqServiceAccountsAccessTokens struct {
	AccountId string                                         `json:"account_id"`
	AuthType  ServicesReqServiceAccountsAccessTokensAuthType `json:"auth_type"`

	// Creds Service account token for auth_type="static_token"
	Creds *ServicesServiceAccountsCredsStaticToken `json:"creds,omitempty"`
}

// ServicesReqServiceAccountsAccessTokensAuthType defines model for ServicesReqServiceAccountsAccessTokens.AuthType.
type ServicesReqServiceAccountsAccessTokensAuthType string

// ServicesReqServiceAccountsParams defines model for _services_req_service-accounts_params.
type ServicesReqServiceAccountsParams struct {
	AuthType ServicesReqServiceAccountsParamsAuthType `json:"auth_type"`

	// Creds Service account token for auth_type="static_token"
	Creds *ServicesServiceAccountsCredsStaticToken `json:"creds,omitempty"`
}

// ServicesReqServiceAccountsParamsAuthType defines model for ServicesReqServiceAccountsParams.AuthType.
type ServicesReqServiceAccountsParamsAuthType string

// ServicesResAccountAuthTypeLink defines model for _services_res_account_auth-type-link.
type ServicesResAccountAuthTypeLink struct {
	AuthTypes   []AccountAuthType    `json:"auth_types"`
	Identifiers *[]AccountIdentifier `json:"identifiers,omitempty"`
	Message     *string              `json:"message"`
}

// ServicesResAccountIdentifierLink defines model for _services_res_account_identifier-link.
type ServicesResAccountIdentifierLink struct {
	Identifiers []AccountIdentifier `json:"identifiers"`
	Message     *string             `json:"message"`
}

// ServicesResAuthorizeService defines model for _services_res_authorize-service.
type ServicesResAuthorizeService struct {
	AccessToken    *string   `json:"access_token,omitempty"`
	ApprovedScopes *[]string `json:"approved_scopes,omitempty"`

	// ServiceReg Full service registration record
	ServiceReg *ServiceReg `json:"service_reg,omitempty"`

	// TokenType The type of the provided tokens to be specified when they are sent in the "Authorization" header
	TokenType *ServicesResAuthorizeServiceTokenType `json:"token_type,omitempty"`
}

// ServicesResAuthorizeServiceTokenType The type of the provided tokens to be specified when they are sent in the "Authorization" header
type ServicesResAuthorizeServiceTokenType string

// ServicesResServiceAccountsAccessTokens defines model for _services_res_service-accounts_access-tokens.
type ServicesResServiceAccountsAccessTokens struct {
	AppId string                `json:"app_id"`
	OrgId string                `json:"org_id"`
	Token SharedResRokwireToken `json:"token"`
}

// ServicesServiceAccountsCredsStaticToken Service account token for auth_type="static_token"
type ServicesServiceAccountsCredsStaticToken struct {
	Token string `json:"token"`
}

// SharedReqAccountCheck defines model for _shared_req_AccountCheck.
type SharedReqAccountCheck struct {
	ApiKey            string `json:"api_key"`
	AppTypeIdentifier string `json:"app_type_identifier"`
	// Deprecated:
	AuthType *SharedReqAccountCheckAuthType `json:"auth_type,omitempty"`

	// Identifier Allowed identifier types
	Identifier *SharedReqIdentifiers `json:"identifier,omitempty"`
	OrgId      string                `json:"org_id"`
	// Deprecated:
	UserIdentifier *string `json:"user_identifier,omitempty"`
}

// SharedReqAccountCheckAuthType defines model for SharedReqAccountCheck.AuthType.
type SharedReqAccountCheckAuthType string

// SharedReqCreateAccount defines model for _shared_req_CreateAccount.
type SharedReqCreateAccount struct {
	AuthType SharedReqCreateAccountAuthType `json:"auth_type"`
	GroupIds *[]string                      `json:"group_ids,omitempty"`

	// Identifier Allowed identifier types
	Identifier  SharedReqIdentifiers `json:"identifier"`
	Permissions *[]string            `json:"permissions,omitempty"`
	Privacy     *PrivacyNullable     `json:"privacy"`
	Profile     *ProfileNullable     `json:"profile"`
	RoleIds     *[]string            `json:"role_ids,omitempty"`
	Scopes      *[]string            `json:"scopes,omitempty"`
}

// SharedReqCreateAccountAuthType defines model for SharedReqCreateAccount.AuthType.
type SharedReqCreateAccountAuthType string

// SharedReqCredsAnonymous Auth login creds for auth_type="anonymous"
type SharedReqCredsAnonymous struct {
	AnonymousId *string `json:"anonymous_id,omitempty"`
}

// SharedReqCredsCode defines model for _shared_req_CredsCode.
type SharedReqCredsCode struct {
	Code                 *string           `json:"code,omitempty"`
	Email                *string           `json:"email,omitempty"`
	Phone                *string           `json:"phone,omitempty"`
	Username             *string           `json:"username,omitempty"`
	AdditionalProperties map[string]string `json:"-"`
}

// SharedReqCredsNone Auth login request creds for unlisted auth_types (None)
type SharedReqCredsNone = map[string]interface{}

// SharedReqCredsOIDC Auth login creds for auth_type="oidc" (or variants)
//   - full redirect URI received from OIDC provider
type SharedReqCredsOIDC = string

// SharedReqCredsPassword defines model for _shared_req_CredsPassword.
type SharedReqCredsPassword struct {
	Email                *string           `json:"email,omitempty"`
	Password             string            `json:"password"`
	Phone                *string           `json:"phone,omitempty"`
	Username             *string           `json:"username,omitempty"`
	AdditionalProperties map[string]string `json:"-"`
}

// SharedReqCredsWebAuthn defines model for _shared_req_CredsWebAuthn.
type SharedReqCredsWebAuthn struct {
	Email                *string           `json:"email,omitempty"`
	Phone                *string           `json:"phone,omitempty"`
	Response             *string           `json:"response,omitempty"`
	Username             *string           `json:"username,omitempty"`
	AdditionalProperties map[string]string `json:"-"`
}

// SharedReqIdentifierString User identifier string
type SharedReqIdentifierString = string

// SharedReqIdentifiers Allowed identifier types
type SharedReqIdentifiers struct {
	Email                *string           `json:"email,omitempty"`
	Phone                *string           `json:"phone,omitempty"`
	Username             *string           `json:"username,omitempty"`
	AdditionalProperties map[string]string `json:"-"`
}

// SharedReqLogin defines model for _shared_req_Login.
type SharedReqLogin struct {
	AccountIdentifierId *string                 `json:"account_identifier_id"`
	ApiKey              string                  `json:"api_key"`
	AppTypeIdentifier   string                  `json:"app_type_identifier"`
	AuthType            SharedReqLoginAuthType  `json:"auth_type"`
	Creds               *SharedReqLogin_Creds   `json:"creds,omitempty"`
	Device              Device                  `json:"device"`
	OrgId               string                  `json:"org_id"`
	Params              *SharedReqLogin_Params  `json:"params,omitempty"`
	Preferences         *map[string]interface{} `json:"preferences"`
	Privacy             *PrivacyNullable        `json:"privacy"`
	Profile             *ProfileNullable        `json:"profile"`
}

// SharedReqLoginAuthType defines model for SharedReqLogin.AuthType.
type SharedReqLoginAuthType string

// SharedReqLogin_Creds defines model for SharedReqLogin.Creds.
type SharedReqLogin_Creds struct {
	union json.RawMessage
}

// SharedReqLogin_Params defines model for SharedReqLogin.Params.
type SharedReqLogin_Params struct {
	union json.RawMessage
}

// SharedReqLoginUrl defines model for _shared_req_LoginUrl.
type SharedReqLoginUrl struct {
	ApiKey            string                    `json:"api_key"`
	AppTypeIdentifier string                    `json:"app_type_identifier"`
	AuthType          SharedReqLoginUrlAuthType `json:"auth_type"`
	OrgId             string                    `json:"org_id"`
	RedirectUri       string                    `json:"redirect_uri"`
}

// SharedReqLoginUrlAuthType defines model for SharedReqLoginUrl.AuthType.
type SharedReqLoginUrlAuthType string

// SharedReqLoginMfa defines model for _shared_req_Login_Mfa.
type SharedReqLoginMfa struct {
	AccountId  string                `json:"account_id"`
	ApiKey     string                `json:"api_key"`
	Code       string                `json:"code"`
	Identifier string                `json:"identifier"`
	SessionId  string                `json:"session_id"`
	State      string                `json:"state"`
	Type       SharedReqLoginMfaType `json:"type"`
}

// SharedReqLoginMfaType defines model for SharedReqLoginMfa.Type.
type SharedReqLoginMfaType string

// SharedReqMfa defines model for _shared_req_Mfa.
type SharedReqMfa struct {
	Code       *string          `json:"code,omitempty"`
	Identifier string           `json:"identifier"`
	Type       SharedReqMfaType `json:"type"`
}

// SharedReqMfaType defines model for SharedReqMfa.Type.
type SharedReqMfaType string

// SharedReqParamsNone Auth login request params for unlisted auth_types (None)
type SharedReqParamsNone = map[string]interface{}

// SharedReqParamsOIDC Auth login params for auth_type="oidc" (or variants)
type SharedReqParamsOIDC struct {
	PkceVerifier *string `json:"pkce_verifier,omitempty"`
	RedirectUri  *string `json:"redirect_uri,omitempty"`
}

// SharedReqParamsPassword Auth login params for auth_type="email"
type SharedReqParamsPassword struct {
	// ConfirmPassword This should match the `creds` password field when sign_up=true. This should be verified on the client side as well to reduce invalid requests.
	ConfirmPassword *string `json:"confirm_password,omitempty"`
	SignUp          *bool   `json:"sign_up,omitempty"`
}

// SharedReqParamsResetPassword defines model for _shared_req_ParamsResetPassword.
type SharedReqParamsResetPassword struct {
	ConfirmPassword string `json:"confirm_password"`
	NewPassword     string `json:"new_password"`
}

// SharedReqParamsWebAuthn Auth login params for auth_type="webauthn"
type SharedReqParamsWebAuthn struct {
	// DisplayName User's account name for display purposes
	DisplayName *string `json:"display_name,omitempty"`
	SignUp      *bool   `json:"sign_up,omitempty"`
}

// SharedReqRefresh defines model for _shared_req_Refresh.
type SharedReqRefresh struct {
	ApiKey       string `json:"api_key"`
	RefreshToken string `json:"refresh_token"`
}

// SharedReqUpdateAccount defines model for _shared_req_UpdateAccount.
type SharedReqUpdateAccount struct {
	AuthType SharedReqUpdateAccountAuthType `json:"auth_type"`
	GroupIds *[]string                      `json:"group_ids,omitempty"`

	// Identifier Allowed identifier types
	Identifier  SharedReqIdentifiers `json:"identifier"`
	Permissions *[]string            `json:"permissions,omitempty"`
	RoleIds     *[]string            `json:"role_ids,omitempty"`
	Scopes      *[]string            `json:"scopes,omitempty"`
}

// SharedReqUpdateAccountAuthType defines model for SharedReqUpdateAccount.AuthType.
type SharedReqUpdateAccountAuthType string

// SharedReqAppConfigs defines model for _shared_req_app-configs.
type SharedReqAppConfigs struct {
	ApiKey            string `json:"api_key"`
	AppTypeIdentifier string `json:"app_type_identifier"`

	// Version conforms major.minor.patch format
	Version string `json:"version"`
}

// SharedReqAppConfigsOrg defines model for _shared_req_app-configs-org.
type SharedReqAppConfigsOrg struct {
	AppTypeIdentifier string `json:"app_type_identifier"`

	// Version conforms major.minor.patch format
	Version string `json:"version"`
}

// SharedResAccountCheck defines model for _shared_res_AccountCheck.
type SharedResAccountCheck = bool

// SharedResLogin defines model for _shared_res_Login.
type SharedResLogin struct {
	Account *Account               `json:"account,omitempty"`
	Message *string                `json:"message,omitempty"`
	Params  *SharedResLogin_Params `json:"params"`
	Token   *SharedResRokwireToken `json:"token,omitempty"`
}

// SharedResLogin_Params defines model for SharedResLogin.Params.
type SharedResLogin_Params struct {
	union json.RawMessage
}

// SharedResLoginUrl defines model for _shared_res_LoginUrl.
type SharedResLoginUrl struct {
	LoginUrl string `json:"login_url"`

	// Params Params to be submitted with 'login' request (if necessary)
	Params *map[string]interface{} `json:"params,omitempty"`
}

// SharedResLoginMfa defines model for _shared_res_Login_Mfa.
type SharedResLoginMfa struct {
	AccountId string                    `json:"account_id"`
	Enrolled  []SharedResMfa            `json:"enrolled"`
	Params    *SharedResLoginMfa_Params `json:"params"`
	SessionId string                    `json:"session_id"`
	State     string                    `json:"state"`
}

// SharedResLoginMfa_Params defines model for SharedResLoginMfa.Params.
type SharedResLoginMfa_Params struct {
	union json.RawMessage
}

// SharedResMfa defines model for _shared_res_Mfa.
type SharedResMfa struct {
	Params   *map[string]interface{} `json:"params,omitempty"`
	Type     *string                 `json:"type,omitempty"`
	Verified *bool                   `json:"verified,omitempty"`
}

// SharedResParamsAnonymous Auth login response params for auth_type="anonymous"
type SharedResParamsAnonymous struct {
	AnonymousId *string `json:"anonymous_id,omitempty"`
}

// SharedResParamsNone Auth login response params for unlisted auth_types (None)
type SharedResParamsNone = map[string]interface{}

// SharedResParamsOIDC Auth login response params for auth_type="oidc" (or variants)
type SharedResParamsOIDC struct {
	OidcToken *struct {
		AccessToken  *string `json:"access_token,omitempty"`
		IdToken      *string `json:"id_token,omitempty"`
		RefreshToken *string `json:"refresh_token,omitempty"`
		TokenType    *string `json:"token_type,omitempty"`
	} `json:"oidc_token,omitempty"`
	RedirectUri *string `json:"redirect_uri,omitempty"`
}

// SharedResRefresh defines model for _shared_res_Refresh.
type SharedResRefresh struct {
	Params *SharedResRefresh_Params `json:"params"`
	Token  *SharedResRokwireToken   `json:"token,omitempty"`
}

// SharedResRefresh_Params defines model for SharedResRefresh.Params.
type SharedResRefresh_Params struct {
	union json.RawMessage
}

// SharedResRokwireToken defines model for _shared_res_RokwireToken.
type SharedResRokwireToken struct {
	// AccessToken The user's access token to be provided to authorize access to ROKWIRE APIs
	AccessToken *string `json:"access_token,omitempty"`

	// RefreshToken A refresh token that can be used to get a new access token once the one provided expires
	RefreshToken *string `json:"refresh_token,omitempty"`

	// TokenType The type of the provided tokens to be specified when they are sent in the "Authorization" header
	TokenType *SharedResRokwireTokenTokenType `json:"token_type,omitempty"`
}

// SharedResRokwireTokenTokenType The type of the provided tokens to be specified when they are sent in the "Authorization" header
type SharedResRokwireTokenTokenType string

// SharedResSignInOptions defines model for _shared_res_SignInOptions.
type SharedResSignInOptions struct {
	AuthTypes   []AccountAuthType   `json:"auth_types"`
	Identifiers []AccountIdentifier `json:"identifiers"`
}

// SystemReqUpdateServiceAccount defines model for _system_req_update_service-account.
type SystemReqUpdateServiceAccount struct {
	Name        *string   `json:"name,omitempty"`
	Permissions *[]string `json:"permissions"`
	Scopes      *[]string `json:"scopes"`
}

// DeleteAdminAccountMfaParams defines parameters for DeleteAdminAccountMfa.
type DeleteAdminAccountMfaParams struct {
	// Type MFA type
	Type string `form:"type" json:"type"`
}

// PostAdminAccountMfaParams defines parameters for PostAdminAccountMfa.
type PostAdminAccountMfaParams struct {
	// Type MFA type
	Type string `form:"type" json:"type"`
}

// GetAdminApplicationAccountsParams defines parameters for GetAdminApplicationAccounts.
type GetAdminApplicationAccountsParams struct {
	// Limit The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// AccountId The account ID
	AccountId *string `form:"account-id,omitempty" json:"account-id,omitempty"`

	// Firstname The account profile first name
	Firstname *string `form:"firstname,omitempty" json:"firstname,omitempty"`

	// Lastname The account profile last name
	Lastname *string `form:"lastname,omitempty" json:"lastname,omitempty"`

	// AuthType The auth type
	AuthType *string `form:"auth-type,omitempty" json:"auth-type,omitempty"`

	// AuthTypeIdentifier The authentication type identifier
	AuthTypeIdentifier *string `form:"auth-type-identifier,omitempty" json:"auth-type-identifier,omitempty"`

	// HasPermissions Account has permissions (permissions, roles, or groups) filter
	HasPermissions *bool `form:"has-permissions,omitempty" json:"has-permissions,omitempty"`

	// Permissions A comma-separated list of permission names
	Permissions *string `form:"permissions,omitempty" json:"permissions,omitempty"`

	// RoleIds A comma-separated list of role IDs
	RoleIds *string `form:"role-ids,omitempty" json:"role-ids,omitempty"`

	// GroupIds A comma-separated list of group IDs
	GroupIds *string `form:"group-ids,omitempty" json:"group-ids,omitempty"`
}

// PutAdminApplicationAccountsIdSystemConfigsJSONBody defines parameters for PutAdminApplicationAccountsIdSystemConfigs.
type PutAdminApplicationAccountsIdSystemConfigsJSONBody = map[string]interface{}

// PutAdminApplicationAccountsIdSystemConfigsParams defines parameters for PutAdminApplicationAccountsIdSystemConfigs.
type PutAdminApplicationAccountsIdSystemConfigsParams struct {
	// CreateAnonymous Create anonymous account if account with ID cannot be found. Default is `false`
	CreateAnonymous *bool `form:"create-anonymous,omitempty" json:"create-anonymous,omitempty"`
}

// GetAdminApplicationConfigsParams defines parameters for GetAdminApplicationConfigs.
type GetAdminApplicationConfigsParams struct {
	AppTypeId string  `form:"app_type_id" json:"app_type_id"`
	OrgId     *string `form:"org_id,omitempty" json:"org_id,omitempty"`
	Version   *string `form:"version,omitempty" json:"version,omitempty"`
}

// PostAdminApplicationFilterAccountsJSONBody defines parameters for PostAdminApplicationFilterAccounts.
type PostAdminApplicationFilterAccountsJSONBody = map[string]interface{}

// PostAdminApplicationFilterAccountsParams defines parameters for PostAdminApplicationFilterAccounts.
type PostAdminApplicationFilterAccountsParams struct {
	// Limit The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostAdminApplicationFilterAccountsCountJSONBody defines parameters for PostAdminApplicationFilterAccountsCount.
type PostAdminApplicationFilterAccountsCountJSONBody = map[string]interface{}

// GetAdminApplicationLoginSessionsParams defines parameters for GetAdminApplicationLoginSessions.
type GetAdminApplicationLoginSessionsParams struct {
	// Identifier identifier
	Identifier *string `form:"identifier,omitempty" json:"identifier,omitempty"`

	// AccountAuthTypeIdentifier account auth type identifier
	AccountAuthTypeIdentifier *string `form:"account-auth-type-identifier,omitempty" json:"account-auth-type-identifier,omitempty"`

	// AppTypeId app type id
	AppTypeId *string `form:"app-type-id,omitempty" json:"app-type-id,omitempty"`

	// AppTypeIdentifier app type identifier
	AppTypeIdentifier *string `form:"app-type-identifier,omitempty" json:"app-type-identifier,omitempty"`

	// Anonymous anonymous
	Anonymous *bool `form:"anonymous,omitempty" json:"anonymous,omitempty"`

	// DeviceId device id
	DeviceId *string `form:"device-id,omitempty" json:"device-id,omitempty"`

	// IpAddress ip address
	IpAddress *string `form:"ip-address,omitempty" json:"ip-address,omitempty"`
}

// GetAdminAuthAppTokenParams defines parameters for GetAdminAuthAppToken.
type GetAdminAuthAppTokenParams struct {
	// AppId The application ID of the token to return
	AppId string `form:"app_id" json:"app_id"`
}

// PostAdminAuthMfaParams defines parameters for PostAdminAuthMfa.
type PostAdminAuthMfaParams struct {
	// State Login state
	State *string `form:"state,omitempty" json:"state,omitempty"`
}

// GetAdminConfigsParams defines parameters for GetAdminConfigs.
type GetAdminConfigsParams struct {
	// Type config type
	Type *string `form:"type,omitempty" json:"type,omitempty"`
}

// PostAdminV2ApplicationAccountsJSONBody defines parameters for PostAdminV2ApplicationAccounts.
type PostAdminV2ApplicationAccountsJSONBody = []SharedReqCreateAccount

// PostBbsAccountsJSONBody defines parameters for PostBbsAccounts.
type PostBbsAccountsJSONBody = map[string]interface{}

// PostBbsAccountsParams defines parameters for PostBbsAccounts.
type PostBbsAccountsParams struct {
	// AppId The application ID to use to filter accounts
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// OrgId The organization ID to use to filter accounts
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`

	// Limit The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostBbsAccountsCountJSONBody defines parameters for PostBbsAccountsCount.
type PostBbsAccountsCountJSONBody = map[string]interface{}

// PostBbsAccountsCountParams defines parameters for PostBbsAccountsCount.
type PostBbsAccountsCountParams struct {
	// AppId The application ID to use to filter accounts
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// OrgId The organization ID to use to filter accounts
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`
}

// GetBbsServiceRegsParams defines parameters for GetBbsServiceRegs.
type GetBbsServiceRegsParams struct {
	// Ids A comma-separated list of service IDs to return registrations for
	Ids string `form:"ids" json:"ids"`
}

// DeleteServicesAccountParams defines parameters for DeleteServicesAccount.
type DeleteServicesAccountParams struct {
	// Apps A comma-separated list of app_ids
	Apps *string `form:"apps,omitempty" json:"apps,omitempty"`
}

// PutServicesAccountPreferencesJSONBody defines parameters for PutServicesAccountPreferences.
type PutServicesAccountPreferencesJSONBody = map[string]interface{}

// PutServicesAccountSecretsJSONBody defines parameters for PutServicesAccountSecrets.
type PutServicesAccountSecretsJSONBody = map[string]interface{}

// GetServicesAccountsParams defines parameters for GetServicesAccounts.
type GetServicesAccountsParams struct {
	// Limit The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// AccountId The account ID
	AccountId *string `form:"account-id,omitempty" json:"account-id,omitempty"`

	// Firstname The account profile first name
	Firstname *string `form:"firstname,omitempty" json:"firstname,omitempty"`

	// Lastname The account profile last name
	Lastname *string `form:"lastname,omitempty" json:"lastname,omitempty"`

	// AuthType The auth type
	AuthType *string `form:"auth-type,omitempty" json:"auth-type,omitempty"`

	// AuthTypeIdentifier The authentication type identifier
	AuthTypeIdentifier *string `form:"auth-type-identifier,omitempty" json:"auth-type-identifier,omitempty"`

	// HasPermissions Account has permissions (permissions, roles, or groups) filter
	HasPermissions *bool `form:"has-permissions,omitempty" json:"has-permissions,omitempty"`

	// Permissions A comma-separated list of permission names
	Permissions *string `form:"permissions,omitempty" json:"permissions,omitempty"`

	// RoleIds A comma-separated list of role IDs
	RoleIds *string `form:"role-ids,omitempty" json:"role-ids,omitempty"`

	// GroupIds A comma-separated list of group IDs
	GroupIds *string `form:"group-ids,omitempty" json:"group-ids,omitempty"`
}

// GetServicesAccountsPublicParams defines parameters for GetServicesAccountsPublic.
type GetServicesAccountsPublicParams struct {
	// Limit The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Search The search for username, firstname, or lastname
	Search *string `form:"search,omitempty" json:"search,omitempty"`

	// Username The username
	Username *string `form:"username,omitempty" json:"username,omitempty"`

	// Firstname The account profile first name
	Firstname *string `form:"firstname,omitempty" json:"firstname,omitempty"`

	// Lastname The account profile last name
	Lastname *string `form:"lastname,omitempty" json:"lastname,omitempty"`

	// FollowingId The ID of the account being followed
	FollowingId *string `form:"following-id,omitempty" json:"following-id,omitempty"`

	// FollowerId The ID of the account following
	FollowerId *string `form:"follower-id,omitempty" json:"follower-id,omitempty"`
}

// GetServicesAuthIdentifierVerifyParams defines parameters for GetServicesAuthIdentifierVerify.
type GetServicesAuthIdentifierVerifyParams struct {
	// Id Account identifier ID
	Id string `form:"id" json:"id"`

	// Code Verification code
	Code string `form:"code" json:"code"`
}

// PostServicesAuthLogoutJSONBody defines parameters for PostServicesAuthLogout.
type PostServicesAuthLogoutJSONBody struct {
	AllSessions bool `json:"all_sessions"`
}

// PostServicesAuthMfaParams defines parameters for PostServicesAuthMfa.
type PostServicesAuthMfaParams struct {
	// State Login state
	State *string `form:"state,omitempty" json:"state,omitempty"`
}

// GetServicesAuthServiceRegsParams defines parameters for GetServicesAuthServiceRegs.
type GetServicesAuthServiceRegsParams struct {
	// Ids A comma-separated list of service IDs to return registrations for
	Ids string `form:"ids" json:"ids"`
}

// DeleteSystemApiKeysParams defines parameters for DeleteSystemApiKeys.
type DeleteSystemApiKeysParams struct {
	// Id The ID of the API key to delete
	Id string `form:"id" json:"id"`
}

// GetSystemApiKeysParams defines parameters for GetSystemApiKeys.
type GetSystemApiKeysParams struct {
	// Id The ID of the API key to return. Required if `app_id` is not provided.
	Id *string `form:"id,omitempty" json:"id,omitempty"`

	// AppId The app ID of the API keys to return. Required if `id` is not provided.
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`
}

// GetSystemAppOrgsParams defines parameters for GetSystemAppOrgs.
type GetSystemAppOrgsParams struct {
	// AppId Application ID to search for
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// OrgId Organization ID to search for
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`
}

// GetSystemAuthAppOrgTokenParams defines parameters for GetSystemAuthAppOrgToken.
type GetSystemAuthAppOrgTokenParams struct {
	// AppId The application ID of the token to return
	AppId string `form:"app_id" json:"app_id"`

	// OrgId The organization ID of the token to return
	OrgId string `form:"org_id" json:"org_id"`
}

// DeleteSystemServiceAccountsParams defines parameters for DeleteSystemServiceAccounts.
type DeleteSystemServiceAccountsParams struct {
	// AccountId Service account ID to delete
	AccountId string `form:"account_id" json:"account_id"`
}

// GetSystemServiceAccountsParams defines parameters for GetSystemServiceAccounts.
type GetSystemServiceAccountsParams struct {
	// AccountId Service account ID to search for
	AccountId *string `form:"account_id,omitempty" json:"account_id,omitempty"`

	// Name Service account name to search for
	Name *string `form:"name,omitempty" json:"name,omitempty"`

	// AppId Service account app ID to search for
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// OrgId Service account org ID to search for
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`

	// Permissions A comma-separated list of service account permissions to search for
	Permissions *string `form:"permissions,omitempty" json:"permissions,omitempty"`

	// Scopes A comma-separated list of service account scopes to search for
	Scopes *string `form:"scopes,omitempty" json:"scopes,omitempty"`
}

// PostSystemServiceAccountsParams defines parameters for PostSystemServiceAccounts.
type PostSystemServiceAccountsParams struct {
	// AppId Service account app ID to copy from
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// OrgId Service account org ID to copy from
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`
}

// DeleteSystemServiceAccountsIdParams defines parameters for DeleteSystemServiceAccountsId.
type DeleteSystemServiceAccountsIdParams struct {
	// AppId Application ID of the service account instance
	AppId string `form:"app_id" json:"app_id"`

	// OrgId Organization ID of the service account instance
	OrgId string `form:"org_id" json:"org_id"`
}

// GetSystemServiceAccountsIdParams defines parameters for GetSystemServiceAccountsId.
type GetSystemServiceAccountsIdParams struct {
	// AppId Application ID of the service account instance
	AppId string `form:"app_id" json:"app_id"`

	// OrgId Organization ID of the service account instance
	OrgId string `form:"org_id" json:"org_id"`
}

// PutSystemServiceAccountsIdParams defines parameters for PutSystemServiceAccountsId.
type PutSystemServiceAccountsIdParams struct {
	// AppId Application ID of the service account instance
	AppId string `form:"app_id" json:"app_id"`

	// OrgId Organization ID of the service account instance
	OrgId string `form:"org_id" json:"org_id"`
}

// DeleteSystemServiceAccountsIdCredsParams defines parameters for DeleteSystemServiceAccountsIdCreds.
type DeleteSystemServiceAccountsIdCredsParams struct {
	// CredId id of the credential to be removed
	CredId string `form:"cred_id" json:"cred_id"`
}

// DeleteSystemServiceRegsParams defines parameters for DeleteSystemServiceRegs.
type DeleteSystemServiceRegsParams struct {
	// Id The service ID of the registration to delete
	Id string `form:"id" json:"id"`
}

// GetSystemServiceRegsParams defines parameters for GetSystemServiceRegs.
type GetSystemServiceRegsParams struct {
	// Ids A comma-separated list of service IDs to return registrations for
	Ids string `form:"ids" json:"ids"`
}

// PostTpsAccountsJSONBody defines parameters for PostTpsAccounts.
type PostTpsAccountsJSONBody = map[string]interface{}

// PostTpsAccountsParams defines parameters for PostTpsAccounts.
type PostTpsAccountsParams struct {
	// AppId The application ID to use to filter accounts
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// OrgId The organization ID to use to filter accounts
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`

	// Limit The maximum number of accounts to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The index of the first account to return
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostTpsAccountsCountJSONBody defines parameters for PostTpsAccountsCount.
type PostTpsAccountsCountJSONBody = map[string]interface{}

// PostTpsAccountsCountParams defines parameters for PostTpsAccountsCount.
type PostTpsAccountsCountParams struct {
	// AppId The application ID to use to filter accounts
	AppId *string `form:"app_id,omitempty" json:"app_id,omitempty"`

	// OrgId The organization ID to use to filter accounts
	OrgId *string `form:"org_id,omitempty" json:"org_id,omitempty"`
}

// GetTpsServiceRegsParams defines parameters for GetTpsServiceRegs.
type GetTpsServiceRegsParams struct {
	// Ids A comma-separated list of service IDs to return registrations for
	Ids string `form:"ids" json:"ids"`
}

// GetUiCredentialResetParams defines parameters for GetUiCredentialReset.
type GetUiCredentialResetParams struct {
	// Id Credential ID
	Id string `form:"id" json:"id"`

	// Code Reset code
	Code string `form:"code" json:"code"`
}

// GetUiIdentifierVerifyParams defines parameters for GetUiIdentifierVerify.
type GetUiIdentifierVerifyParams struct {
	// Id Identifier ID
	Id string `form:"id" json:"id"`

	// Code Verification code
	Code string `form:"code" json:"code"`
}

// PutAdminAccountUsernameJSONRequestBody defines body for PutAdminAccountUsername for application/json ContentType.
type PutAdminAccountUsernameJSONRequestBody = Username

// PostAdminAppConfigsJSONRequestBody defines body for PostAdminAppConfigs for application/json ContentType.
type PostAdminAppConfigsJSONRequestBody = SharedReqAppConfigs

// PostAdminAppConfigsOrganizationJSONRequestBody defines body for PostAdminAppConfigsOrganization for application/json ContentType.
type PostAdminAppConfigsOrganizationJSONRequestBody = SharedReqAppConfigsOrg

// PostAdminApplicationAccountsJSONRequestBody defines body for PostAdminApplicationAccounts for application/json ContentType.
type PostAdminApplicationAccountsJSONRequestBody = SharedReqCreateAccount

// PutAdminApplicationAccountsJSONRequestBody defines body for PutAdminApplicationAccounts for application/json ContentType.
type PutAdminApplicationAccountsJSONRequestBody = SharedReqUpdateAccount

// DeleteAdminApplicationAccountsIdPermissionsJSONRequestBody defines body for DeleteAdminApplicationAccountsIdPermissions for application/json ContentType.
type DeleteAdminApplicationAccountsIdPermissionsJSONRequestBody = AdminReqRevokePermissions

// PutAdminApplicationAccountsIdPermissionsJSONRequestBody defines body for PutAdminApplicationAccountsIdPermissions for application/json ContentType.
type PutAdminApplicationAccountsIdPermissionsJSONRequestBody = AdminReqGrantPermissions

// DeleteAdminApplicationAccountsIdRolesJSONRequestBody defines body for DeleteAdminApplicationAccountsIdRoles for application/json ContentType.
type DeleteAdminApplicationAccountsIdRolesJSONRequestBody = AdminReqRevokeRolesFromAccount

// PutAdminApplicationAccountsIdRolesJSONRequestBody defines body for PutAdminApplicationAccountsIdRoles for application/json ContentType.
type PutAdminApplicationAccountsIdRolesJSONRequestBody = AdminReqGrantRolesToAccount

// PutAdminApplicationAccountsIdSystemConfigsJSONRequestBody defines body for PutAdminApplicationAccountsIdSystemConfigs for application/json ContentType.
type PutAdminApplicationAccountsIdSystemConfigsJSONRequestBody = PutAdminApplicationAccountsIdSystemConfigsJSONBody

// PutAdminApplicationAccountsIdVerifiedJSONRequestBody defines body for PutAdminApplicationAccountsIdVerified for application/json ContentType.
type PutAdminApplicationAccountsIdVerifiedJSONRequestBody = AdminReqVerified

// PostAdminApplicationConfigsJSONRequestBody defines body for PostAdminApplicationConfigs for application/json ContentType.
type PostAdminApplicationConfigsJSONRequestBody = ApplicationConfig

// PutAdminApplicationConfigsIdJSONRequestBody defines body for PutAdminApplicationConfigsId for application/json ContentType.
type PutAdminApplicationConfigsIdJSONRequestBody = ApplicationConfig

// PostAdminApplicationFilterAccountsJSONRequestBody defines body for PostAdminApplicationFilterAccounts for application/json ContentType.
type PostAdminApplicationFilterAccountsJSONRequestBody = PostAdminApplicationFilterAccountsJSONBody

// PostAdminApplicationFilterAccountsCountJSONRequestBody defines body for PostAdminApplicationFilterAccountsCount for application/json ContentType.
type PostAdminApplicationFilterAccountsCountJSONRequestBody = PostAdminApplicationFilterAccountsCountJSONBody

// PostAdminApplicationGroupsJSONRequestBody defines body for PostAdminApplicationGroups for application/json ContentType.
type PostAdminApplicationGroupsJSONRequestBody = AdminReqApplicationGroup

// PutAdminApplicationGroupsIdJSONRequestBody defines body for PutAdminApplicationGroupsId for application/json ContentType.
type PutAdminApplicationGroupsIdJSONRequestBody = AdminReqApplicationGroup

// DeleteAdminApplicationGroupsIdAccountsJSONRequestBody defines body for DeleteAdminApplicationGroupsIdAccounts for application/json ContentType.
type DeleteAdminApplicationGroupsIdAccountsJSONRequestBody = AdminReqRemoveAccountFromGroup

// PutAdminApplicationGroupsIdAccountsJSONRequestBody defines body for PutAdminApplicationGroupsIdAccounts for application/json ContentType.
type PutAdminApplicationGroupsIdAccountsJSONRequestBody = AdminReqAddAccountsToGroup

// PostAdminApplicationRolesJSONRequestBody defines body for PostAdminApplicationRoles for application/json ContentType.
type PostAdminApplicationRolesJSONRequestBody = AdminReqApplicationRole

// PutAdminApplicationRolesIdJSONRequestBody defines body for PutAdminApplicationRolesId for application/json ContentType.
type PutAdminApplicationRolesIdJSONRequestBody = AdminReqApplicationRole

// PutAdminApplicationRolesIdPermissionsJSONRequestBody defines body for PutAdminApplicationRolesIdPermissions for application/json ContentType.
type PutAdminApplicationRolesIdPermissionsJSONRequestBody = AdminReqGrantPermissionsToRole

// PostAdminAuthLoginJSONRequestBody defines body for PostAdminAuthLogin for application/json ContentType.
type PostAdminAuthLoginJSONRequestBody = SharedReqLogin

// PostAdminAuthLoginUrlJSONRequestBody defines body for PostAdminAuthLoginUrl for application/json ContentType.
type PostAdminAuthLoginUrlJSONRequestBody = SharedReqLoginUrl

// PostAdminAuthMfaJSONRequestBody defines body for PostAdminAuthMfa for application/json ContentType.
type PostAdminAuthMfaJSONRequestBody = SharedReqLoginMfa

// PostAdminAuthRefreshJSONRequestBody defines body for PostAdminAuthRefresh for application/json ContentType.
type PostAdminAuthRefreshJSONRequestBody = SharedReqRefresh

// PostAdminAuthVerifyMfaJSONRequestBody defines body for PostAdminAuthVerifyMfa for application/json ContentType.
type PostAdminAuthVerifyMfaJSONRequestBody = SharedReqMfa

// PostAdminConfigsJSONRequestBody defines body for PostAdminConfigs for application/json ContentType.
type PostAdminConfigsJSONRequestBody = AdminReqCreateUpdateConfig

// PutAdminConfigsIdJSONRequestBody defines body for PutAdminConfigsId for application/json ContentType.
type PutAdminConfigsIdJSONRequestBody = AdminReqCreateUpdateConfig

// PostAdminV2ApplicationAccountsJSONRequestBody defines body for PostAdminV2ApplicationAccounts for application/json ContentType.
type PostAdminV2ApplicationAccountsJSONRequestBody = PostAdminV2ApplicationAccountsJSONBody

// PostBbsAccessTokenJSONRequestBody defines body for PostBbsAccessToken for application/json ContentType.
type PostBbsAccessTokenJSONRequestBody = ServicesReqServiceAccountsAccessToken

// PostBbsAccessTokensJSONRequestBody defines body for PostBbsAccessTokens for application/json ContentType.
type PostBbsAccessTokensJSONRequestBody = ServicesReqServiceAccountsAccessTokens

// PostBbsAccountsJSONRequestBody defines body for PostBbsAccounts for application/json ContentType.
type PostBbsAccountsJSONRequestBody = PostBbsAccountsJSONBody

// PostBbsAccountsCountJSONRequestBody defines body for PostBbsAccountsCount for application/json ContentType.
type PostBbsAccountsCountJSONRequestBody = PostBbsAccountsCountJSONBody

// PostBbsServiceAccountIdJSONRequestBody defines body for PostBbsServiceAccountId for application/json ContentType.
type PostBbsServiceAccountIdJSONRequestBody = ServicesReqServiceAccountsParams

// PostServicesAccountFollowJSONRequestBody defines body for PostServicesAccountFollow for application/json ContentType.
type PostServicesAccountFollowJSONRequestBody = Follow

// DeleteServicesAccountMfaJSONRequestBody defines body for DeleteServicesAccountMfa for application/json ContentType.
type DeleteServicesAccountMfaJSONRequestBody = SharedReqMfa

// PostServicesAccountMfaJSONRequestBody defines body for PostServicesAccountMfa for application/json ContentType.
type PostServicesAccountMfaJSONRequestBody = SharedReqMfa

// PutServicesAccountPreferencesJSONRequestBody defines body for PutServicesAccountPreferences for application/json ContentType.
type PutServicesAccountPreferencesJSONRequestBody = PutServicesAccountPreferencesJSONBody

// PutServicesAccountPrivacyJSONRequestBody defines body for PutServicesAccountPrivacy for application/json ContentType.
type PutServicesAccountPrivacyJSONRequestBody = Privacy

// PutServicesAccountProfileJSONRequestBody defines body for PutServicesAccountProfile for application/json ContentType.
type PutServicesAccountProfileJSONRequestBody = Profile

// PutServicesAccountSecretsJSONRequestBody defines body for PutServicesAccountSecrets for application/json ContentType.
type PutServicesAccountSecretsJSONRequestBody = PutServicesAccountSecretsJSONBody

// PutServicesAccountUsernameJSONRequestBody defines body for PutServicesAccountUsername for application/json ContentType.
type PutServicesAccountUsernameJSONRequestBody = Username

// PostServicesAccountsJSONRequestBody defines body for PostServicesAccounts for application/json ContentType.
type PostServicesAccountsJSONRequestBody = SharedReqCreateAccount

// PutServicesAccountsJSONRequestBody defines body for PutServicesAccounts for application/json ContentType.
type PutServicesAccountsJSONRequestBody = SharedReqUpdateAccount

// PostServicesAppConfigsJSONRequestBody defines body for PostServicesAppConfigs for application/json ContentType.
type PostServicesAppConfigsJSONRequestBody = SharedReqAppConfigs

// PostServicesAppConfigsOrganizationJSONRequestBody defines body for PostServicesAppConfigsOrganization for application/json ContentType.
type PostServicesAppConfigsOrganizationJSONRequestBody = SharedReqAppConfigsOrg

// PostServicesApplicationConfigsJSONRequestBody defines body for PostServicesApplicationConfigs for application/json ContentType.
type PostServicesApplicationConfigsJSONRequestBody = SharedReqAppConfigs

// PostServicesApplicationOrganizationConfigsJSONRequestBody defines body for PostServicesApplicationOrganizationConfigs for application/json ContentType.
type PostServicesApplicationOrganizationConfigsJSONRequestBody = SharedReqAppConfigsOrg

// DeleteServicesAuthAccountAuthTypeLinkJSONRequestBody defines body for DeleteServicesAuthAccountAuthTypeLink for application/json ContentType.
type DeleteServicesAuthAccountAuthTypeLinkJSONRequestBody = ServicesReqAccountAuthTypeUnlink

// PostServicesAuthAccountAuthTypeLinkJSONRequestBody defines body for PostServicesAuthAccountAuthTypeLink for application/json ContentType.
type PostServicesAuthAccountAuthTypeLinkJSONRequestBody = ServicesReqAccountAuthTypeLink

// PostServicesAuthAccountCanLinkJSONRequestBody defines body for PostServicesAuthAccountCanLink for application/json ContentType.
type PostServicesAuthAccountCanLinkJSONRequestBody = SharedReqAccountCheck

// PostServicesAuthAccountCanSignInJSONRequestBody defines body for PostServicesAuthAccountCanSignIn for application/json ContentType.
type PostServicesAuthAccountCanSignInJSONRequestBody = SharedReqAccountCheck

// PostServicesAuthAccountExistsJSONRequestBody defines body for PostServicesAuthAccountExists for application/json ContentType.
type PostServicesAuthAccountExistsJSONRequestBody = SharedReqAccountCheck

// DeleteServicesAuthAccountIdentifierLinkJSONRequestBody defines body for DeleteServicesAuthAccountIdentifierLink for application/json ContentType.
type DeleteServicesAuthAccountIdentifierLinkJSONRequestBody = ServicesReqAccountIdentifierUnlink

// PostServicesAuthAccountIdentifierLinkJSONRequestBody defines body for PostServicesAuthAccountIdentifierLink for application/json ContentType.
type PostServicesAuthAccountIdentifierLinkJSONRequestBody = ServicesReqAccountIdentifierLink

// PostServicesAuthAccountSignInOptionsJSONRequestBody defines body for PostServicesAuthAccountSignInOptions for application/json ContentType.
type PostServicesAuthAccountSignInOptionsJSONRequestBody = SharedReqAccountCheck

// PostServicesAuthAuthorizeServiceJSONRequestBody defines body for PostServicesAuthAuthorizeService for application/json ContentType.
type PostServicesAuthAuthorizeServiceJSONRequestBody = ServicesReqAuthorizeService

// PostServicesAuthCredentialForgotCompleteJSONRequestBody defines body for PostServicesAuthCredentialForgotComplete for application/json ContentType.
type PostServicesAuthCredentialForgotCompleteJSONRequestBody = ServicesReqCredentialForgotComplete

// PostServicesAuthCredentialForgotInitiateJSONRequestBody defines body for PostServicesAuthCredentialForgotInitiate for application/json ContentType.
type PostServicesAuthCredentialForgotInitiateJSONRequestBody = ServicesReqCredentialForgotInitiate

// PostServicesAuthCredentialSendVerifyJSONRequestBody defines body for PostServicesAuthCredentialSendVerify for application/json ContentType.
type PostServicesAuthCredentialSendVerifyJSONRequestBody = ServicesReqIdentifierSendVerify

// PostServicesAuthCredentialUpdateJSONRequestBody defines body for PostServicesAuthCredentialUpdate for application/json ContentType.
type PostServicesAuthCredentialUpdateJSONRequestBody = ServicesReqCredentialUpdate

// PostServicesAuthIdentifierSendVerifyJSONRequestBody defines body for PostServicesAuthIdentifierSendVerify for application/json ContentType.
type PostServicesAuthIdentifierSendVerifyJSONRequestBody = ServicesReqIdentifierSendVerify

// PostServicesAuthLoginJSONRequestBody defines body for PostServicesAuthLogin for application/json ContentType.
type PostServicesAuthLoginJSONRequestBody = SharedReqLogin

// PostServicesAuthLoginUrlJSONRequestBody defines body for PostServicesAuthLoginUrl for application/json ContentType.
type PostServicesAuthLoginUrlJSONRequestBody = SharedReqLoginUrl

// PostServicesAuthLogoutJSONRequestBody defines body for PostServicesAuthLogout for application/json ContentType.
type PostServicesAuthLogoutJSONRequestBody PostServicesAuthLogoutJSONBody

// PostServicesAuthMfaJSONRequestBody defines body for PostServicesAuthMfa for application/json ContentType.
type PostServicesAuthMfaJSONRequestBody = SharedReqLoginMfa

// PostServicesAuthRefreshJSONRequestBody defines body for PostServicesAuthRefresh for application/json ContentType.
type PostServicesAuthRefreshJSONRequestBody = SharedReqRefresh

// PostServicesAuthVerifyMfaJSONRequestBody defines body for PostServicesAuthVerifyMfa for application/json ContentType.
type PostServicesAuthVerifyMfaJSONRequestBody = SharedReqMfa

// PostSystemApiKeysJSONRequestBody defines body for PostSystemApiKeys for application/json ContentType.
type PostSystemApiKeysJSONRequestBody = APIKey

// PutSystemApiKeysJSONRequestBody defines body for PutSystemApiKeys for application/json ContentType.
type PutSystemApiKeysJSONRequestBody = APIKey

// PostSystemAppOrgsJSONRequestBody defines body for PostSystemAppOrgs for application/json ContentType.
type PostSystemAppOrgsJSONRequestBody = ApplicationOrganization

// PutSystemAppOrgsIdJSONRequestBody defines body for PutSystemAppOrgsId for application/json ContentType.
type PutSystemAppOrgsIdJSONRequestBody = ApplicationOrganization

// PostSystemApplicationsJSONRequestBody defines body for PostSystemApplications for application/json ContentType.
type PostSystemApplicationsJSONRequestBody = Application

// PutSystemApplicationsIdJSONRequestBody defines body for PutSystemApplicationsId for application/json ContentType.
type PutSystemApplicationsIdJSONRequestBody = Application

// PostSystemAuthTypesJSONRequestBody defines body for PostSystemAuthTypes for application/json ContentType.
type PostSystemAuthTypesJSONRequestBody = AuthType

// PutSystemAuthTypesIdJSONRequestBody defines body for PutSystemAuthTypesId for application/json ContentType.
type PutSystemAuthTypesIdJSONRequestBody = AuthType

// PostSystemOrganizationsJSONRequestBody defines body for PostSystemOrganizations for application/json ContentType.
type PostSystemOrganizationsJSONRequestBody = Organization

// PutSystemOrganizationsIdJSONRequestBody defines body for PutSystemOrganizationsId for application/json ContentType.
type PutSystemOrganizationsIdJSONRequestBody = Organization

// PostSystemPermissionsJSONRequestBody defines body for PostSystemPermissions for application/json ContentType.
type PostSystemPermissionsJSONRequestBody = Permission

// PutSystemPermissionsJSONRequestBody defines body for PutSystemPermissions for application/json ContentType.
type PutSystemPermissionsJSONRequestBody = Permission

// PostSystemServiceAccountsJSONRequestBody defines body for PostSystemServiceAccounts for application/json ContentType.
type PostSystemServiceAccountsJSONRequestBody = ServiceAccount

// PutSystemServiceAccountsIdJSONRequestBody defines body for PutSystemServiceAccountsId for application/json ContentType.
type PutSystemServiceAccountsIdJSONRequestBody = SystemReqUpdateServiceAccount

// PostSystemServiceAccountsIdCredsJSONRequestBody defines body for PostSystemServiceAccountsIdCreds for application/json ContentType.
type PostSystemServiceAccountsIdCredsJSONRequestBody = ServiceAccountCredential

// PostSystemServiceRegsJSONRequestBody defines body for PostSystemServiceRegs for application/json ContentType.
type PostSystemServiceRegsJSONRequestBody = ServiceReg

// PutSystemServiceRegsJSONRequestBody defines body for PutSystemServiceRegs for application/json ContentType.
type PutSystemServiceRegsJSONRequestBody = ServiceReg

// PostTpsAccessTokenJSONRequestBody defines body for PostTpsAccessToken for application/json ContentType.
type PostTpsAccessTokenJSONRequestBody = ServicesReqServiceAccountsAccessToken

// PostTpsAccessTokensJSONRequestBody defines body for PostTpsAccessTokens for application/json ContentType.
type PostTpsAccessTokensJSONRequestBody = ServicesReqServiceAccountsAccessTokens

// PostTpsAccountsJSONRequestBody defines body for PostTpsAccounts for application/json ContentType.
type PostTpsAccountsJSONRequestBody = PostTpsAccountsJSONBody

// PostTpsAccountsCountJSONRequestBody defines body for PostTpsAccountsCount for application/json ContentType.
type PostTpsAccountsCountJSONRequestBody = PostTpsAccountsCountJSONBody

// PostTpsServiceAccountIdJSONRequestBody defines body for PostTpsServiceAccountId for application/json ContentType.
type PostTpsServiceAccountIdJSONRequestBody = ServicesReqServiceAccountsParams

// Getter for additional properties for SharedReqCredsCode. Returns the specified
// element and whether it was found
func (a SharedReqCredsCode) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SharedReqCredsCode
func (a *SharedReqCredsCode) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SharedReqCredsCode to handle AdditionalProperties
func (a *SharedReqCredsCode) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["code"]; found {
		err = json.Unmarshal(raw, &a.Code)
		if err != nil {
			return fmt.Errorf("error reading 'code': %w", err)
		}
		delete(object, "code")
	}

	if raw, found := object["email"]; found {
		err = json.Unmarshal(raw, &a.Email)
		if err != nil {
			return fmt.Errorf("error reading 'email': %w", err)
		}
		delete(object, "email")
	}

	if raw, found := object["phone"]; found {
		err = json.Unmarshal(raw, &a.Phone)
		if err != nil {
			return fmt.Errorf("error reading 'phone': %w", err)
		}
		delete(object, "phone")
	}

	if raw, found := object["username"]; found {
		err = json.Unmarshal(raw, &a.Username)
		if err != nil {
			return fmt.Errorf("error reading 'username': %w", err)
		}
		delete(object, "username")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SharedReqCredsCode to handle AdditionalProperties
func (a SharedReqCredsCode) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Code != nil {
		object["code"], err = json.Marshal(a.Code)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'code': %w", err)
		}
	}

	if a.Email != nil {
		object["email"], err = json.Marshal(a.Email)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'email': %w", err)
		}
	}

	if a.Phone != nil {
		object["phone"], err = json.Marshal(a.Phone)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'phone': %w", err)
		}
	}

	if a.Username != nil {
		object["username"], err = json.Marshal(a.Username)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'username': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SharedReqCredsPassword. Returns the specified
// element and whether it was found
func (a SharedReqCredsPassword) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SharedReqCredsPassword
func (a *SharedReqCredsPassword) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SharedReqCredsPassword to handle AdditionalProperties
func (a *SharedReqCredsPassword) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["email"]; found {
		err = json.Unmarshal(raw, &a.Email)
		if err != nil {
			return fmt.Errorf("error reading 'email': %w", err)
		}
		delete(object, "email")
	}

	if raw, found := object["password"]; found {
		err = json.Unmarshal(raw, &a.Password)
		if err != nil {
			return fmt.Errorf("error reading 'password': %w", err)
		}
		delete(object, "password")
	}

	if raw, found := object["phone"]; found {
		err = json.Unmarshal(raw, &a.Phone)
		if err != nil {
			return fmt.Errorf("error reading 'phone': %w", err)
		}
		delete(object, "phone")
	}

	if raw, found := object["username"]; found {
		err = json.Unmarshal(raw, &a.Username)
		if err != nil {
			return fmt.Errorf("error reading 'username': %w", err)
		}
		delete(object, "username")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SharedReqCredsPassword to handle AdditionalProperties
func (a SharedReqCredsPassword) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Email != nil {
		object["email"], err = json.Marshal(a.Email)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'email': %w", err)
		}
	}

	object["password"], err = json.Marshal(a.Password)
	if err != nil {
		return nil, fmt.Errorf("error marshaling 'password': %w", err)
	}

	if a.Phone != nil {
		object["phone"], err = json.Marshal(a.Phone)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'phone': %w", err)
		}
	}

	if a.Username != nil {
		object["username"], err = json.Marshal(a.Username)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'username': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SharedReqCredsWebAuthn. Returns the specified
// element and whether it was found
func (a SharedReqCredsWebAuthn) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SharedReqCredsWebAuthn
func (a *SharedReqCredsWebAuthn) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SharedReqCredsWebAuthn to handle AdditionalProperties
func (a *SharedReqCredsWebAuthn) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["email"]; found {
		err = json.Unmarshal(raw, &a.Email)
		if err != nil {
			return fmt.Errorf("error reading 'email': %w", err)
		}
		delete(object, "email")
	}

	if raw, found := object["phone"]; found {
		err = json.Unmarshal(raw, &a.Phone)
		if err != nil {
			return fmt.Errorf("error reading 'phone': %w", err)
		}
		delete(object, "phone")
	}

	if raw, found := object["response"]; found {
		err = json.Unmarshal(raw, &a.Response)
		if err != nil {
			return fmt.Errorf("error reading 'response': %w", err)
		}
		delete(object, "response")
	}

	if raw, found := object["username"]; found {
		err = json.Unmarshal(raw, &a.Username)
		if err != nil {
			return fmt.Errorf("error reading 'username': %w", err)
		}
		delete(object, "username")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SharedReqCredsWebAuthn to handle AdditionalProperties
func (a SharedReqCredsWebAuthn) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Email != nil {
		object["email"], err = json.Marshal(a.Email)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'email': %w", err)
		}
	}

	if a.Phone != nil {
		object["phone"], err = json.Marshal(a.Phone)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'phone': %w", err)
		}
	}

	if a.Response != nil {
		object["response"], err = json.Marshal(a.Response)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'response': %w", err)
		}
	}

	if a.Username != nil {
		object["username"], err = json.Marshal(a.Username)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'username': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SharedReqIdentifiers. Returns the specified
// element and whether it was found
func (a SharedReqIdentifiers) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SharedReqIdentifiers
func (a *SharedReqIdentifiers) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SharedReqIdentifiers to handle AdditionalProperties
func (a *SharedReqIdentifiers) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["email"]; found {
		err = json.Unmarshal(raw, &a.Email)
		if err != nil {
			return fmt.Errorf("error reading 'email': %w", err)
		}
		delete(object, "email")
	}

	if raw, found := object["phone"]; found {
		err = json.Unmarshal(raw, &a.Phone)
		if err != nil {
			return fmt.Errorf("error reading 'phone': %w", err)
		}
		delete(object, "phone")
	}

	if raw, found := object["username"]; found {
		err = json.Unmarshal(raw, &a.Username)
		if err != nil {
			return fmt.Errorf("error reading 'username': %w", err)
		}
		delete(object, "username")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SharedReqIdentifiers to handle AdditionalProperties
func (a SharedReqIdentifiers) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Email != nil {
		object["email"], err = json.Marshal(a.Email)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'email': %w", err)
		}
	}

	if a.Phone != nil {
		object["phone"], err = json.Marshal(a.Phone)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'phone': %w", err)
		}
	}

	if a.Username != nil {
		object["username"], err = json.Marshal(a.Username)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'username': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// AsEnvConfigData returns the union data inside the Config_Data as a EnvConfigData
func (t Config_Data) AsEnvConfigData() (EnvConfigData, error) {
	var body EnvConfigData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvConfigData overwrites any union data inside the Config_Data as the provided EnvConfigData
func (t *Config_Data) FromEnvConfigData(v EnvConfigData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvConfigData performs a merge with any union data inside the Config_Data, using the provided EnvConfigData
func (t *Config_Data) MergeEnvConfigData(v EnvConfigData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAuthConfigData returns the union data inside the Config_Data as a AuthConfigData
func (t Config_Data) AsAuthConfigData() (AuthConfigData, error) {
	var body AuthConfigData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAuthConfigData overwrites any union data inside the Config_Data as the provided AuthConfigData
func (t *Config_Data) FromAuthConfigData(v AuthConfigData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAuthConfigData performs a merge with any union data inside the Config_Data, using the provided AuthConfigData
func (t *Config_Data) MergeAuthConfigData(v AuthConfigData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t Config_Data) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Config_Data) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEnvConfigData returns the union data inside the AdminReqCreateUpdateConfig_Data as a EnvConfigData
func (t AdminReqCreateUpdateConfig_Data) AsEnvConfigData() (EnvConfigData, error) {
	var body EnvConfigData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvConfigData overwrites any union data inside the AdminReqCreateUpdateConfig_Data as the provided EnvConfigData
func (t *AdminReqCreateUpdateConfig_Data) FromEnvConfigData(v EnvConfigData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvConfigData performs a merge with any union data inside the AdminReqCreateUpdateConfig_Data, using the provided EnvConfigData
func (t *AdminReqCreateUpdateConfig_Data) MergeEnvConfigData(v EnvConfigData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsAuthConfigData returns the union data inside the AdminReqCreateUpdateConfig_Data as a AuthConfigData
func (t AdminReqCreateUpdateConfig_Data) AsAuthConfigData() (AuthConfigData, error) {
	var body AuthConfigData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAuthConfigData overwrites any union data inside the AdminReqCreateUpdateConfig_Data as the provided AuthConfigData
func (t *AdminReqCreateUpdateConfig_Data) FromAuthConfigData(v AuthConfigData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAuthConfigData performs a merge with any union data inside the AdminReqCreateUpdateConfig_Data, using the provided AuthConfigData
func (t *AdminReqCreateUpdateConfig_Data) MergeAuthConfigData(v AuthConfigData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t AdminReqCreateUpdateConfig_Data) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AdminReqCreateUpdateConfig_Data) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedReqCredsCode returns the union data inside the ServicesReqAccountAuthTypeLink_Creds as a SharedReqCredsCode
func (t ServicesReqAccountAuthTypeLink_Creds) AsSharedReqCredsCode() (SharedReqCredsCode, error) {
	var body SharedReqCredsCode
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsCode overwrites any union data inside the ServicesReqAccountAuthTypeLink_Creds as the provided SharedReqCredsCode
func (t *ServicesReqAccountAuthTypeLink_Creds) FromSharedReqCredsCode(v SharedReqCredsCode) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsCode performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Creds, using the provided SharedReqCredsCode
func (t *ServicesReqAccountAuthTypeLink_Creds) MergeSharedReqCredsCode(v SharedReqCredsCode) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsOIDC returns the union data inside the ServicesReqAccountAuthTypeLink_Creds as a SharedReqCredsOIDC
func (t ServicesReqAccountAuthTypeLink_Creds) AsSharedReqCredsOIDC() (SharedReqCredsOIDC, error) {
	var body SharedReqCredsOIDC
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsOIDC overwrites any union data inside the ServicesReqAccountAuthTypeLink_Creds as the provided SharedReqCredsOIDC
func (t *ServicesReqAccountAuthTypeLink_Creds) FromSharedReqCredsOIDC(v SharedReqCredsOIDC) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsOIDC performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Creds, using the provided SharedReqCredsOIDC
func (t *ServicesReqAccountAuthTypeLink_Creds) MergeSharedReqCredsOIDC(v SharedReqCredsOIDC) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsPassword returns the union data inside the ServicesReqAccountAuthTypeLink_Creds as a SharedReqCredsPassword
func (t ServicesReqAccountAuthTypeLink_Creds) AsSharedReqCredsPassword() (SharedReqCredsPassword, error) {
	var body SharedReqCredsPassword
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsPassword overwrites any union data inside the ServicesReqAccountAuthTypeLink_Creds as the provided SharedReqCredsPassword
func (t *ServicesReqAccountAuthTypeLink_Creds) FromSharedReqCredsPassword(v SharedReqCredsPassword) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsPassword performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Creds, using the provided SharedReqCredsPassword
func (t *ServicesReqAccountAuthTypeLink_Creds) MergeSharedReqCredsPassword(v SharedReqCredsPassword) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsWebAuthn returns the union data inside the ServicesReqAccountAuthTypeLink_Creds as a SharedReqCredsWebAuthn
func (t ServicesReqAccountAuthTypeLink_Creds) AsSharedReqCredsWebAuthn() (SharedReqCredsWebAuthn, error) {
	var body SharedReqCredsWebAuthn
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsWebAuthn overwrites any union data inside the ServicesReqAccountAuthTypeLink_Creds as the provided SharedReqCredsWebAuthn
func (t *ServicesReqAccountAuthTypeLink_Creds) FromSharedReqCredsWebAuthn(v SharedReqCredsWebAuthn) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsWebAuthn performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Creds, using the provided SharedReqCredsWebAuthn
func (t *ServicesReqAccountAuthTypeLink_Creds) MergeSharedReqCredsWebAuthn(v SharedReqCredsWebAuthn) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsNone returns the union data inside the ServicesReqAccountAuthTypeLink_Creds as a SharedReqCredsNone
func (t ServicesReqAccountAuthTypeLink_Creds) AsSharedReqCredsNone() (SharedReqCredsNone, error) {
	var body SharedReqCredsNone
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsNone overwrites any union data inside the ServicesReqAccountAuthTypeLink_Creds as the provided SharedReqCredsNone
func (t *ServicesReqAccountAuthTypeLink_Creds) FromSharedReqCredsNone(v SharedReqCredsNone) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsNone performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Creds, using the provided SharedReqCredsNone
func (t *ServicesReqAccountAuthTypeLink_Creds) MergeSharedReqCredsNone(v SharedReqCredsNone) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicesReqAccountAuthTypeLink_Creds) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicesReqAccountAuthTypeLink_Creds) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedReqParamsOIDC returns the union data inside the ServicesReqAccountAuthTypeLink_Params as a SharedReqParamsOIDC
func (t ServicesReqAccountAuthTypeLink_Params) AsSharedReqParamsOIDC() (SharedReqParamsOIDC, error) {
	var body SharedReqParamsOIDC
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsOIDC overwrites any union data inside the ServicesReqAccountAuthTypeLink_Params as the provided SharedReqParamsOIDC
func (t *ServicesReqAccountAuthTypeLink_Params) FromSharedReqParamsOIDC(v SharedReqParamsOIDC) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsOIDC performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Params, using the provided SharedReqParamsOIDC
func (t *ServicesReqAccountAuthTypeLink_Params) MergeSharedReqParamsOIDC(v SharedReqParamsOIDC) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqParamsPassword returns the union data inside the ServicesReqAccountAuthTypeLink_Params as a SharedReqParamsPassword
func (t ServicesReqAccountAuthTypeLink_Params) AsSharedReqParamsPassword() (SharedReqParamsPassword, error) {
	var body SharedReqParamsPassword
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsPassword overwrites any union data inside the ServicesReqAccountAuthTypeLink_Params as the provided SharedReqParamsPassword
func (t *ServicesReqAccountAuthTypeLink_Params) FromSharedReqParamsPassword(v SharedReqParamsPassword) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsPassword performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Params, using the provided SharedReqParamsPassword
func (t *ServicesReqAccountAuthTypeLink_Params) MergeSharedReqParamsPassword(v SharedReqParamsPassword) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqParamsWebAuthn returns the union data inside the ServicesReqAccountAuthTypeLink_Params as a SharedReqParamsWebAuthn
func (t ServicesReqAccountAuthTypeLink_Params) AsSharedReqParamsWebAuthn() (SharedReqParamsWebAuthn, error) {
	var body SharedReqParamsWebAuthn
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsWebAuthn overwrites any union data inside the ServicesReqAccountAuthTypeLink_Params as the provided SharedReqParamsWebAuthn
func (t *ServicesReqAccountAuthTypeLink_Params) FromSharedReqParamsWebAuthn(v SharedReqParamsWebAuthn) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsWebAuthn performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Params, using the provided SharedReqParamsWebAuthn
func (t *ServicesReqAccountAuthTypeLink_Params) MergeSharedReqParamsWebAuthn(v SharedReqParamsWebAuthn) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqParamsNone returns the union data inside the ServicesReqAccountAuthTypeLink_Params as a SharedReqParamsNone
func (t ServicesReqAccountAuthTypeLink_Params) AsSharedReqParamsNone() (SharedReqParamsNone, error) {
	var body SharedReqParamsNone
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsNone overwrites any union data inside the ServicesReqAccountAuthTypeLink_Params as the provided SharedReqParamsNone
func (t *ServicesReqAccountAuthTypeLink_Params) FromSharedReqParamsNone(v SharedReqParamsNone) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsNone performs a merge with any union data inside the ServicesReqAccountAuthTypeLink_Params, using the provided SharedReqParamsNone
func (t *ServicesReqAccountAuthTypeLink_Params) MergeSharedReqParamsNone(v SharedReqParamsNone) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicesReqAccountAuthTypeLink_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicesReqAccountAuthTypeLink_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedReqParamsResetPassword returns the union data inside the ServicesReqCredentialForgotComplete_Params as a SharedReqParamsResetPassword
func (t ServicesReqCredentialForgotComplete_Params) AsSharedReqParamsResetPassword() (SharedReqParamsResetPassword, error) {
	var body SharedReqParamsResetPassword
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsResetPassword overwrites any union data inside the ServicesReqCredentialForgotComplete_Params as the provided SharedReqParamsResetPassword
func (t *ServicesReqCredentialForgotComplete_Params) FromSharedReqParamsResetPassword(v SharedReqParamsResetPassword) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsResetPassword performs a merge with any union data inside the ServicesReqCredentialForgotComplete_Params, using the provided SharedReqParamsResetPassword
func (t *ServicesReqCredentialForgotComplete_Params) MergeSharedReqParamsResetPassword(v SharedReqParamsResetPassword) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicesReqCredentialForgotComplete_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicesReqCredentialForgotComplete_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedReqIdentifiers returns the union data inside the ServicesReqCredentialForgotInitiate_Identifier as a SharedReqIdentifiers
func (t ServicesReqCredentialForgotInitiate_Identifier) AsSharedReqIdentifiers() (SharedReqIdentifiers, error) {
	var body SharedReqIdentifiers
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqIdentifiers overwrites any union data inside the ServicesReqCredentialForgotInitiate_Identifier as the provided SharedReqIdentifiers
func (t *ServicesReqCredentialForgotInitiate_Identifier) FromSharedReqIdentifiers(v SharedReqIdentifiers) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqIdentifiers performs a merge with any union data inside the ServicesReqCredentialForgotInitiate_Identifier, using the provided SharedReqIdentifiers
func (t *ServicesReqCredentialForgotInitiate_Identifier) MergeSharedReqIdentifiers(v SharedReqIdentifiers) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqIdentifierString returns the union data inside the ServicesReqCredentialForgotInitiate_Identifier as a SharedReqIdentifierString
func (t ServicesReqCredentialForgotInitiate_Identifier) AsSharedReqIdentifierString() (SharedReqIdentifierString, error) {
	var body SharedReqIdentifierString
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqIdentifierString overwrites any union data inside the ServicesReqCredentialForgotInitiate_Identifier as the provided SharedReqIdentifierString
func (t *ServicesReqCredentialForgotInitiate_Identifier) FromSharedReqIdentifierString(v SharedReqIdentifierString) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqIdentifierString performs a merge with any union data inside the ServicesReqCredentialForgotInitiate_Identifier, using the provided SharedReqIdentifierString
func (t *ServicesReqCredentialForgotInitiate_Identifier) MergeSharedReqIdentifierString(v SharedReqIdentifierString) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicesReqCredentialForgotInitiate_Identifier) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicesReqCredentialForgotInitiate_Identifier) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedReqParamsResetPassword returns the union data inside the ServicesReqCredentialUpdate_Params as a SharedReqParamsResetPassword
func (t ServicesReqCredentialUpdate_Params) AsSharedReqParamsResetPassword() (SharedReqParamsResetPassword, error) {
	var body SharedReqParamsResetPassword
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsResetPassword overwrites any union data inside the ServicesReqCredentialUpdate_Params as the provided SharedReqParamsResetPassword
func (t *ServicesReqCredentialUpdate_Params) FromSharedReqParamsResetPassword(v SharedReqParamsResetPassword) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsResetPassword performs a merge with any union data inside the ServicesReqCredentialUpdate_Params, using the provided SharedReqParamsResetPassword
func (t *ServicesReqCredentialUpdate_Params) MergeSharedReqParamsResetPassword(v SharedReqParamsResetPassword) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicesReqCredentialUpdate_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicesReqCredentialUpdate_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedReqIdentifiers returns the union data inside the ServicesReqIdentifierSendVerify_Identifier as a SharedReqIdentifiers
func (t ServicesReqIdentifierSendVerify_Identifier) AsSharedReqIdentifiers() (SharedReqIdentifiers, error) {
	var body SharedReqIdentifiers
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqIdentifiers overwrites any union data inside the ServicesReqIdentifierSendVerify_Identifier as the provided SharedReqIdentifiers
func (t *ServicesReqIdentifierSendVerify_Identifier) FromSharedReqIdentifiers(v SharedReqIdentifiers) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqIdentifiers performs a merge with any union data inside the ServicesReqIdentifierSendVerify_Identifier, using the provided SharedReqIdentifiers
func (t *ServicesReqIdentifierSendVerify_Identifier) MergeSharedReqIdentifiers(v SharedReqIdentifiers) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqIdentifierString returns the union data inside the ServicesReqIdentifierSendVerify_Identifier as a SharedReqIdentifierString
func (t ServicesReqIdentifierSendVerify_Identifier) AsSharedReqIdentifierString() (SharedReqIdentifierString, error) {
	var body SharedReqIdentifierString
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqIdentifierString overwrites any union data inside the ServicesReqIdentifierSendVerify_Identifier as the provided SharedReqIdentifierString
func (t *ServicesReqIdentifierSendVerify_Identifier) FromSharedReqIdentifierString(v SharedReqIdentifierString) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqIdentifierString performs a merge with any union data inside the ServicesReqIdentifierSendVerify_Identifier, using the provided SharedReqIdentifierString
func (t *ServicesReqIdentifierSendVerify_Identifier) MergeSharedReqIdentifierString(v SharedReqIdentifierString) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicesReqIdentifierSendVerify_Identifier) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicesReqIdentifierSendVerify_Identifier) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedReqCredsAnonymous returns the union data inside the SharedReqLogin_Creds as a SharedReqCredsAnonymous
func (t SharedReqLogin_Creds) AsSharedReqCredsAnonymous() (SharedReqCredsAnonymous, error) {
	var body SharedReqCredsAnonymous
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsAnonymous overwrites any union data inside the SharedReqLogin_Creds as the provided SharedReqCredsAnonymous
func (t *SharedReqLogin_Creds) FromSharedReqCredsAnonymous(v SharedReqCredsAnonymous) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsAnonymous performs a merge with any union data inside the SharedReqLogin_Creds, using the provided SharedReqCredsAnonymous
func (t *SharedReqLogin_Creds) MergeSharedReqCredsAnonymous(v SharedReqCredsAnonymous) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsCode returns the union data inside the SharedReqLogin_Creds as a SharedReqCredsCode
func (t SharedReqLogin_Creds) AsSharedReqCredsCode() (SharedReqCredsCode, error) {
	var body SharedReqCredsCode
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsCode overwrites any union data inside the SharedReqLogin_Creds as the provided SharedReqCredsCode
func (t *SharedReqLogin_Creds) FromSharedReqCredsCode(v SharedReqCredsCode) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsCode performs a merge with any union data inside the SharedReqLogin_Creds, using the provided SharedReqCredsCode
func (t *SharedReqLogin_Creds) MergeSharedReqCredsCode(v SharedReqCredsCode) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsOIDC returns the union data inside the SharedReqLogin_Creds as a SharedReqCredsOIDC
func (t SharedReqLogin_Creds) AsSharedReqCredsOIDC() (SharedReqCredsOIDC, error) {
	var body SharedReqCredsOIDC
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsOIDC overwrites any union data inside the SharedReqLogin_Creds as the provided SharedReqCredsOIDC
func (t *SharedReqLogin_Creds) FromSharedReqCredsOIDC(v SharedReqCredsOIDC) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsOIDC performs a merge with any union data inside the SharedReqLogin_Creds, using the provided SharedReqCredsOIDC
func (t *SharedReqLogin_Creds) MergeSharedReqCredsOIDC(v SharedReqCredsOIDC) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsPassword returns the union data inside the SharedReqLogin_Creds as a SharedReqCredsPassword
func (t SharedReqLogin_Creds) AsSharedReqCredsPassword() (SharedReqCredsPassword, error) {
	var body SharedReqCredsPassword
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsPassword overwrites any union data inside the SharedReqLogin_Creds as the provided SharedReqCredsPassword
func (t *SharedReqLogin_Creds) FromSharedReqCredsPassword(v SharedReqCredsPassword) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsPassword performs a merge with any union data inside the SharedReqLogin_Creds, using the provided SharedReqCredsPassword
func (t *SharedReqLogin_Creds) MergeSharedReqCredsPassword(v SharedReqCredsPassword) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsWebAuthn returns the union data inside the SharedReqLogin_Creds as a SharedReqCredsWebAuthn
func (t SharedReqLogin_Creds) AsSharedReqCredsWebAuthn() (SharedReqCredsWebAuthn, error) {
	var body SharedReqCredsWebAuthn
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsWebAuthn overwrites any union data inside the SharedReqLogin_Creds as the provided SharedReqCredsWebAuthn
func (t *SharedReqLogin_Creds) FromSharedReqCredsWebAuthn(v SharedReqCredsWebAuthn) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsWebAuthn performs a merge with any union data inside the SharedReqLogin_Creds, using the provided SharedReqCredsWebAuthn
func (t *SharedReqLogin_Creds) MergeSharedReqCredsWebAuthn(v SharedReqCredsWebAuthn) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqCredsNone returns the union data inside the SharedReqLogin_Creds as a SharedReqCredsNone
func (t SharedReqLogin_Creds) AsSharedReqCredsNone() (SharedReqCredsNone, error) {
	var body SharedReqCredsNone
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqCredsNone overwrites any union data inside the SharedReqLogin_Creds as the provided SharedReqCredsNone
func (t *SharedReqLogin_Creds) FromSharedReqCredsNone(v SharedReqCredsNone) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqCredsNone performs a merge with any union data inside the SharedReqLogin_Creds, using the provided SharedReqCredsNone
func (t *SharedReqLogin_Creds) MergeSharedReqCredsNone(v SharedReqCredsNone) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t SharedReqLogin_Creds) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SharedReqLogin_Creds) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedReqParamsOIDC returns the union data inside the SharedReqLogin_Params as a SharedReqParamsOIDC
func (t SharedReqLogin_Params) AsSharedReqParamsOIDC() (SharedReqParamsOIDC, error) {
	var body SharedReqParamsOIDC
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsOIDC overwrites any union data inside the SharedReqLogin_Params as the provided SharedReqParamsOIDC
func (t *SharedReqLogin_Params) FromSharedReqParamsOIDC(v SharedReqParamsOIDC) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsOIDC performs a merge with any union data inside the SharedReqLogin_Params, using the provided SharedReqParamsOIDC
func (t *SharedReqLogin_Params) MergeSharedReqParamsOIDC(v SharedReqParamsOIDC) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqParamsPassword returns the union data inside the SharedReqLogin_Params as a SharedReqParamsPassword
func (t SharedReqLogin_Params) AsSharedReqParamsPassword() (SharedReqParamsPassword, error) {
	var body SharedReqParamsPassword
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsPassword overwrites any union data inside the SharedReqLogin_Params as the provided SharedReqParamsPassword
func (t *SharedReqLogin_Params) FromSharedReqParamsPassword(v SharedReqParamsPassword) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsPassword performs a merge with any union data inside the SharedReqLogin_Params, using the provided SharedReqParamsPassword
func (t *SharedReqLogin_Params) MergeSharedReqParamsPassword(v SharedReqParamsPassword) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqParamsWebAuthn returns the union data inside the SharedReqLogin_Params as a SharedReqParamsWebAuthn
func (t SharedReqLogin_Params) AsSharedReqParamsWebAuthn() (SharedReqParamsWebAuthn, error) {
	var body SharedReqParamsWebAuthn
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsWebAuthn overwrites any union data inside the SharedReqLogin_Params as the provided SharedReqParamsWebAuthn
func (t *SharedReqLogin_Params) FromSharedReqParamsWebAuthn(v SharedReqParamsWebAuthn) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsWebAuthn performs a merge with any union data inside the SharedReqLogin_Params, using the provided SharedReqParamsWebAuthn
func (t *SharedReqLogin_Params) MergeSharedReqParamsWebAuthn(v SharedReqParamsWebAuthn) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedReqParamsNone returns the union data inside the SharedReqLogin_Params as a SharedReqParamsNone
func (t SharedReqLogin_Params) AsSharedReqParamsNone() (SharedReqParamsNone, error) {
	var body SharedReqParamsNone
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedReqParamsNone overwrites any union data inside the SharedReqLogin_Params as the provided SharedReqParamsNone
func (t *SharedReqLogin_Params) FromSharedReqParamsNone(v SharedReqParamsNone) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedReqParamsNone performs a merge with any union data inside the SharedReqLogin_Params, using the provided SharedReqParamsNone
func (t *SharedReqLogin_Params) MergeSharedReqParamsNone(v SharedReqParamsNone) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t SharedReqLogin_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SharedReqLogin_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedResParamsOIDC returns the union data inside the SharedResLogin_Params as a SharedResParamsOIDC
func (t SharedResLogin_Params) AsSharedResParamsOIDC() (SharedResParamsOIDC, error) {
	var body SharedResParamsOIDC
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsOIDC overwrites any union data inside the SharedResLogin_Params as the provided SharedResParamsOIDC
func (t *SharedResLogin_Params) FromSharedResParamsOIDC(v SharedResParamsOIDC) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsOIDC performs a merge with any union data inside the SharedResLogin_Params, using the provided SharedResParamsOIDC
func (t *SharedResLogin_Params) MergeSharedResParamsOIDC(v SharedResParamsOIDC) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedResParamsAnonymous returns the union data inside the SharedResLogin_Params as a SharedResParamsAnonymous
func (t SharedResLogin_Params) AsSharedResParamsAnonymous() (SharedResParamsAnonymous, error) {
	var body SharedResParamsAnonymous
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsAnonymous overwrites any union data inside the SharedResLogin_Params as the provided SharedResParamsAnonymous
func (t *SharedResLogin_Params) FromSharedResParamsAnonymous(v SharedResParamsAnonymous) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsAnonymous performs a merge with any union data inside the SharedResLogin_Params, using the provided SharedResParamsAnonymous
func (t *SharedResLogin_Params) MergeSharedResParamsAnonymous(v SharedResParamsAnonymous) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedResParamsNone returns the union data inside the SharedResLogin_Params as a SharedResParamsNone
func (t SharedResLogin_Params) AsSharedResParamsNone() (SharedResParamsNone, error) {
	var body SharedResParamsNone
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsNone overwrites any union data inside the SharedResLogin_Params as the provided SharedResParamsNone
func (t *SharedResLogin_Params) FromSharedResParamsNone(v SharedResParamsNone) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsNone performs a merge with any union data inside the SharedResLogin_Params, using the provided SharedResParamsNone
func (t *SharedResLogin_Params) MergeSharedResParamsNone(v SharedResParamsNone) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t SharedResLogin_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SharedResLogin_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedResParamsOIDC returns the union data inside the SharedResLoginMfa_Params as a SharedResParamsOIDC
func (t SharedResLoginMfa_Params) AsSharedResParamsOIDC() (SharedResParamsOIDC, error) {
	var body SharedResParamsOIDC
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsOIDC overwrites any union data inside the SharedResLoginMfa_Params as the provided SharedResParamsOIDC
func (t *SharedResLoginMfa_Params) FromSharedResParamsOIDC(v SharedResParamsOIDC) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsOIDC performs a merge with any union data inside the SharedResLoginMfa_Params, using the provided SharedResParamsOIDC
func (t *SharedResLoginMfa_Params) MergeSharedResParamsOIDC(v SharedResParamsOIDC) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedResParamsAnonymous returns the union data inside the SharedResLoginMfa_Params as a SharedResParamsAnonymous
func (t SharedResLoginMfa_Params) AsSharedResParamsAnonymous() (SharedResParamsAnonymous, error) {
	var body SharedResParamsAnonymous
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsAnonymous overwrites any union data inside the SharedResLoginMfa_Params as the provided SharedResParamsAnonymous
func (t *SharedResLoginMfa_Params) FromSharedResParamsAnonymous(v SharedResParamsAnonymous) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsAnonymous performs a merge with any union data inside the SharedResLoginMfa_Params, using the provided SharedResParamsAnonymous
func (t *SharedResLoginMfa_Params) MergeSharedResParamsAnonymous(v SharedResParamsAnonymous) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedResParamsNone returns the union data inside the SharedResLoginMfa_Params as a SharedResParamsNone
func (t SharedResLoginMfa_Params) AsSharedResParamsNone() (SharedResParamsNone, error) {
	var body SharedResParamsNone
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsNone overwrites any union data inside the SharedResLoginMfa_Params as the provided SharedResParamsNone
func (t *SharedResLoginMfa_Params) FromSharedResParamsNone(v SharedResParamsNone) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsNone performs a merge with any union data inside the SharedResLoginMfa_Params, using the provided SharedResParamsNone
func (t *SharedResLoginMfa_Params) MergeSharedResParamsNone(v SharedResParamsNone) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t SharedResLoginMfa_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SharedResLoginMfa_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsSharedResParamsOIDC returns the union data inside the SharedResRefresh_Params as a SharedResParamsOIDC
func (t SharedResRefresh_Params) AsSharedResParamsOIDC() (SharedResParamsOIDC, error) {
	var body SharedResParamsOIDC
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsOIDC overwrites any union data inside the SharedResRefresh_Params as the provided SharedResParamsOIDC
func (t *SharedResRefresh_Params) FromSharedResParamsOIDC(v SharedResParamsOIDC) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsOIDC performs a merge with any union data inside the SharedResRefresh_Params, using the provided SharedResParamsOIDC
func (t *SharedResRefresh_Params) MergeSharedResParamsOIDC(v SharedResParamsOIDC) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedResParamsAnonymous returns the union data inside the SharedResRefresh_Params as a SharedResParamsAnonymous
func (t SharedResRefresh_Params) AsSharedResParamsAnonymous() (SharedResParamsAnonymous, error) {
	var body SharedResParamsAnonymous
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsAnonymous overwrites any union data inside the SharedResRefresh_Params as the provided SharedResParamsAnonymous
func (t *SharedResRefresh_Params) FromSharedResParamsAnonymous(v SharedResParamsAnonymous) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsAnonymous performs a merge with any union data inside the SharedResRefresh_Params, using the provided SharedResParamsAnonymous
func (t *SharedResRefresh_Params) MergeSharedResParamsAnonymous(v SharedResParamsAnonymous) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

// AsSharedResParamsNone returns the union data inside the SharedResRefresh_Params as a SharedResParamsNone
func (t SharedResRefresh_Params) AsSharedResParamsNone() (SharedResParamsNone, error) {
	var body SharedResParamsNone
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSharedResParamsNone overwrites any union data inside the SharedResRefresh_Params as the provided SharedResParamsNone
func (t *SharedResRefresh_Params) FromSharedResParamsNone(v SharedResParamsNone) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSharedResParamsNone performs a merge with any union data inside the SharedResRefresh_Params, using the provided SharedResParamsNone
func (t *SharedResRefresh_Params) MergeSharedResParamsNone(v SharedResParamsNone) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(t.union, b)
	t.union = merged
	return err
}

func (t SharedResRefresh_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SharedResRefresh_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
