get:
  tags:
  - Services
  summary: Get follows for a specific user
  description: |
    Returns a list of public accounts of users that follow specified user

    **Auth:** Requires user auth token
  security:
    - bearerAuth: []
  parameters:
    - name: limit
      in: query
      description: The maximum number of accounts to return
      required: false
      style: form
      explode: false
      schema:
        type: integer
    - name: offset
      in: query
      description: The index of the first account to return
      required: false
      style: form
      explode: false
      schema:
        type: integer
    - name: user_id
      in: query
      description: The ID of the account to query follows
      required: false
      style: form
      explode: false
      schema:
        type: string
  responses:
    200:
      description: Success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../../../schemas/user/PublicAccount.yaml"
    400:
      description: Bad request
    401:
      description: Unauthorized
    500:
      description: Internal error
post:
  tags:
  - Services
  summary: Add follower
  description: |
    Adds follower to specified user

    **Auth:** Requires user auth token
  security:
    - bearerAuth: []
  requestBody:
    description: Follow relationship
    content:
      application/json:
        schema:
          $ref: "../../../schemas/user/Follow.yaml"
    required: true
  responses:
    200:
      description: Success
      content:
        text/plain:
          schema:
            type: string
            example: Success
    400:
      description: Bad request
    401:
      description: Unauthorized
    500:
      description: Internal error
delete:
  tags:
  - Services
  summary: Delete a follow relationship
  description: |
    Delete a follow where subject follows userID

    **Auth:** Requires user auth token
  security:
    - bearerAuth: []
  requestBody:
    description: |
      Delete follow params
    content:
      application/json:
        schema:
          $ref: "../../../schemas/user/UserID.yaml"
  responses:
    200:
      description: Success
    400:
      description: Bad request
    401:
      description: Unauthorized
    500:
      description: Internal error