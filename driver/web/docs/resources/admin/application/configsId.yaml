get:
  tags:
  - Admin
  summary: Reads app configs by ID
  description: |
    Get app configs for the provided ID
    
    **Auth:** Requires admin access token with `get_app-configs`, `update_app-configs`, `delete_app-configs`, or `all_app-configs` permission
  security:
    - bearerAuth: []
  parameters:
    - name: id
      in: path
      description: app config id to read
      required: true
      style: simple
      explode: false
      schema:
        type: string
  responses:
    200:
      description: Success
      content:
        application/json:
          schema:
            $ref: "../../../schemas/application/ApplicationConfig.yaml"
    400:
      description: Bad request.
    401:
      description: Unauthorized
    500:
      description: Internal error
put:
  tags:
  - Admin
  summary: Updates app config by ID
  description: |
    Updates app config with the provided ID

    **Auth:** Requires admin access token with `update_app-configs` or `all_app-configs` permission
  security:
    - bearerAuth: []
  parameters:
  - name: id
    in: path
    required: true
    style: simple
    explode: false
    schema:
      type: string
  requestBody:
    description: updated app config
    content:
      application/json:
        schema:
          $ref: "../../../schemas/application/ApplicationConfig.yaml"
        example:
          version: "1.0.1"
          app_type_id: 7e037f2d-b423-4b4d-a1bc-18507f81c6d1
          org_id: 0a2eff20-e2cd-11eb-af68-60f81db5ecc0
          data:
            url: rokmetro.dev
    required: true
  responses:
    200:
      description: Success
      content:
        text/plain:
          schema:
            type: string
            example: Success
    400:
      description: Bad request
    401:
      description: Unauthorized
    500:
      description: Internal error
delete:
  tags:
  - Admin
  summary: Deletes app config by ID
  description: |
    Deletes app config with the provided ID

    **Auth:** Requires admin access token with `delete_app-configs` or `all_app-configs` permission
  security:
    - bearerAuth: []
  parameters:
  - name: id
    in: path
    required: true
    style: simple
    explode: false
    schema:
      type: string
  responses:
    200:
      description: Success
    400:
      description: Bad request
    401:
      description: Unauthorized
    500:
      description: Internal error