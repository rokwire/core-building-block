// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	logs "github.com/rokwire/logging-library-go/logs"
	mock "github.com/stretchr/testify/mock"

	model "core-building-block/core/model"
)

// anonymousAuthType is an autogenerated mock type for the anonymousAuthType type
type anonymousAuthType struct {
	mock.Mock
}

// checkCredentials provides a mock function with given fields: authType, appType, appOrg, creds, l
func (_m *anonymousAuthType) checkCredentials(authType model.AuthType, appType model.ApplicationType, appOrg model.ApplicationOrganization, creds string, l *logs.Log) (string, map[string]interface{}, error) {
	ret := _m.Called(authType, appType, appOrg, creds, l)

	var r0 string
	if rf, ok := ret.Get(0).(func(model.AuthType, model.ApplicationType, model.ApplicationOrganization, string, *logs.Log) string); ok {
		r0 = rf(authType, appType, appOrg, creds, l)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 map[string]interface{}
	if rf, ok := ret.Get(1).(func(model.AuthType, model.ApplicationType, model.ApplicationOrganization, string, *logs.Log) map[string]interface{}); ok {
		r1 = rf(authType, appType, appOrg, creds, l)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(map[string]interface{})
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(model.AuthType, model.ApplicationType, model.ApplicationOrganization, string, *logs.Log) error); ok {
		r2 = rf(authType, appType, appOrg, creds, l)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
